<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Richard JE Cooke</title>
  
  
  <link href="https://richardcooke.info/atom.xml" rel="self"/>
  
  <link href="https://richardcooke.info/"/>
  <updated>2022-05-27T17:09:22.436Z</updated>
  <id>https://richardcooke.info/</id>
  
  <author>
    <name>Richard JE Cooke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Switching from Wordpress to Hexo</title>
    <link href="https://richardcooke.info/en/2018/switching-from-wordpress-to-hexo/"/>
    <id>https://richardcooke.info/en/2018/switching-from-wordpress-to-hexo/</id>
    <published>2018-09-03T12:33:09.000Z</published>
    <updated>2022-05-27T17:09:22.436Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve just deleted my old Wordpress site and switched to <a href="https://hexo.io/">Hexo.js</a>.</p><h2 id="Hexo-benefits"><a href="#Hexo-benefits" class="headerlink" title="Hexo benefits"></a>Hexo benefits</h2><ul><li>Far faster and easier to work with. Posts are just Markdown files I create in Visual Studio Code, commit in git, and hit <code>./node_modules/.bin/hexo deploy</code>. My updated site is automatically uploaded to my web server, bitbucket pages, and github pages.</li><li>My site will last forever. Even once I die and stop paying for my domain name the site will live on bitbucket and github for free for as long as they last.</li><li>Better control. No need to hassle with Wordpress altering all your writing when you switch between text and visual mode. And if I want to create a custom layout I just make an HTML page however I want and I’m done.</li><li>No hassling with themes and visual editors. It’s just CSS and HTML files in your project folder.</li><li>No plugins&#x2F;updates&#x2F;security woes. The site is just HTML pages and JS I upload so there’s zero maintenance.</li><li>The Hexo docs themselves are written in Hexo. I’ve found poor information that I corrected in a fork of the site and submitted to the maintainers in a pull request.</li></ul><h2 id="Reasons-not-use-Hexo"><a href="#Reasons-not-use-Hexo" class="headerlink" title="Reasons not use Hexo"></a>Reasons not use Hexo</h2><ul><li>If you’re maintaining a site with lots of people who aren’t programmers</li><li>If the site needs lots of plugins like ecommerce</li><li>If you’re building the site for a customer and someone else will maintain it.</li></ul><p>Basically it’s great for a personal or project page, not for  multi-user web apps.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve just deleted my old Wordpress site and switched to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo.js&lt;/a&gt;</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="javascript" scheme="https://richardcooke.info/tags/javascript/"/>
    
    <category term="wordpress" scheme="https://richardcooke.info/tags/wordpress/"/>
    
    <category term="hexo" scheme="https://richardcooke.info/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>How to install Reaper, Drum Pro, and Helm synthesizer in Ubuntu Linux fast &amp; easily</title>
    <link href="https://richardcooke.info/en/2018/how-to-install-reaper-drum-pro-and-helm-synthesizer-in-ubuntu-linux-fast-easily/"/>
    <id>https://richardcooke.info/en/2018/how-to-install-reaper-drum-pro-and-helm-synthesizer-in-ubuntu-linux-fast-easily/</id>
    <published>2018-01-09T03:58:43.000Z</published>
    <updated>2022-05-27T17:09:22.381Z</updated>
    
    <content type="html"><![CDATA[<p>It used to be hard, now it’s quick, and it works. This quick set of steps shows to install Reaper as fast as possible, as well as two free VST plugins - a clear synthesizer with useful presets, and a decent drum machine.</p><h2 id="The-commands"><a href="#The-commands" class="headerlink" title="The commands"></a>The commands</h2><ul><li>In a console run <code>sudo apt install jack</code></li><li>Install PlayOnLinux through the software manager</li><li>Download 32 bit <a href="https://www.reaper.fm/download.php">Reaper</a>, <a href="http://tytel.org/helm/direct_downloads/">Helm</a>, <a href="https://www.studiolinked.com/drum-pro/">Drum Pro</a></li><li>Run PlayOnLinux and install all three apps in the same virtual drive (you can use the default drive)</li><li>Run Reaper, select the default WaveOut audio (it won’t play yet), restart PlayOnLinux and Reaper (audio now works)</li><li>Set the VST plugins folder to include Helm and Drum Pro (<code>/home/PlayOnLinux&#39;s virtual drives/drive_c/Program Files/VstPlugins</code> and the Steinberg folder too)</li><li>Add two new tracks in a Reaper project, add your free synth and drums and write music. Easy.</li></ul><h2 id="Stuff-that-doesn’t-work"><a href="#Stuff-that-doesn’t-work" class="headerlink" title="Stuff that doesn’t work"></a>Stuff that doesn’t work</h2><p>I ignored anything online I found about wineasio because I couldn’t get it to work.</p><p>I tried LMMS too but it couldn’t run either plugin - they showed up as blank GUI boxes. And installing the Linux version of Helm seems pointless as all Linux DAWs run only Windows VSTs.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;It used to be hard, now it’s quick, and it works</summary>
        
      
    
    
    
    <category term="music" scheme="https://richardcooke.info/categories/music/"/>
    
    
    <category term="reaper" scheme="https://richardcooke.info/tags/reaper/"/>
    
    <category term="helm" scheme="https://richardcooke.info/tags/helm/"/>
    
    <category term="linux" scheme="https://richardcooke.info/tags/linux/"/>
    
    <category term="ubuntu" scheme="https://richardcooke.info/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>How to make a video in Reaper</title>
    <link href="https://richardcooke.info/en/2017/how-to-make-a-video-in-reaper/"/>
    <id>https://richardcooke.info/en/2017/how-to-make-a-video-in-reaper/</id>
    <published>2017-08-17T15:07:53.000Z</published>
    <updated>2022-05-27T17:09:22.325Z</updated>
    
    <content type="html"><![CDATA[<p>This short tutorial shows you how to edit photos or videos into a single video with transitions and effects using only Reaper’s native functionality. It’s a great way to use a few photos to make a music video or speak over a desktop recording to make a how-to video.</p><h2 id="1-Add-two-tracks-and-some-photos-the-top-track-layer-of-video-always-shows-over-the-bottom-one"><a href="#1-Add-two-tracks-and-some-photos-the-top-track-layer-of-video-always-shows-over-the-bottom-one" class="headerlink" title="1) Add two tracks and some photos (the top track (layer) of video always shows over the bottom one)"></a>1) Add two tracks and some photos (the top track (layer) of video always shows over the bottom one)</h2><p><img src="/reaper_vid_1.gif"></p><h2 id="2-Add-the-video-plugin-set-the-preset-and-add-an-opacity-automation-envelope-to-create-a-crossfade"><a href="#2-Add-the-video-plugin-set-the-preset-and-add-an-opacity-automation-envelope-to-create-a-crossfade" class="headerlink" title="2) Add the video plugin, set the preset, and add an opacity automation envelope to create a crossfade"></a>2) Add the video plugin, set the preset, and add an opacity automation envelope to create a crossfade</h2><p><img src="/reaper_vid_2.gif"></p><h2 id="3-Add-more-preset-effects-like-stage-lighting-and-zoom-amp-pan-to-create-a-Ken-Burns-effect-optional"><a href="#3-Add-more-preset-effects-like-stage-lighting-and-zoom-amp-pan-to-create-a-Ken-Burns-effect-optional" class="headerlink" title="3) Add more preset effects, like stage lighting, and zoom &amp; pan to create a Ken Burns effect (optional)"></a>3) Add more preset effects, like stage lighting, and zoom &amp; pan to create a Ken Burns effect (<em>optional</em>)</h2><p><img src="/reaper_vid_3.gif"></p><h2 id="4-Render-the-video"><a href="#4-Render-the-video" class="headerlink" title="4) Render the video"></a>4) Render the video</h2><p><img src="/reaper_vid_4.gif"><br>Use the webm format as the others are huge. 25 fps. 1920x1080. A couple of minutes shouldn’t be more than 100Mb.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This short tutorial shows you how to edit photos or videos into a single video with transitions and effects using only Reaper’s native functionality</summary>
        
      
    
    
    
    <category term="software" scheme="https://richardcooke.info/categories/software/"/>
    
    
    <category term="reaper" scheme="https://richardcooke.info/tags/reaper/"/>
    
    <category term="video" scheme="https://richardcooke.info/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>Which referencing system is best? (or why footnotes suck and numbers rule)</title>
    <link href="https://richardcooke.info/en/2017/which-referencing-system-is-best-or-why-footnotes-suck-and-numbers-rule/"/>
    <id>https://richardcooke.info/en/2017/which-referencing-system-is-best-or-why-footnotes-suck-and-numbers-rule/</id>
    <published>2017-06-23T23:38:54.000Z</published>
    <updated>2022-05-27T17:09:22.317Z</updated>
    
    <content type="html"><![CDATA[<p>If you do any academic writing you have to cite your sources using a referencing system. Sadly you probably have to use whatever system is the norm in your field, but if you have a choice which is the best to use?</p><p>The short answer - the ACM or Vancouver system.</p><p>To see why, read my ranking of the three common systems below.</p><h2 id="The-horrible-footnotes-Chicago"><a href="#The-horrible-footnotes-Chicago" class="headerlink" title="The horrible: footnotes (Chicago)"></a>The horrible: footnotes (Chicago)</h2><p>In this system every citation is a footnote at the bottom of the page consisting of the source’s entire details, in a slightly different format to the source’s details in the bibliography. Differences include ridiculous things like swapping the order of first name and surname of authors.</p><p>It looks like this on the page:<br><img src="/chicago_system.png" alt="Chicago footnotes"></p><p>It looks like this in the bibliography:<br><img src="/chicago_system_bibliography.png" alt="Chigaco bibliography"></p><p>It’s horrible because:</p><ul><li>The footnotes take up a huge amount of unnecessary space making your writing look cluttered and ugly.</li><li>You have to copy and paste the entire footnote line for every citation.</li><li>You have to write and maintain two entirely separate lists of sources with tiny formatting differences - one for the footnotes and one for the bibliography. This makes it impossible to use any citation software tool because they all keep source lists in just one format.</li><li>Whenever you change the the order of citations you have to check if you’re referencing a source for the first time due to your change, because there’s yet ANOTHER way of referencing sources that have been mentioned before.</li><li>Whenever you change the order of citations you have to check if you’re referencing the same source as the previous line, because there’s a FOURTH way of referencing sources from the previous line: ‘ibid’. (I kid you not, there are seriously four ways of referencing one source in this monstrosity of a system.)</li></ul><p>The amount of extra work this system creates is disgusting. I’m stunned it is still in use in 21st century academics when it appears to be designed by a drunk chimpanzee.</p><h2 id="The-decent-author-date-APA-x2F-Harvard"><a href="#The-decent-author-date-APA-x2F-Harvard" class="headerlink" title="The decent: author-date (APA &#x2F; Harvard)"></a>The decent: author-date (APA &#x2F; Harvard)</h2><p>Here you refer to a source by surname and year in your text. It makes the text itself more cluttered than using footnotes but overall the page looks much less cluttered. It also means you can copy and paste the same citation anywhere in the text in any order, and thus you can use a citation software tool with ease.</p><p>It looks like this:<br><img src="/apa_style.png" alt="APA style"></p><h2 id="The-sublime-author-number-ACM-x2F-Vancouver"><a href="#The-sublime-author-number-ACM-x2F-Vancouver" class="headerlink" title="The sublime: author-number (ACM &#x2F; Vancouver)"></a>The sublime: author-number (ACM &#x2F; Vancouver)</h2><p>The number system is best. No wonder it’s used by programmers and doctors. In this system you simply put a number in your text that matches the source in your bibliography. Fast, neat, easy to use.</p><p>Use this beautiful system if you ever have a choice.</p><p>The ACM system numbers references by the author’s surname and the Vancouver system by where the order in which they appear in the text. No material difference there.</p><p>Vancouver looks like this in the text:</p><p><img src="/vancouver_text.png" alt="Vancouver system text"></p><p>and this in the bibliography:</p><p><img src="/vancouver_bibliography.png"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you do any academic writing you have to cite your sources using a referencing system</summary>
        
      
    
    
    
    <category term="uncategorized" scheme="https://richardcooke.info/categories/uncategorized/"/>
    
    
    <category term="academics" scheme="https://richardcooke.info/tags/academics/"/>
    
    <category term="citations" scheme="https://richardcooke.info/tags/citations/"/>
    
    <category term="referencing system" scheme="https://richardcooke.info/tags/referencing-system/"/>
    
  </entry>
  
  <entry>
    <title>How to create animated SVGs (and display them in WordPress)</title>
    <link href="https://richardcooke.info/en/2017/how-to-create-animated-svgs-and-display-them-in-wordpress/"/>
    <id>https://richardcooke.info/en/2017/how-to-create-animated-svgs-and-display-them-in-wordpress/</id>
    <published>2017-01-29T12:16:39.000Z</published>
    <updated>2022-05-27T17:09:22.293Z</updated>
    
    <content type="html"><![CDATA[<p>Animated SVGs are great for animated logos, custom spinners, and other artwork that makes your site look sophisticated, beautiful, and full of character. </p><p>They are also tiny in file size, and can resize to any screen size without degrading - unlike videos and .gifs.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><!DOCTYPE html><html>  <head>    <meta charset="UTF-8">    <script src="https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js"></script>  </head>  <body>    <svg      xmlns:dc="http://purl.org/dc/elements/1.1/"      xmlns:cc="http://creativecommons.org/ns#"      xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"      xmlns:svg="http://www.w3.org/2000/svg"      xmlns="http://www.w3.org/2000/svg"      xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"      xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"      width="400"      height="400"      viewBox="0 0 105.83333 105.83333"      version="1.1"      id="svg8"      inkscape:version="0.92.0 r15299"      sodipodi:docname="house.svg">      <defs        id="defs2">        <filter          style="color-interpolation-filters:sRGB;"          inkscape:label="Blur"          id="filter4598">          <feGaussianBlur            stdDeviation="0.5 0.4"            result="blur"            id="feGaussianBlur4596" />        </filter>        <filter          style="color-interpolation-filters:sRGB;"          inkscape:label="Blur"          id="filter4634">          <feGaussianBlur            stdDeviation="0.5 0.5"            result="blur"            id="feGaussianBlur4632" />        </filter>        <filter          style="color-interpolation-filters:sRGB"          inkscape:label="Blur"          id="filter4634-3">          <feGaussianBlur            stdDeviation="0.5 0.5"            result="blur"            id="feGaussianBlur4632-1" />        </filter>      </defs>      <sodipodi:namedview        id="base"        pagecolor="#ffffff"        bordercolor="#666666"        borderopacity="1.0"        inkscape:pageopacity="0.0"        inkscape:pageshadow="2"        inkscape:zoom="2"        inkscape:cx="248.69088"        inkscape:cy="193.43717"        inkscape:document-units="mm"        inkscape:current-layer="layer3"        showgrid="false"        units="px"        inkscape:showpageshadow="false"        inkscape:window-width="1920"        inkscape:window-height="1057"        inkscape:window-x="1912"        inkscape:window-y="-8"        inkscape:window-maximized="1">        <inkscape:grid          type="xygrid"          id="grid4510" />      </sodipodi:namedview>      <metadata        id="metadata5">        <rdf:RDF>          <cc:Work            rdf:about="">            <dc:format>image/svg+xml</dc:format>            <dc:type              rdf:resource="http://purl.org/dc/dcmitype/StillImage" />            <dc:title></dc:title>          </cc:Work>        </rdf:RDF>      </metadata>      <g        inkscape:groupmode="layer"        id="layer2"        inkscape:label="bg"        sodipodi:insensitive="true">        <rect          style="fill:#348aff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1.22344589;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"          id="rect4485"          width="105.83334"          height="105.83334"          x="3.5527137e-015"          y="-1.0172526e-005" />      </g>      <g        inkscape:label="roof"        inkscape:groupmode="layer"        id="layer1"        transform="translate(0,-191.16667)"        sodipodi:insensitive="true">        <path          style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.79374999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"          d="m 17.991667,270.54167 35.454165,-35.71875 7e-6,6.61458 -28.839584,29.10417 z"          id="rect4487"          inkscape:connector-curvature="0"          sodipodi:nodetypes="ccccc" />        <path          style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.79374999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"          d="m 88.829853,270.54167 -35.454164,-35.71875 -8e-6,6.61458 28.839583,29.10417 z"          id="rect4487-6"          inkscape:connector-curvature="0"          sodipodi:nodetypes="ccccc" />        <rect          style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.64275998;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"          id="rect4527"          width="5.291667"          height="11.641666"          x="71.834381"          y="247.25833" />        <rect          style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.62937742;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"          id="rect4534"          width="2.6759853"          height="7.8109517"          x="70.14061"          y="247.25833" />      </g>      <g        inkscape:groupmode="layer"        id="gsmoke"        inkscape:label="smoke">        <circle          style="fill:#ffffff;fill-opacity:0.46261686;fill-rule:nonzero;stroke:none;stroke-width:0.79374999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter4598)"          id="smoke"          cx="73.626945"          cy="59.90966"          r="2.8442707" />      </g>    </svg>    <script>      var s = Snap("#smoke");      var go = function animate(){        s.attr({cy: 60, r: 2});        s.animate({cy: -10, r: 12}, 3000);        setTimeout(go, 3000);      }      go();    </script>  </body></html><h2 id="Options-not-really"><a href="#Options-not-really" class="headerlink" title="Options (not really)"></a>Options (not really)</h2><p>There are three ways to animate an svg, but only the last has a future:</p><ol><li>SMIL - the internal SVG animation language</li><li>Internal Javascript (JS)</li><li>External CSS or JS</li></ol><h3 id="SMIL"><a href="#SMIL" class="headerlink" title="SMIL"></a>SMIL</h3><p>Was never supported by Internet Explorer &#x2F; Edge and will be deprecated by Chrome because it never became popular.  Which is a pity, because it’s the most elegant solution - animation elements can be kept neatly inside the svg itself, which means it’s modular and reusable. There’s a <a href="https://github.com/ericwilligers/svg-animation">polyfill</a>, but it hasn’t been touched in a year and the author is missing. It seems SMIL is dead. </p><h3 id="Internal-JS"><a href="#Internal-JS" class="headerlink" title="Internal JS"></a>Internal JS</h3><p>Is modular and reusable, but is incompatible with frameworks like Wordpress, and not that secure as you’re allowing external JS on your site.</p><h3 id="External-CSS-x2F-JS"><a href="#External-CSS-x2F-JS" class="headerlink" title="External CSS&#x2F;JS"></a>External CSS&#x2F;JS</h3><p>This is the only real option. You animate your svg with CSS animations or <a href="http://snapsvg.io/">Snap</a>. It means you have to coordinate both the SVG code and the CSS code and JS code on your page.</p><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><p>The paid way (I haven’t tried it): <a href="https://blogs.adobe.com/creativecloud/export-svg-animations-for-the-web-with-snap-svg/">https://blogs.adobe.com/creativecloud/export-svg-animations-for-the-web-with-snap-svg/</a>. </p><p>The free way: Either draw your SVG first in <a href="https://inkscape.org/en/download/">Inkscape</a> and then animate it in Snap, or just do everything in Snap from the beginning: <a href="http://snapsvg.io/start/">https://github.com/ericwilligers/svg-animation.</a> </p><p>Writing this tutorial I found Snap hard to use - the documentation is just one long API with no example.  I’d rather try svg.js or something else in future: <a href="http://noeticforce.com/Javascript-libraries-for-svg-animation">http://noeticforce.com/Javascript-libraries-for-svg-animation</a>.</p><h2 id="Add-SVGs-to-WordPress"><a href="#Add-SVGs-to-WordPress" class="headerlink" title="Add SVGs to WordPress"></a>Add SVGs to WordPress</h2><p>To upload svgs to WordPress use the <a href="https://wordpress.org/plugins/svg-support/">SVG Support</a> plugin. </p><p>You still have to add the custom JS though for it to animate.  I find it easier just dump the whole lot of raw code into my page for now using: <a href="https://wordpress.org/plugins/raw-html/">https://wordpress.org/plugins/raw-html/</a></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>The image above is generated using the <code>{% raw %}</code> tag in Hexo (or the plugin above in Wordpress) with this code:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">svg</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:dc</span>=<span class="string">&quot;http://purl.org/dc/elements/1.1/&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:cc</span>=<span class="string">&quot;http://creativecommons.org/ns#&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:rdf</span>=<span class="string">&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:svg</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:sodipodi</span>=<span class="string">&quot;http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:inkscape</span>=<span class="string">&quot;http://www.inkscape.org/namespaces/inkscape&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">width</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">viewBox</span>=<span class="string">&quot;0 0 105.83333 105.83333&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">&quot;svg8&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">inkscape:version</span>=<span class="string">&quot;0.92.0 r15299&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">sodipodi:docname</span>=<span class="string">&quot;house.svg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">defs</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;defs2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;color-interpolation-filters:sRGB;&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">inkscape:label</span>=<span class="string">&quot;Blur&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;filter4598&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">feGaussianBlur</span></span></span><br><span class="line"><span class="tag">            <span class="attr">stdDeviation</span>=<span class="string">&quot;0.5 0.4&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">result</span>=<span class="string">&quot;blur&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">id</span>=<span class="string">&quot;feGaussianBlur4596&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;color-interpolation-filters:sRGB;&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">inkscape:label</span>=<span class="string">&quot;Blur&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;filter4634&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">feGaussianBlur</span></span></span><br><span class="line"><span class="tag">            <span class="attr">stdDeviation</span>=<span class="string">&quot;0.5 0.5&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">result</span>=<span class="string">&quot;blur&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">id</span>=<span class="string">&quot;feGaussianBlur4632&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;color-interpolation-filters:sRGB&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">inkscape:label</span>=<span class="string">&quot;Blur&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;filter4634-3&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">feGaussianBlur</span></span></span><br><span class="line"><span class="tag">            <span class="attr">stdDeviation</span>=<span class="string">&quot;0.5 0.5&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">result</span>=<span class="string">&quot;blur&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">id</span>=<span class="string">&quot;feGaussianBlur4632-1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">sodipodi:namedview</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;base&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">pagecolor</span>=<span class="string">&quot;#ffffff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">bordercolor</span>=<span class="string">&quot;#666666&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">borderopacity</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:pageopacity</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:pageshadow</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:zoom</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:cx</span>=<span class="string">&quot;248.69088&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:cy</span>=<span class="string">&quot;193.43717&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:document-units</span>=<span class="string">&quot;mm&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:current-layer</span>=<span class="string">&quot;layer3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">showgrid</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">units</span>=<span class="string">&quot;px&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:showpageshadow</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:window-width</span>=<span class="string">&quot;1920&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:window-height</span>=<span class="string">&quot;1057&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:window-x</span>=<span class="string">&quot;1912&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:window-y</span>=<span class="string">&quot;-8&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:window-maximized</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">inkscape:grid</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;xygrid&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;grid4510&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">sodipodi:namedview</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">metadata</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;metadata5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rdf:RDF</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">cc:Work</span></span></span><br><span class="line"><span class="tag">            <span class="attr">rdf:about</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dc:format</span>&gt;</span>image/svg+xml<span class="tag">&lt;/<span class="name">dc:format</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dc:type</span></span></span><br><span class="line"><span class="tag">              <span class="attr">rdf:resource</span>=<span class="string">&quot;http://purl.org/dc/dcmitype/StillImage&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dc:title</span>&gt;</span><span class="tag">&lt;/<span class="name">dc:title</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">cc:Work</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rdf:RDF</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">metadata</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">g</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:groupmode</span>=<span class="string">&quot;layer&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;layer2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:label</span>=<span class="string">&quot;bg&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">sodipodi:insensitive</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rect</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;fill:#348aff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1.22344589;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;rect4485&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">width</span>=<span class="string">&quot;105.83334&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">height</span>=<span class="string">&quot;105.83334&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">x</span>=<span class="string">&quot;3.5527137e-015&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">y</span>=<span class="string">&quot;-1.0172526e-005&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">g</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:label</span>=<span class="string">&quot;roof&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:groupmode</span>=<span class="string">&quot;layer&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;layer1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">transform</span>=<span class="string">&quot;translate(0,-191.16667)&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">sodipodi:insensitive</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.79374999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">d</span>=<span class="string">&quot;m 17.991667,270.54167 35.454165,-35.71875 7e-6,6.61458 -28.839584,29.10417 z&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;rect4487&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">inkscape:connector-curvature</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">sodipodi:nodetypes</span>=<span class="string">&quot;ccccc&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.79374999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">d</span>=<span class="string">&quot;m 88.829853,270.54167 -35.454164,-35.71875 -8e-6,6.61458 28.839583,29.10417 z&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;rect4487-6&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">inkscape:connector-curvature</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">sodipodi:nodetypes</span>=<span class="string">&quot;ccccc&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rect</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.64275998;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;rect4527&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">width</span>=<span class="string">&quot;5.291667&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">height</span>=<span class="string">&quot;11.641666&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">x</span>=<span class="string">&quot;71.834381&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">y</span>=<span class="string">&quot;247.25833&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rect</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.62937742;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;rect4534&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">width</span>=<span class="string">&quot;2.6759853&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">height</span>=<span class="string">&quot;7.8109517&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">x</span>=<span class="string">&quot;70.14061&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">y</span>=<span class="string">&quot;247.25833&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">g</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:groupmode</span>=<span class="string">&quot;layer&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">&quot;gsmoke&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">inkscape:label</span>=<span class="string">&quot;smoke&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">circle</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;fill:#ffffff;fill-opacity:0.46261686;fill-rule:nonzero;stroke:none;stroke-width:0.79374999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter4598)&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;smoke&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">cx</span>=<span class="string">&quot;73.626945&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">cy</span>=<span class="string">&quot;59.90966&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">r</span>=<span class="string">&quot;2.8442707&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> s = <span class="title class_">Snap</span>(<span class="string">&quot;#smoke&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> go = <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        s.<span class="title function_">attr</span>(&#123;<span class="attr">cy</span>: <span class="number">60</span>, <span class="attr">r</span>: <span class="number">2</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">        s.<span class="title function_">animate</span>(&#123;<span class="attr">cy</span>: -<span class="number">10</span>, <span class="attr">r</span>: <span class="number">12</span>&#125;, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(go, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">go</span>();</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Animated SVGs are great for animated logos, custom spinners, and other artwork that makes your site look sophisticated, beautiful, and full of character</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    <category term="design" scheme="https://richardcooke.info/categories/coding/design/"/>
    
    <category term="art" scheme="https://richardcooke.info/categories/coding/design/art/"/>
    
    
    <category term="animation" scheme="https://richardcooke.info/tags/animation/"/>
    
    <category term="svg" scheme="https://richardcooke.info/tags/svg/"/>
    
  </entry>
  
  <entry>
    <title>How to choose a WordPress theme: Avada vs Enfold vs X vs Jupiter vs Divi vs Beaver Builder vs Genesis</title>
    <link href="https://richardcooke.info/en/2017/how-to-choose-a-wordpress-theme-avada-enfold-x-jupiter-divi-beaver-builder-genesis/"/>
    <id>https://richardcooke.info/en/2017/how-to-choose-a-wordpress-theme-avada-enfold-x-jupiter-divi-beaver-builder-genesis/</id>
    <published>2017-01-28T21:14:05.000Z</published>
    <updated>2022-05-27T17:09:22.292Z</updated>
    
    <content type="html"><![CDATA[<p>Are you trying to choose your first WordPress theme and starting down a rabbit hole of review websites, YouTube reviews, and dazzling sales pages?  I’ve just finished that process and have the best answer for you.</p><h2 id="Envato"><a href="#Envato" class="headerlink" title="Envato"></a>Envato</h2><p>I started at <a href="https://themeforest.net/popular_item/by_category?category=wordpress">ThemeForest</a> (Envato) looking at the top selling themes: Avada, X, Jupiter, Enfold.</p><p>These are $60 each for a year for use on one site and have visual page builders and lots of fancy plugin widgets. Seems good, I thought, now to review and pick one.</p><h2 id="Divi"><a href="#Divi" class="headerlink" title="Divi"></a>Divi</h2><p>Then I discovered <a href="https://www.elegantthemes.com/gallery/divi/">Divi</a> by Elegant Themes and realised that Envato’s cost &amp; licenses are restrictive and expensive for the features they offer. </p><p>In contrast, an Elegant Themes lifetime membership is only $250 to use <strong>all</strong> their themes and plugins on unlimited sites (including clients) forever (or you can pay $90 per site if you prefer). </p><p>Their visual page builder looks simple, they have lots of templates, and lots of powerful widgets.</p><h2 id="The-problem-with-themes"><a href="#The-problem-with-themes" class="headerlink" title="The problem with themes"></a>The problem with themes</h2><p>Before I purchased Divi I Googled one last concept that no theme reviews mention: <strong>code cleanliness and reusability</strong> (which is important to programmers like me, but not so much to designers &amp; YouTube entrepreneurs that do most WordPress theme reviews). </p><p>Luckily I found this life changing article: <a href="http://chrislema.com/divi-theme-forever/">http://chrislema.com/divi-theme-forever/</a>. Basically it says that all the themes I mentioned above use [shortcodes] - snippets of text that a theme uses as special instructions to display your site that become pages of meaningless garbage if you ever try to change your theme. Go see the image in the article I just linked. </p><p>Ideally, a theme should just save CSS &amp; HTML, and <strong>never</strong> use shortcodes (that’s what plugins are for). </p><p>If you use any of the themes above then the sites you build will probably never be able to change theme and you make maintainability vastly more difficult for the programmers who work on them next.</p><h2 id="Beaver-Builder"><a href="#Beaver-Builder" class="headerlink" title="Beaver Builder"></a>Beaver Builder</h2><p>There is one only visual page builder that doesn’t use shortcodes: <a href="https://www.wpbeaverbuilder.com/">Beaver Builder</a>. This means you can use it to quickly build a site visually, like the other themes above that use Visual Composer and Cornerstone and Divi as their page builders. Beaver just outputs HTML &amp; CSS, so if you ever change theme your content will still be usable. And you can carry on using Beaver Builder with the new theme. It comes with a good theme too, that has over a dozen page templates and layouts - Beaver Theme. </p><p>It’s $199 to use on unlimited sites forever, but you get updates &amp; support only for a year, so it’s more expensive than Divi.  And it has fewer widgets than other themes, so you’ll have to do a bit of hand-coding for more complex work, or buy an add-on. </p><p>Later if you need more clean themes to use it with, look at the <a href="http://www.studiopress.com/">Genesis Framework</a>, where you can buy shortcode-free themes that work well with Beaver. $500 for all their themes forever.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Buy a Pro Beaver Builder + Theme license to make clean sites easily if you care about maintaining sites in the future. </p><p>But if you’re making lots of small once-off sites that you don’t care at all about maintaining in the future, never edit the CSS manually yourself for custom styles, or never changing theme, then an Elegant Themes (Divi) membership might be better for you.</p><blockquote><p>UPDATE 2018:<br>Beaver Builder is not as great as I thought initially. Firstly, it completely disables writing pages and posts in text - instead you have to use their graphical editor forevermore. Secondly, once the subscription expires if you upgrade wordpress you can no longer edit your pages! I’ve thus switched to <a href="https://hexo.io/">Hexo</a>, a static site generator, for my homepage. If I were to make a site for someone else that had to use Wordpress I would just make a custom theme in CSS, or use a Divi theme. And teach my client how to write their posts in <a href="https://en.support.wordpress.com/markdown/">Markdown on Wordpress</a> after all the hassle I’ve had with Wordpress altering my markup when saving, and all my tables breaking when changing table plugins.</p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Are you trying to choose your first WordPress theme and starting down a rabbit hole of review websites, YouTube reviews, and dazzling sales pages?  I’ve just finished that process and have the best</summary>
        
      
    
    
    
    <category term="wordpress" scheme="https://richardcooke.info/categories/wordpress/"/>
    
    
    <category term="avada" scheme="https://richardcooke.info/tags/avada/"/>
    
    <category term="beaver builder" scheme="https://richardcooke.info/tags/beaver-builder/"/>
    
    <category term="divi" scheme="https://richardcooke.info/tags/divi/"/>
    
    <category term="enfold" scheme="https://richardcooke.info/tags/enfold/"/>
    
    <category term="envato" scheme="https://richardcooke.info/tags/envato/"/>
    
    <category term="genesis" scheme="https://richardcooke.info/tags/genesis/"/>
    
    <category term="jupiter" scheme="https://richardcooke.info/tags/jupiter/"/>
    
    <category term="wordpress" scheme="https://richardcooke.info/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>How to run your tests against an in-memory database (with a Rails Rspec MySql example)</title>
    <link href="https://richardcooke.info/en/2017/how-to-run-your-tests-against-an-in-memory-database-with-a-rails-rspec-mysql-example/"/>
    <id>https://richardcooke.info/en/2017/how-to-run-your-tests-against-an-in-memory-database-with-a-rails-rspec-mysql-example/</id>
    <published>2017-01-17T09:29:02.000Z</published>
    <updated>2022-05-27T17:09:22.312Z</updated>
    
    <content type="html"><![CDATA[<p>Are your tests too slow because each one recreates the database?  Run them all in memory to make them rapid.  This will work for any database and programming language.</p><p>My example here uses MySql, Ruby on Rails, and Rspec. Here’s how fast my tests ran before: <img src="/before_test.gif" alt="before_test"></p><p>And after:</p><p><img src="/after_test.gif"></p><h2 id="How-to"><a href="#How-to" class="headerlink" title="How to"></a>How to</h2><p>(I use docker because I assume you already have a local database that you don’t want to move entirely into memory, but if you don’t have one already then you don’t need docker - just install MySql locally into your tmpfs.) Install docker-compose if you don’t have it:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.9.0/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose &amp;&amp;</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>Now create a docker-compose.yml file for your test database (I put mine in script&#x2F;test&#x2F;test.sh).</p><p>Note that it uses your pc’s &#x2F;dev&#x2F;shm folder, which is entirely in RAM:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">example</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dev/shm/mysql:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">33006</span><span class="string">:3306</span></span><br></pre></td></tr></table></figure><p>Set your test database connection in your config&#x2F;database.yml file:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test:</span> <span class="meta">&amp;test</span></span><br><span class="line">  <span class="attr">adapter:</span> <span class="string">mysql2</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">rc_test</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">example</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">33006</span></span><br></pre></td></tr></table></figure><p>And finally create &#x2F;script&#x2F;test&#x2F;test.sh to run everything:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">clear</span><br><span class="line"><span class="built_in">set</span> -e <span class="comment"># any commands which fail will cause the shell script to exit immediately</span></span><br><span class="line"><span class="built_in">set</span> -x <span class="comment"># echo off (-x for echo on)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Run this command from the project root folder (./script/test/test.sh)&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;(Before running this for the first time run: cd script/test &amp;&amp; docker-compose up)&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">cd</span> script/test</span><br><span class="line"><span class="built_in">mkdir</span> -p /dev/shm/mysql <span class="comment"># /dev/shm is a RAM folder (tmpfs)</span></span><br><span class="line">docker-compose up -d <span class="comment">#detached</span></span><br><span class="line"><span class="built_in">sleep</span> 2 <span class="comment">#wait for containers to start</span></span><br><span class="line"><span class="built_in">cd</span> ../..</span><br><span class="line">mysql -h 0.0.0.0 -P 33006 -u root -pexample -e <span class="string">&quot;DROP DATABASE IF EXISTS rental_connect_test;&quot;</span></span><br><span class="line">mysql -h 0.0.0.0 -P 33006 -u root -pexample -e <span class="string">&quot;CREATE DATABASE rental_connect_test;&quot;</span></span><br><span class="line">RAILS_ENV=<span class="built_in">test</span> bundle <span class="built_in">exec</span> rake db:migrate</span><br><span class="line">bundle <span class="built_in">exec</span> rspec</span><br><span class="line"><span class="built_in">cd</span> script/test</span><br><span class="line">docker-compose stop</span><br><span class="line"><span class="built_in">cd</span> ../..</span><br></pre></td></tr></table></figure><p>Now run your tests by typing <code>./script/test/test.sh</code>.</p><h2 id="Apple"><a href="#Apple" class="headerlink" title="Apple"></a>Apple</h2><p>The above works on Ubuntu. For OSX you’ll first have to create your own RAM disk in place of &#x2F;dev&#x2F;shm:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdiutil attach -nomount ram://$((<span class="number">2</span> * <span class="number">1024</span> * <span class="number">500</span>))</span><br><span class="line">diskutil eraseVolume HFS+ RAMDisk /dev/disk2</span><br></pre></td></tr></table></figure><p>Alternatively you can use a database inside a Docker container (because that container has its own RAM disk folder already). Then whenever you start that container, you’d run this script inside it to move the MySql data folder into RAM:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">start_mysql.sh</span><br><span class="line">/etc/init.d/mysql start &amp;&amp;</span><br><span class="line">/etc/init.d/mysql stop &amp;&amp;</span><br><span class="line"><span class="built_in">cp</span> -R -p /var/lib/mysql /dev/shm &amp;&amp;</span><br><span class="line">sed -i -e s,/var/lib/mysql,/dev/shm/mysql,g /etc/mysql/my.cnf &amp;&amp;</span><br><span class="line">/etc/init.d/mysql start</span><br></pre></td></tr></table></figure><p>(Remember this has to run every time you start the container because RAM disappears after you turn off a computer)</p><h2 id="Update-a-much-easier-way"><a href="#Update-a-much-easier-way" class="headerlink" title="Update (a much easier way)"></a>Update (a much easier way)</h2><p><a href="https://stackoverflow.com/questions/42226418/how-to-move-postresql-to-ram-disk-in-docker">StackOverflow</a> has given me a much easier way than the above. Docker takes a –tmpfs flag that mounts a memory folder for you. Here’s an example for Postgresql:</p><p><code>docker run -d --tmpfs=/pgtmpfs -p 6000:5432 -e PGDATA=/pgtmpfs postgres:9.6</code></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Are your tests too slow because each one recreates the database?  Run them all in memory to make them rapid.  This will work for any database and programming language</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="testing" scheme="https://richardcooke.info/tags/testing/"/>
    
    <category term="mysql" scheme="https://richardcooke.info/tags/mysql/"/>
    
    <category term="rails" scheme="https://richardcooke.info/tags/rails/"/>
    
    <category term="rAM" scheme="https://richardcooke.info/tags/rAM/"/>
    
    <category term="rspec" scheme="https://richardcooke.info/tags/rspec/"/>
    
  </entry>
  
  <entry>
    <title>How to post cron job results or any other script to Slack</title>
    <link href="https://richardcooke.info/en/2017/how-to-post-cron-job-results-or-any-other-script-to-slack/"/>
    <id>https://richardcooke.info/en/2017/how-to-post-cron-job-results-or-any-other-script-to-slack/</id>
    <published>2017-01-05T10:16:42.000Z</published>
    <updated>2022-05-27T17:09:22.310Z</updated>
    
    <content type="html"><![CDATA[<p>Setting up email for cron job results is more complicated than using Slack. And is dangerous when users become accustomed to lots of cron job spam and ignore errors. Rather make two Slack channels:</p><ul><li>automated_task_logs</li><li>automated_task_errors</li></ul><p>Spam (successes) goes to logs, only errors go the errors channel. In a channel in Slack go to <code>channel settings - add an app or integration - Build - add something just for my team - add a incoming webhook</code>. You’ll now have a secret url you can add to the end of your cron bash scripts that will post to Slack like so:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> +e <span class="comment">#ignore errors and continue</span></span><br><span class="line"><span class="built_in">set</span> +x <span class="comment">#echo off</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  make\_temp\_file &amp;&amp;</span><br><span class="line">  backup_database &amp;&amp;  </span><br><span class="line">  curl -X POST --data-urlencode <span class="string">&#x27;payload=&#123;&quot;channel&quot;: &quot;#automated\_task\_logs&quot;, &quot;username&quot;: &quot;SSL\_bot&quot;, &quot;text&quot;: &quot;SSL certificate upgraded successfully&quot;, &quot;icon\_emoji&quot;: &quot;:scroll:&quot;&#125;&#x27;</span> https://hooks.slack.com/services/A02TFF7EE/HK63KNHCM/ABat54LXcG6JPIaUlCW15kjLA</span><br><span class="line">&#125; || &#123;</span><br><span class="line">  curl -X POST --data-urlencode <span class="string">&#x27;payload=&#123;&quot;channel&quot;: &quot;#automated\_task\_errors&quot;, &quot;username&quot;: &quot;SSL\_bot&quot;, &quot;text&quot;: &quot;SSL certificate upgrade failed&quot;, &quot;icon\_emoji&quot;: &quot;:scroll:&quot;&#125;&#x27;</span> https://hooks.slack.com/services/A02TFF7EE/HK63KNHCM/ABat54LXcG6JPIaUlCW15kjLA</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/>![Slackbot](Untitled-1.png)<p>Change the username, emoji, and channel name to match what each of your jobs does.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Setting up email for cron job results is more complicated than using Slack. And is dangerous when users become accustomed to lots of cron job spam and ignore errors</summary>
        
      
    
    
    
    <category term="programming" scheme="https://richardcooke.info/categories/programming/"/>
    
    
    <category term="cron" scheme="https://richardcooke.info/tags/cron/"/>
    
    <category term="devops" scheme="https://richardcooke.info/tags/devops/"/>
    
    <category term="slack" scheme="https://richardcooke.info/tags/slack/"/>
    
  </entry>
  
  <entry>
    <title>How to use Docker to experiment on an existing Wordpress site</title>
    <link href="https://richardcooke.info/en/2017/how-to-use-docker-to-experiment-on-an-existing-wordpress-site/"/>
    <id>https://richardcooke.info/en/2017/how-to-use-docker-to-experiment-on-an-existing-wordpress-site/</id>
    <published>2017-01-02T16:09:00.000Z</published>
    <updated>2022-05-27T17:09:22.316Z</updated>
    
    <content type="html"><![CDATA[<p>This post explains</p><ul><li>how to run Wordpress in a Docker container connected to MySql in a Docker container</li><li>how to restore your existing Wordpress site to the local copy in Docker.</li></ul><p>It is written for Ubuntu Linux, but should work identically on OSX or Windows if you’re using Docker-machine.</p><h2 id="Install-Docker-compose"><a href="#Install-Docker-compose" class="headerlink" title="Install Docker-compose"></a>Install Docker-compose</h2><p>I assume you’ve installed docker already, just Google it otherwise. I then tried installing docker-compose with LinuxBrew but got errors trying to run it. So rather install docker-compose natively:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.9.0/docker-compose-\`<span class="built_in">uname</span> -s\`-\`<span class="built_in">uname</span> -m\` &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="Create-the-shared-folders"><a href="#Create-the-shared-folders" class="headerlink" title="Create the shared folders"></a>Create the shared folders</h2><p>This will allow us to edit the Wordpress themes &amp; things from our host:</p><p><code>mkdir -p ~/projects/wp</code></p><h2 id="Create-the-docker-compose-config-file-and-run-it"><a href="#Create-the-docker-compose-config-file-and-run-it" class="headerlink" title="Create the docker-compose config file and run it"></a>Create the docker-compose config file and run it</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/projects/wp/docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="string">MYSQL\_ROOT\_PASSWORD:</span> <span class="string">lkj</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="string">\-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="string">\-</span> <span class="number">60001</span><span class="string">:3306</span></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="string">\-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="string">\-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="string">\-</span> <span class="number">60000</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="string">WORDPRESS\_DB\_PASSWORD:</span> <span class="string">lkj</span></span><br><span class="line">      <span class="string">WORDPRESS\_DB\_HOST:</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">working_dir:</span> <span class="string">/var/www/html</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="string">\-</span> <span class="string">./data:/var/www/html</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\<span class="comment"># :wq  to save and quit vim</span></span><br><span class="line">docker-compose up   <span class="comment">#and later just docker-compose start / stop</span></span><br></pre></td></tr></table></figure><p>You can now browse to <a href="http://0.0.0.0:60000/">http://0.0.0.0:60000</a> and install Wordpress. </p><p>(And use Mysql Workbench to view the database on the port 60001).</p><h2 id="Restore-your-existing-site"><a href="#Restore-your-existing-site" class="headerlink" title="Restore your existing site"></a>Restore your existing site</h2><p>Once you’ve installed Wordpress you can see all the files in ~&#x2F;projects&#x2F;wp&#x2F;data. Download your backup .zip files (I assume you’re using something like UpdraftPlus to Dropbox) and unzip them all somewhere. Now copy all the unzipped folders into the ~&#x2F;projects&#x2F;wp&#x2F;data&#x2F;wp-content folder so it looks like this:</p><p><img src="/Untitled.png" alt="Wordpress folders"></p><p>Note you’ll have to use the console to copy the files around because your user won’t have permissions to the docker volume. </p><p>Try something like this, assuming you’re in the wp-content folder:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> -r ~/unzipped/* .   <span class="comment"># copy files here</span></span><br><span class="line">sudo <span class="built_in">chown</span> -R www-data *    <span class="comment"># set the owner to docker</span></span><br><span class="line">sudo <span class="built_in">chmod</span> -R +rwx *        <span class="comment"># give everyone rights to everything</span></span><br></pre></td></tr></table></figure><h3 id="Restore-database"><a href="#Restore-database" class="headerlink" title="Restore database"></a>Restore database</h3><p>Add the following code to the top of your database restore script (to avoid the error <strong>Error Code: 1067. Invalid default value for ‘user_registered’</strong>):</p><figure class="highlight postgresql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">SESSION</span> sql_mode = <span class="string">&#x27;NO_ENGINE_SUBSTITUTION&#x27;</span>;</span><br><span class="line"><span class="comment">-- SELECT @@GLOBAL.sql_mode;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> wordpress;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> wordpress;</span><br><span class="line">use wordpress;</span><br></pre></td></tr></table></figure><p>And this code to the bottom:</p><p><code>update wordpress.wp_options set option_value=&#39;http://0.0.0.0:60000&#39;</code>  where option_name in (‘siteurl’, ‘home’)</p><p>Run the script:</p><p><code>mysql -h 0.0.0.0 -P 60001 -u root -p &lt; restore.sql</code></p><h3 id="Browse"><a href="#Browse" class="headerlink" title="Browse"></a>Browse</h3><p>You can now use your site at either 0.0.0.0:60000 or 127.0.0.1:60000 or localhost:60000 depending on your exact combination of operating system, virtual machine, docker-machine, and docker-compose.</p><p>Remember to close and reopen your entire browser and incognito windows each time you try to avoid caching errors.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This post explains&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to run Wordpress in a Docker container connected to MySql in a Docker container&lt;/li&gt;
&lt;li&gt;how to restore your existing Wordpress site to the local copy in Docker</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    <category term="wordpress" scheme="https://richardcooke.info/categories/coding/wordpress/"/>
    
    
    <category term="wordpress" scheme="https://richardcooke.info/tags/wordpress/"/>
    
    <category term="docker" scheme="https://richardcooke.info/tags/docker/"/>
    
    <category term="docker-compose" scheme="https://richardcooke.info/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>How to make a custom getter &amp; setter for an ActiveRecord (Ruby on Rails) model&#39;s attributes/properties</title>
    <link href="https://richardcooke.info/en/2016/how-to-make-a-custom-getter-setter-for-activerecord-ruby-on-rails-attributesproperties/"/>
    <id>https://richardcooke.info/en/2016/how-to-make-a-custom-getter-setter-for-activerecord-ruby-on-rails-attributesproperties/</id>
    <published>2016-12-07T13:12:00.000Z</published>
    <updated>2022-05-27T17:09:22.292Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> &lt; <span class="title">ActiveRecord</span>::<span class="title">Base</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># <span class="title">don</span>&#x27;<span class="title">t</span> <span class="title">use</span> <span class="title">attr_accessible</span> <span class="title">here</span> <span class="title">as</span> <span class="title">it</span> <span class="title">interferes</span>/<span class="title">duplicates</span> <span class="title">the</span> <span class="title">methods</span> <span class="title">below</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># <span class="title">setter</span></span></span><br><span class="line"><span class="class">```<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">def</span> <span class="title">shirt</span>=(<span class="title">value</span>)</span></span><br><span class="line"><span class="class">  <span class="title">write</span>\<span class="title">_attribute</span>(:<span class="title">shirt_fee_in_cents</span>, <span class="title">value</span>)</span></span><br><span class="line"><span class="class"><span class="title">end</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># <span class="title">getter</span></span></span><br><span class="line"><span class="class"><span class="title">def</span> <span class="title">shirt</span></span></span><br><span class="line"><span class="class">  <span class="title">if</span> <span class="title">self</span>[:<span class="title">shirt</span>].<span class="title">present</span>?</span></span><br><span class="line"><span class="class">    <span class="title">return</span> <span class="title">self</span>[:<span class="title">shirt</span>]</span></span><br><span class="line"><span class="class">  <span class="title">end</span></span></span><br><span class="line"><span class="class">  <span class="title">AverageHuman</span>.<span class="title">default_shirt</span></span></span><br><span class="line"><span class="class"><span class="title">end</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
        
      
    
    
    
    <category term="ruby on rails" scheme="https://richardcooke.info/categories/ruby-on-rails/"/>
    
    
    <category term="rails" scheme="https://richardcooke.info/tags/rails/"/>
    
    <category term="activeRecord" scheme="https://richardcooke.info/tags/activeRecord/"/>
    
    <category term="ruby" scheme="https://richardcooke.info/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>The making of Ekaya.vip - easy identity &amp; credit checks for tenants</title>
    <link href="https://richardcooke.info/en/2016/the-making-of-ekaya-vip-easy-identity-credit-checks-for-tenants/"/>
    <id>https://richardcooke.info/en/2016/the-making-of-ekaya-vip-easy-identity-credit-checks-for-tenants/</id>
    <published>2016-10-11T19:44:34.000Z</published>
    <updated>2022-05-27T17:09:22.254Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve just finished &amp; released my new project, <a href="https://ekaya.vip/">https://ekaya.vip</a>, as part of the team at <a href="https://ekaya.com/">Ekaya.com</a>.</p><p>This blog discusses the web app and its creation, similarly to my earlier review of the Angular medical record app, <a href="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/" title="ECCR">ECCR</a>.</p><h2 id="The-app"><a href="#The-app" class="headerlink" title="The app"></a>The app</h2><p>Vip is a web app that creates a profile page for a user showing her: verified personal details, credit score and bank statements, and character references. </p><p>The user can then share this profile with prospective landlords as an indication she would be a good tenant. Here’s part of the profile page for a user:<br><img src="/vip-1024x505.png" alt="Ekaya.vip profile"></p><p>The screenshot below shows how a landlord (non-user of Vip) can email anyone asking them to create a profile for review:<br><img src="/invitetenant-1024x828.png" alt="Invite a tenant to use Vip"></p><p>Finally, the image below shows bank login, part of the profile creation process:<br>![Bank login]bank.png)</p><p>Currently it costs R99 to create a profile, and R49 to optionally refresh all your verified data after three months.</p><h2 id="Office-amp-team"><a href="#Office-amp-team" class="headerlink" title="Office &amp; team"></a>Office &amp; team</h2><p>Our office was in leafy green Newlands, holding six programmers, two business people (one customer experience and one designer), and two customer support people.<br><img src="/office-1024x576.jpg" alt="office">]</p><p>This was one of the best teams I’ve worked with: no rockstars, no hostility or insecurity, and no laziness. Everyone at the firm was passionate about software - always posting links to interesting tech articles and videos, discussing past- and side- projects, and generally having fun coding something beautiful.</p><h2 id="Design"><a href="#Design" class="headerlink" title="Design"></a>Design</h2><p>The app has few screens - it’s just a payment screen, some id verification question screens, bank login screens, the main profile screen, and sharing screens. Thus design was completed by the designer&#x2F;CEO before coding began and all wireframes were small enough to fit on our office wall: </p><p><img src="/wireframes-1024x576.jpg" alt="wireframes"><br>We hired a team in the Ukraine to create the CSS for our wireframes to save time. Which was a terrible idea. Old fashioned Bootstrap CSS is very hard to cut up and put into React components using CSS modules. Never again.</p><h2 id="Project-management"><a href="#Project-management" class="headerlink" title="Project management"></a>Project management</h2><p>We tried out lots of online project management web apps, looking for the set of features we wanted at the best price:</p><ul><li>task lifecycle managements and grouping into stories and epics</li><li>automated burndown chart creation</li></ul><h3 id="Axosoft"><a href="#Axosoft" class="headerlink" title="Axosoft"></a>Axosoft</h3><p>Axosoft seemed decent and we trialled it for a month.<br><img src="/axosoft-1024x512.png" alt="Axosoft backlog"></p><p>However it has serious flaws and we wouldn’t recommend it because it:</p><ul><li>is very slow</li><li>refreshed the task backlog constantly, making you lose your place</li><li>is far too cluttered with too many unnecessary features</li><li>makes moving tasks around difficult</li><li>makes finding out how to do something obscure and difficult</li><li>and no one wants to enter work logs, or does them accurately</li></ul><p>Furthermore the automated time tracking and estimation features were hard to use. Even now I can’t remember exactly what combination of estimated time, work logs, and work completed entries you are supposed to use generate correct graphs. Which is unfortunate as they look quite useful:<br><img src="/dashboard-1024x507.png" alt="Axosoft dashboard">]</p><h3 id="Trello"><a href="#Trello" class="headerlink" title="Trello"></a>Trello</h3><p>Since our time estimates as a team were unhelpful and Axosoft was cluttered we decided to try something completely different. We:</p><ul><li>switched to the free version of Trello</li><li>stopped grouping tasks</li><li>stopped assigning points or hour estimates</li><li>and had only two boards:<ol><li>company backlog (big long-term stories)</li><li>current sprint (small tasks)</li></ol></li></ul><p><img src="/trello-sprint-board-1024x501.png" alt="Trello sprint board"></p><p><img src="/trello-backlog-board-1024x746.png" alt="Trello backlog board"></p><p>At the end of every sprint I made a new board with the date of that sprint and moved all our <strong>done</strong> and <strong>rejected</strong> cards into that board and closed it. Thus our current sprint board never closes, so people don’t have to update their bookmarked urls and I didn’t have to copy and paste lots of cards and columns.</p><h3 id="Standups-amp-teamwork"><a href="#Standups-amp-teamwork" class="headerlink" title="Standups &amp; teamwork"></a>Standups &amp; teamwork</h3><p>We permanently displayed both boards on our TVs and had daily standups around them.<br><img src="/trello-169x300.jpg" alt="trello"></p><p>Standups happened whenever everyone had arrived at the office, sometimes only 11h30. When people were working from home they could Skype&#x2F;Hangouts in, or we’d just skip a day’s standup.</p><h3 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h3><p>Tasks went from <strong>backlog</strong> to <strong>coding</strong> to <strong>code review</strong> to <strong>deploying</strong> to <strong>testing</strong> (done by our CXO &#x2F; unoffical QA tester). We started off tackling tasks separately to get through them faster.</p><p>But I think this ended up making us slower than if we had collaborated and code reviewed more. At the end of of the project we switched to peer programming at least hour a day for those who were willing. And put every task through code review before deploying it.</p><h2 id="Pair-programming"><a href="#Pair-programming" class="headerlink" title="Pair programming"></a>Pair programming</h2><p>I used to dislike this activity when I first tried it because:</p><ul><li>it’s exhausting</li><li>I got lost or one of us wasn’t contributing</li><li>it was not ergonomic - trying to share a keyboard and fit behind one screen</li></ul><p>With a few changes though I now am very happy with it:</p><ul><li>Only one person handles the mouse and keyboard, at their pc<ul><li>This removes the awkwardness of other people disrupting your personalised setup</li></ul></li><li>The person at the pc must always be the less experienced on a feature, or on the technology, or as a programmer in general. This ensures<ul><li>they learn by doing (coding) while the other person talks</li><li>they can slow down and look around and ask questions without being rushed as they would be having the more experienced person at the keyboard</li><li>they always contribute and can’t get lost, as would happen if the person who has all the knowledge also zooms around the code and does all the typing</li></ul></li><li>We do it only for a few hours a day, so everyone has lots of personal time to code in silence and relax listening to YouTube or checking Facebook or whatever.</li></ul><h2 id="Apple-x2F-Ubuntu"><a href="#Apple-x2F-Ubuntu" class="headerlink" title="Apple &#x2F; Ubuntu"></a>Apple &#x2F; Ubuntu</h2><p>All the coders have Apple PCs, except me. I find the Apple OS difficult to use, unpleasant, and their computers overpriced even with all their deficiencies compared to Windows computers. </p><p>So the company bought me a Windows laptop. It is far more powerful than the Apples in the office, at a fraction of the price. I installed Ubuntu on VirtualBox on it to program and had no problems with this setup.  </p><p>Ubuntu is necessary to use the same shell scripts as the Apple machines, which Windows can’t do easily just yet. I also found working in a VM advantageous at times because of its ability to save and restore images - especially before upgrading my system.</p><h3 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h3><p>I used VirtualBox happily, except for one graphics bug. You need to download and use the guest additions ISO for 5.0.16 until this <a href="https://www.virtualbox.org/ticket/15526">bug</a> is fixed. Any images later than that version will cause graphics errors in VirtualBox Ubuntu with apps like Gitkraken, Atom, Chrome (and other Electron apps too I assume). Here’s the ISO to use: <a href="http://download.virtualbox.org/virtualbox/5.0.16/VBoxGuestAdditions_5.0.16.iso">http://download.virtualbox.org/virtualbox/5.0.16/VBoxGuestAdditions_5.0.16.iso</a></p><h3 id="Linuxbrew"><a href="#Linuxbrew" class="headerlink" title="Linuxbrew"></a>Linuxbrew</h3><p>The Apples use <strong>Brew</strong> as their package manager, whereas Linux uses <strong>apt</strong>. Apt needs to run as root (all apps are installed globally) whereas Brew installs apps for the local user. This makes things like accessing a database different, as using Brew you don’t need to set a password because your current user already has access.</p><p>In future to avoid these differences in setup I’d like to give Linuxbrew a try - a fork of Brew compiled for Linux.</p><h2 id="Slack"><a href="#Slack" class="headerlink" title="Slack"></a>Slack</h2><p>We used the free version Slack for almost all team communication. It was my first time trying it, having used Gmail &amp; Hangouts before. I like Slack’s channels and ability to link to bots, like git commit. But I don’t like that messages can whizz by ignored by users if they miss them, unlike email which has to be addressed consciously.</p><p>And I detest that that messages get deleted past a certain number, making searching for important old comments impossible. I’d stick with Gmail &amp; Hangouts again in future I had the choice.<br><img src="/slack-1024x504.png" alt="Slack"></p><h2 id="Passpack"><a href="#Passpack" class="headerlink" title="Passpack"></a>Passpack</h2><p>We stored all our passwords in the Passpack free version, including our config files for deployment. No passwords were kept in git, meaning we could open source our code safely at any point if we wished. Passpack worked well.<br><img src="/passpack-1024x840.png" alt="Passpack"></p><p>Our passwords were saved to environment variables on our server and not needed to be entered during deployment - as per the 12 factor app best practice guide.</p><h2 id="Bitbucket"><a href="#Bitbucket" class="headerlink" title="Bitbucket"></a>Bitbucket</h2><p>We kept our repositories in Bitbucket. The only difference between Bitbucket and Github is that Bitbucket charges per user for an infinite number of repositories and Github charges per repository for an infinite number of users.</p><p>The former is clearly far more preferable for a firm with a set number of employees.<br><img src="/bitbucket-1024x463.png" alt="Bitbucket"></p><h2 id="Other-online-services-we-used"><a href="#Other-online-services-we-used" class="headerlink" title="Other online services we used"></a>Other online services we used</h2><h3 id="Peach-Payments"><a href="#Peach-Payments" class="headerlink" title="Peach Payments"></a>Peach Payments</h3><p>Peach Payments is a credit card payment gateway that is easy to use with a support team that responds quickly. The only problem I have with it is that they have no API for testing.</p><p>So if you want to write automated tests to see how your app behaves when payments fail or succeed for various reasons you are out of luck. Hopefully they’ll add this useful feature someday.</p><h3 id="Intercom"><a href="#Intercom" class="headerlink" title="Intercom"></a>Intercom</h3><p>Intercom provides the chat bubble on our app. Intercom’s app provides a profile for each user with their full chat history, and any events or data our app has stored in Intercom for that user.</p><p>It can also send emails.  A very useful tool I’d recommend.</p><h3 id="Yodlee"><a href="#Yodlee" class="headerlink" title="Yodlee"></a>Yodlee</h3><p>We worked with a local partner to leverage Yodlee’s services and consumer credit checks via an API. The API had it’s problems though:</p><ul><li>It uses HTML error codes as custom error codes, in inconsistent ways</li><li>They don’t version their API, and make breaking changes in QA</li><li>Their test server connects to live banks</li><li>Their documentation doesn’t match their API</li></ul><h2 id="Gitkraken"><a href="#Gitkraken" class="headerlink" title="Gitkraken"></a>Gitkraken</h2><p>Gitkraken is the only cross platform git GUI, written in Electron. I prefer it to SourceTree, but perhaps not as much as Tortoisegit. But it worked well on my Linux machine.</p><p>Watching the other coders in the office struggle to recall and correct lists of git command line statements instead of clicking one button on a GUI was laughable. I’d definitely recommend Gitkraken to anyone in future.<br><img src="/gitkraken-1024x484.png" alt="Gitkraken"></p><h2 id="Atom-amp-IDEs"><a href="#Atom-amp-IDEs" class="headerlink" title="Atom &amp; IDEs"></a>Atom &amp; IDEs</h2><p>Two of us used Atom as our IDE (our language was Typescript). One used Jetbrains Webstorm. One used Visual Studio Code. And two used Sublime.  We had no conflicts. </p><p><img src="/atom-1024x496.png" alt="Atom">]<br>Atom worked perfectly for me. The Sublime users had difficulty installing the Typescript and linting plugins. And nearly all of us used Visual Studio Code for debugging the node server in compiled Javascript because it was powerful and easy to use. </p><p>I would not recommend Sublime. Sublime is significantly slower to code in, losing the power to jump directly to declarations in code, find usages, and refactor &#x2F; rename easily. I did miss having Notepad++ on Ubuntu on several occasions when I wanted to record and run macros, and do clever regular expression search and replaces. But the handy thing about being on an Ubuntu VM was that I could swap back to Windows to run Notepad++ when necessary with one click.</p><h2 id="Coding-the-app"><a href="#Coding-the-app" class="headerlink" title="Coding the app"></a>Coding the app</h2><h3 id="Language-choice"><a href="#Language-choice" class="headerlink" title="Language choice"></a>Language choice</h3><p>We’d heard only good things about React &amp; Redux &amp; Typescript, so we chose those for the browser code. Typescript is wonderful in many ways:</p><ul><li>it provides all the power of statically typed languages (and every new language these days is statically typed, no one wants to use dynamic languages anymore)</li><li>it’s almost identical to Javascript</li><li>if you want to get rid of it at some future stage you can just compile it to almost identical Javascript and use those files as your files</li></ul><p>For the server we had far more choices:</p><ul><li>Nodejs – same language for front and back end. Typescript allows static typing. Mostly but not completely OO and functional. Means you can use the same JS libraries in both server and browser and share code libraries we make too – hopefully faster easier coding. Politically neutral (the Switzerland of languages to .NET &amp; Java people)</li><li>Scala – speed and libraries of the JVM. Fully OO and functional. But we’ll still have to use a different language for front end stuff.</li><li>Python – bad static type support using comments. Kinda OO and functional.</li><li>Ruby – no static typing at all, blocks vs clean first order functions like Python. Full OO.</li><li>Haskell – beautiful but super difficult so can’t hire new coders</li><li>Clojure – no static types. Lots of brackets.</li><li>Elixir – too new</li><li>Go – too new. Controversial on forums. Has an ugly gopher mascot</li><li>Java – too verbose, no functional supporting</li><li>Rust – a systems level language with manual memory management</li><li>F#, C# - bad Linux support</li><li>Dart – is dead</li></ul><p>Typescript with node.js and Scala with Java were the clear top two choices. In the end we chose Typescript because:</p><ul><li>I had experience in Typesript and no one had experience in Scala</li><li>We liked the idea of learning only one language</li><li>node.js fits well with Docker and scalable web apps</li></ul><p>We were happy with our choice.</p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>We used Docker to create small rebuildable images to deploy our code to test and production.  It’s the an excellent technology and the way of the future. </p><p>There’s nothing more to say - except perhaps that is difficult on your localhost in one regard for people using Apple or Windows pcs. If you pull your packages (e.g. npm, gems, nuget) off the Net every time your container builds then it’s very slow to change a line of code and see what the effect is on your site immediately. </p><p>You can share a packages folder between your local machine and the docker machine if you’re on Linux so you don’t have to update packages every compile - but you can’t on Apple&#x2F;Windows, because the packages are built for a different operating system. </p><p>And also, the images take up quite a bit of space - better to have a big harddrive than a small SSD. I had no trouble with speed, but colleagues did have trouble with space.</p><h4 id="Deployment-scripts-docker-swarm-Kubernetes"><a href="#Deployment-scripts-docker-swarm-Kubernetes" class="headerlink" title="Deployment - scripts, docker-swarm, Kubernetes"></a>Deployment - scripts, docker-swarm, Kubernetes</h4><p>At first we wrote simple deployment scripts for our dev server. They ssh’ed onto the server, copied across the code, and ran the dockerfile. For production the guy who was tasked with improving deployment first tried Kubernetes - as we’d heard it was the best. But he found it too hard and swapped to docker-swarm. </p><p>When I look at the docker-swarm code I still don’t understand it - it’s complicated stuff. But it works - we have always online blue&#x2F;green deployments to production. I’d like to give Kubernetes a try in a future project.</p><h3 id="Tabs-vs-spaces"><a href="#Tabs-vs-spaces" class="headerlink" title="Tabs vs spaces"></a>Tabs vs spaces</h3><p>I’ve assumed for years that spaces are dead - because tabs allow everyone to set their preferred length of indentation. But the team eventually decided to pick two spaces (or soft tabs) as the standard as it allows aligning columns and is the Facebook standard. It really made no difference to anything - once everyone had set their darn IDE to the same setting.</p><h3 id="Logging"><a href="#Logging" class="headerlink" title="Logging"></a>Logging</h3><p>Our logging is the ELK stack (ElasticSearch, Logstash, Kibana). I didn’t work on it so I can’t comment.<br><img src="/kibana-1024x505.png" alt="Kibana"></p><h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><p>We used Sendgrid to send emails, queued in RabbitMQ (a base Docker image).</p><p>Sendgrid works well, and has templates.</p><h3 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h3><p>We used Postgres.</p><h4 id="Script-management-migrations"><a href="#Script-management-migrations" class="headerlink" title="Script management (migrations)"></a>Script management (migrations)</h4><p>We used Flyway.</p><h4 id="Sequelize-js"><a href="#Sequelize-js" class="headerlink" title="Sequelize.js"></a>Sequelize.js</h4><p>Sequelize is the ORM for Node. An ORM’s main benefits are:</p><ol><li>You need change only your table model when you change the database, and don’t need to update every SQL query that references that table</li><li>The ORM automatically handles converting linked database tables to a tree view of objects in code</li><li>You’ll write less code than custom SQL queries</li></ol><p>The problem with Sequelize is it’s very poorly documented. I couldn’t figure out how to properly associate linked tables in complex cases (where Sequelize presumes you’ll use their format, and we used our own).</p><p>So we gained benefit number 1, but not so much numbers 2 and 3 - as we ended up writing some custom SQL and conversion code anyway. I’d use Sequelize again, but only until something better and simpler arrives.</p><h3 id="hapi-js"><a href="#hapi-js" class="headerlink" title="hapi.js"></a>hapi.js</h3><p>This was our API webserver (like express or koa). We chose it as it’s made by Walmart for massive speed. It works well.</p><p>But I’m sure the others would be fine too - as they don’t really do that much work. I did miss the power and in-the-box features that frameworks like Laravel provide. Strongloop didn’t look appealing.</p><p>But in my next project I’d love to try Adonis.js.</p><h3 id="Other-packages"><a href="#Other-packages" class="headerlink" title="Other packages"></a>Other packages</h3><ul><li>inversify.js - dependency injection</li><li>tape-async.js &amp; faucet.js - for unit &amp; integration tests</li><li>request-promise - for REST calls</li><li>sharp.js - for image resizing</li><li>nightmare.js - a browser tester (like Selenium) but based on Javascript (Electron) and can run headlessly to test anywhere. It is great, except at handling iframes, which made it impossible to test our credit card payments. I’d still use it again.</li></ul><h2 id="My-experience-of-open-source"><a href="#My-experience-of-open-source" class="headerlink" title="My experience of open source"></a>My experience of open source</h2><p>Having used Linux &amp; open source tools now, after being a .NET programmer for nine years, I wouldn’t go back to Windows. Everything is so much easier on Linux:</p><ul><li>Everything has a CLI that you use to automate every task</li><li>Package managers make life easy.</li><li>SSH keys over remembering passwords</li><li>Framework versioning like rvm and nvm over installing one version of .NET in exactly the right order</li></ul><p>However I don’t like the generally dynamically typed tendency in old open source languages like Ruby &amp; Python. Python now has types, as does Typescript, and PHP does partially too.</p><p>But languages like Ruby I find to hard to use: no find references, go to definition, or refactor, make navigating code incredibly tedious.</p><h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><p>I was not involved in writing the copy nor proofreading it. I personally <a href="/en/2015/prefer-sentence-case-to-title-case/" title="dislike the German looking title case">dislike the German looking title case</a> the app uses. So if you do too, please don’t judge me by the app’s text.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve just finished &amp;amp; released my new project, &lt;a href=&quot;https://ekaya.vip/&quot;&gt;https://ekaya.vip&lt;/a&gt;, as part of the team at &lt;a href=&quot;https://ekaya.com/&quot;&gt;Ekaya.com&lt;/a&gt;</summary>
        
      
    
    
    
    <category term="javascript" scheme="https://richardcooke.info/categories/javascript/"/>
    
    <category term="node.js" scheme="https://richardcooke.info/categories/javascript/node-js/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/javascript/node-js/coding/"/>
    
    
    <category term="typescript" scheme="https://richardcooke.info/tags/typescript/"/>
    
    <category term="ekaya" scheme="https://richardcooke.info/tags/ekaya/"/>
    
    <category term="hapi.js" scheme="https://richardcooke.info/tags/hapi-js/"/>
    
    <category term="postgresql" scheme="https://richardcooke.info/tags/postgresql/"/>
    
    <category term="react" scheme="https://richardcooke.info/tags/react/"/>
    
    <category term="redux" scheme="https://richardcooke.info/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Choosing a RESTful API node.js framework: koa vs loopback vs hapi</title>
    <link href="https://richardcooke.info/en/2016/choosing-a-restful-api-node-js-framework-koa-vs-loopback-vs-hapi/"/>
    <id>https://richardcooke.info/en/2016/choosing-a-restful-api-node-js-framework-koa-vs-loopback-vs-hapi/</id>
    <published>2016-05-05T12:22:45.000Z</published>
    <updated>2022-05-27T17:09:22.250Z</updated>
    
    <content type="html"><![CDATA[<p>We want to choose an API framework that has the following features:</p><ul><li>runs in node.js</li><li>is API only (no oldschool MVC client side stuff, please. The website is a separate React project)</li><li>has an ORM &#x2F; database framework &amp; supports transactions</li><li>widely used and robust</li><li>ideally has Typescript definitions</li></ul><h2 id="The-options"><a href="#The-options" class="headerlink" title="The options"></a>The options</h2><p>First we go to <a href="http://nodeframework.com/">http://nodeframework.com/</a> to see the options with a lot of github stars. We ignore the full MVC client frameworks:  </p><p>Name | Stars | Comment<br>-|-|-|-<br><a href="http://koajs.com/">koa.js</a>|10050 |<a href="https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/koa">Has TS support.</a> No ORM. 2013.<br><a href="http://loopback.io/">LoopBack</a>|6544|No TS support. <a href="http://loopback.io/users/">Used by GoDaddy &amp; Symantec.</a> <a href="http://loopback.io/examples/">Has a powerful ORM.</a> 2013<br><a href="http://hapijs.com/">hapi</a>|5960|<a href="https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/hapi">Has TS support.</a> <a href="http://hapijs.com/community">Used by Paypal &amp; Walmart &amp; npm.</a> No ORM. 2011.<br><a href="https://www.totaljs.com/">total.js</a>|1749|No ORM. Small.<br><a href="http://www.actionherojs.com/">actionHero.js</a>|1328|No ORM. Small.<br><a href="http://flatironjs.org/">flatiron</a>|1312|No ORM. Small.</p><h2 id="ORMs"><a href="#ORMs" class="headerlink" title="ORMs"></a>ORMs</h2><p>Since Loopback is the only framework with an ORM let’s look at general ORMs in node.js.  <a href="http://docs.sequelizejs.com/en/latest/">Sequelize</a> is the biggest Javascript ORM| but has <a href="https://www.reddit.com/r/node/comments/3bye2l/has_anyone_used_an_orm_with_nodejs_that_they/">mixed reviews</a>. It does have <a href="https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/sequelize">TS definitions</a> though. <a href="http://knexjs.org/">Knex</a> has good reviews but is just a SQL query generator.</p><h2 id="Comments-from-Reddit-searches"><a href="#Comments-from-Reddit-searches" class="headerlink" title="Comments from Reddit searches"></a>Comments from Reddit searches</h2><ul><li>Koa has the smallest code. It was started by <a href="http://thefullstack.xyz/history-express-javascript-framework/">TJ Holowaychuk</a>, the creator of Express.js. Express was sold to Strongloop (the creators of Loopback.js) who did nothing with it (it was maintained solely by Doug Wilson). It’s not stable yet.</li><li>People like Hapi. And it’s maintained by Walmart so it’s stable.</li><li>Can’t find many people with opinions on Loopback. It seems fast to code, but tightly coupled to the database model magically. Every route needs a database model. And people don’t seem to like its opinionated convention over configuration style.</li><li>Loopback has a steep learning curve because it has so many features.</li><li>Loopback’s ORM documentation has inaccuracies.</li></ul><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Loopback seems to have everything we need but I can’t find any posts by anyone actually using it. And there are lots of posts about Hapi and everyone likes it - there are zero complaints. Thus I think it would be best to start with Hapi &amp; Sequelize. If there are too many difficulties we could switch to Loopback.</p><blockquote><p>UPDATE 2017: I would strongly look into Adonis.js now if I were to do this again. Or perhaps Scala if I wanted a server that is typed and functional.</p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;We want to choose an API framework that has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;runs in node.js&lt;/li&gt;
&lt;li&gt;is API only (no oldschool MVC client side stuff, please</summary>
        
      
    
    
    
    <category term="node.js" scheme="https://richardcooke.info/categories/node-js/"/>
    
    
    <category term="api" scheme="https://richardcooke.info/tags/api/"/>
    
    <category term="hapi" scheme="https://richardcooke.info/tags/hapi/"/>
    
    <category term="javascript" scheme="https://richardcooke.info/tags/javascript/"/>
    
    <category term="koa" scheme="https://richardcooke.info/tags/koa/"/>
    
    <category term="loopback" scheme="https://richardcooke.info/tags/loopback/"/>
    
    <category term="node" scheme="https://richardcooke.info/tags/node/"/>
    
    <category term="typescript" scheme="https://richardcooke.info/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>How to set up Flyway command line to deploy multiple databases</title>
    <link href="https://richardcooke.info/en/2016/how-to-set-up-flyway-command-line-to-deploy-multiple-databases/"/>
    <id>https://richardcooke.info/en/2016/how-to-set-up-flyway-command-line-to-deploy-multiple-databases/</id>
    <published>2016-05-02T18:33:51.000Z</published>
    <updated>2022-05-27T17:09:22.251Z</updated>
    
    <content type="html"><![CDATA[<p>If you follow this setup tutorial you’ll have</p><ul><li>Flyway installed</li><li>database upgrade scripts</li><li>configuration files for your local machine, dev server, test server, live server</li></ul><p>I presume you’re working on Linux or Apple. Windows doesn’t change much, just environment variables and path slashes.</p><h2 id="Let’s-begin"><a href="#Let’s-begin" class="headerlink" title="Let’s begin"></a>Let’s begin</h2><ol><li>Download Flyway and unzip it into <strong>~&#x2F;apps&#x2F;flyway</strong> (or wherever you want)</li><li>Put it in your <del>&#x2F;.profile: &#96;export PATH&#x3D;$PATH:</del>&#x2F;apps&#x2F;flyway&#96;</li><li>Restart</li><li>Make a repository or folder to hold your database upgrade stuff</li><li>For each database you want to maintain make a folder with its name</li><li>In the folder, make a folder called <strong>scripts</strong> and one called <strong>config</strong> (or whatever you want to call them)</li><li>In scripts, add all your upgrade scripts<ul><li>Start them with the letter V (Flyway requires this), followed by the creation date and time to ensure they’re unique and in the right order, followed by two underscores and then a description of the upgrade</li></ul></li><li>In config, add four config files as shown in the screenshot below (you can move the original config from the Flyway install folder):<br><img src="/flywaysetup.png" alt="flywaysetup"></li><li>You can see I have a database called <strong>ekaya</strong> in this example.</li><li>In the local sample file I have set the connection details to my local database. Each user of this project will copy this sample on their local machine to <strong>1_local.config</strong> and set their own username and password (.gitignore <strong>1_local.config</strong> to keep it safe).</li><li>Don’t save the password in any of the server config files (2 to 4). Instead you’ll type it in on the command line every time you want to upgrade the server</li><li>Finally, create a database that you want to upgrade (e.g. in my case its <strong>ekaya_dev</strong>, my local copy of the server’s <strong>ekaya_dev</strong>).</li><li>Now you can run Flyway, from a command line in the config folder (for relative paths to work):<ul><li>flyway -configFile&#x3D;.&#x2F;1_local.conf migrate</li></ul></li></ol><p>You’re done. Your database should be updated with all scripts. To delete the database just run the same command, but replace <strong>migrate</strong> with <strong>clean</strong>. </p><p>For the server config files, change the url. And run them similarly, e.g.:</p><p><code>flyway -configFile=./2_dev.conf migrate</code></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you follow this setup tutorial you’ll have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flyway installed&lt;/li&gt;
&lt;li&gt;database upgrade scripts&lt;/li&gt;
&lt;li&gt;configuration files for your local machine, dev server, test server, live serv</summary>
        
      
    
    
    
    <category term="infrastructure" scheme="https://richardcooke.info/categories/infrastructure/"/>
    
    
    <category term="database" scheme="https://richardcooke.info/tags/database/"/>
    
    <category term="flyway" scheme="https://richardcooke.info/tags/flyway/"/>
    
  </entry>
  
  <entry>
    <title>AWS cloud hosting vs. a local managed server host for a web app in Cape Town</title>
    <link href="https://richardcooke.info/en/2016/aws-cloud-hosting-vs-a-local-managed-server-host-for-a-web-app-in-cape-town/"/>
    <id>https://richardcooke.info/en/2016/aws-cloud-hosting-vs-a-local-managed-server-host-for-a-web-app-in-cape-town/</id>
    <published>2016-04-19T16:14:44.000Z</published>
    <updated>2022-05-27T17:09:22.249Z</updated>
    
    <content type="html"><![CDATA[<p>Host your new web app on AWS or on your own server at a local hosting company?  If you’re in most countries AWS wins, but not in South Africa.</p><h2 id="Cloud-advantages"><a href="#Cloud-advantages" class="headerlink" title="Cloud advantages"></a>Cloud advantages</h2><ul><li>Autoscaling up and down as load changes</li><li>Price flexibility - scale up, scale down easily</li><li>Less maintenance: no need to ever upgrade or patch anything - servers or databases</li><li>We can separate components more safely on isolated machines - less chance of breaking the live website server</li></ul><h3 id="Minor-advantages"><a href="#Minor-advantages" class="headerlink" title="Minor advantages"></a>Minor advantages</h3><ul><li>Slightly more reliable</li><li>Slightly more secure</li><li>Slightly cheaper</li></ul><h2 id="Cloud-disadvantages"><a href="#Cloud-disadvantages" class="headerlink" title="Cloud disadvantages"></a>Cloud disadvantages</h2><ul><li>150 ms latency on each request to the server (but total load time is the same)</li></ul><h3 id="Minor-disadvantages"><a href="#Minor-disadvantages" class="headerlink" title="Minor disadvantages"></a>Minor disadvantages</h3><ul><li>Slight currency risk (more expensive as rand depreciates)</li></ul><h2 id="Costs"><a href="#Costs" class="headerlink" title="Costs"></a>Costs</h2><p>Costs for AWS and a dedicated box are about the same:</p><ul><li>A high quality box at Hetzner in South Africa costs R2400 p.m. in 2016 (quad core 3.2 GHz, 16 GB RAM, 2 TB drive).</li><li>AWS instances will be roughly the same, depending on exactly how much power you want.</li></ul><h2 id="The-speed-test"><a href="#The-speed-test" class="headerlink" title="The speed test"></a>The speed test</h2><p>I created a 22MB static web page (some text &amp; seven images) and deployed it to AWS in Ireland and to Hetzner in Westerford, Cape Town. The load times for AWS were 500 ms for the text (DOM) and 30 s for the full page. The load times for local were 28 ms for the text (DOM) and 28 s for the full page.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Even though the time taken to load a full page is the same on AWS &amp; locally, having a user wait an extra 200 ms or so on every button click makes a big difference to the appearance of speed on a modern web app. We decided to use a local server. But we can always cancel our monthly subscription any time and move to AWS later if we want. All components will run in Docker instances on one server so they’re isolated.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Host your new web app on AWS or on your own server at a local hosting company?  If you’re in most countries AWS wins, but not in South Africa</summary>
        
      
    
    
    
    <category term="infrastructure" scheme="https://richardcooke.info/categories/infrastructure/"/>
    
    
    <category term="aws" scheme="https://richardcooke.info/tags/aws/"/>
    
    <category term="cloud" scheme="https://richardcooke.info/tags/cloud/"/>
    
    <category term="hosting" scheme="https://richardcooke.info/tags/hosting/"/>
    
  </entry>
  
  <entry>
    <title>UXPin review (and Pidoco &amp; web Balsamiq)</title>
    <link href="https://richardcooke.info/en/2016/uxpin-review/"/>
    <id>https://richardcooke.info/en/2016/uxpin-review/</id>
    <published>2016-04-10T14:27:01.000Z</published>
    <updated>2022-05-27T17:09:22.250Z</updated>
    
    <content type="html"><![CDATA[<p>Our small team has been using UXPin for a week to wireframe a public web app. We bought the standard version for four people for a month.  Here’s what we found: The good:</p><ul><li>Support is good. Emails usually get a reply in a day.</li><li>It does pretty much what you expect for a wireframe system.</li></ul><p>The bad:</p><ul><li>Templates or master pages are called ‘smart components’. I.e. your menu on every page is a smart component. Change it once, it changes on every page. But you can’t put smart components inside smart components! So you can’t have two parts of a menu that you reuse in different ways of different pages. This is really horrible and very limiting. (Imagine if in your code functions you call aren’t allowed to call other functions)</li><li>The UI is really tiny in a sidebar. Instead of having a tab for widgets, pages, and templates they’re all crammed into a little sidebar in their own panels that you have to drag up and down constantly to see what you need.</li><li>And when you want to add a link on click from a widget to a page you have to scroll through the entire site map - you can’t minimise any page trees to make it faster.</li><li>In fact, adding interactions overall is very tedious - many clicks. There’s a ‘recent interactions’ list - but it doesn’t show you the pages it links to! Pointless. Rather just keep a page of commonly used hotspots and copy paste.</li><li>The navbar widget can’t have interactions (links) on each menu item. Nor can the dropdown widget. So they’re useless. Instead you’ll add long list of url link widgets in place of a menu on your page.</li><li>Unlike every other graphics app in the universe, your lasso select tool selects everything it touches, not everything it encompasses. So you’ll always over-select lots of widget then have to individually deselect them from your group.</li><li>Things in preview mode (when demoing) look different from design mode. Especially white space in text. Your buttons with wrapped text in design mode don’t wrap when the wireframe is running.</li><li>One time live preview didn’t work at all. This was a once off server problem they had, but if we were demoing to a client it would have been embarrassing.</li><li>You’d assume you can give your team members standard or pro accounts. But you can’t. You have to pay for an entire team to upgrade to pro for one person. Ripoff.</li><li>Collaboration isn’t real time. When testing the demo version we seem to remember being able to see elements move around as someone else worked on them. Now we have to refresh the entire page to get an updated site map and page elements from other people.</li><li>Loading is slow. More so than other sites. But it’s usable. Minor complaint.</li></ul><p>I tried too Pidoco because it is MUCH cheaper. But it had similar problems with not being able to add hotspots to menus or have nested reusable components. Web Balsamiq is even worse. It can run only using Flash (an ancient technology) and doesn’t have site maps - all pages are in a long flat list with a scrollbar. And saving must be explicitly clicked. So in conclusion I’d probably use Pidoco next time because it’s cheap and does most of what you want. But none of the collaborative wireframing tools have everything you need.</p><h2 id="2016-04-27-UPDATE"><a href="#2016-04-27-UPDATE" class="headerlink" title="2016-04-27 - UPDATE"></a>2016-04-27 - UPDATE</h2><p>Pidoco read this review &amp; say you can do some stuff after all (so they now get my number one vote for both price &amp; features):</p><ul><li>Hotspots in menus: You can link your menu entries to other pages as follows: After adding the menu stencil to your canvas, double-click it to edit it. Highlight any row with your mouse cursor and select the desired target page from the dropdown at the top. You will see something like “* [page123 Your highlighted entry]“, which shows you that the entry has been linked. This wiki syntax may take a moment to get used to, but it is very fast, once you have done it a couple of times.</li><li>Linking a dropdown element: To link the entries of a dropdown (or combobox) stencil, you need to add an interaction and use the “changes the selection” trigger. You can add one interaction for each entry of the dropdown.</li><li>Nesting of “smart components”: In Pidoco, there are two types of smart components: “Layers” can be used once on every page and are always in the same x&#x2F;y position; they cannot be nested, but you can have several different ones for different use cases. “Custom stencils” can be nested and can be used multiple times on a page in various x&#x2F;y positions. You can have as many different custom stencils as desired, and you can detach them from the parent if you wish to stop updating them. This can be very useful if you have a lot of similar, but slightly different components - simply use a custom stencil as template, detach the instances, and edit them. After detaching, the custom stencils become a group first, so you may need to ungroup them in order to edit.</li><li>Stencil search: If you want to avoid manually scrolling through the stencil palette, try our Quick Search: Just start typing the name of the stencil you’re looking for and the palette will dynamically filter. You can navigate the palette using the arrow keys and add stencils to the canvas by hitting enter.</li><li>Duplicating interactions: If you have already used a certain interaction on an element and want to use it on other elements as well, simply select the first element with the interaction and all the other elements that should use the same interaction holding the Ctrl key. Then open the context menu, go to the “Interactions” tab and click the “Apply interaction to selection” button. The respective interaction will be added to all elements in the selection.</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Our small team has been using UXPin for a week to wireframe a public web app. We bought the standard version for four people for a month</summary>
        
      
    
    
    
    <category term="design" scheme="https://richardcooke.info/categories/design/"/>
    
    
    <category term="balsamiq" scheme="https://richardcooke.info/tags/balsamiq/"/>
    
    <category term="pidoco" scheme="https://richardcooke.info/tags/pidoco/"/>
    
    <category term="uxpin" scheme="https://richardcooke.info/tags/uxpin/"/>
    
    <category term="wireframe" scheme="https://richardcooke.info/tags/wireframe/"/>
    
  </entry>
  
  <entry>
    <title>How to switch your website to free HTTPS using Let&#39;s Encrypt certificates</title>
    <link href="https://richardcooke.info/en/2016/how-to-switch-your-website-to-free-https-using-lets-encrypt-certificates/"/>
    <id>https://richardcooke.info/en/2016/how-to-switch-your-website-to-free-https-using-lets-encrypt-certificates/</id>
    <published>2016-03-20T10:02:52.000Z</published>
    <updated>2022-05-27T17:09:22.246Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Add-the-certificate"><a href="#Add-the-certificate" class="headerlink" title="Add the certificate"></a>Add the certificate</h2><p>Sign in to cPanel of your webhost. Under security - click ‘Let’s Encypt’ - Click issue. <img src="/letsencrypt-211x300.png" alt="letsencrypt"></p><h2 id="Redirect-any-HTTP-request-to-your-site-to-HTTPS"><a href="#Redirect-any-HTTP-request-to-your-site-to-HTTPS" class="headerlink" title="Redirect any HTTP request to your site to HTTPS"></a>Redirect any HTTP request to your site to HTTPS</h2><p>In an FTP program (e.g. WinSCP on Windows) connect to your site and browse to public_html. Edit the .htaccess file, add the lines below to the very bottom, save it, refresh your site to see that it worked.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># REDIRECT HTTP TO HTTPS</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;ENV:HTTPS&#125; !on</span><br><span class="line">RewriteRule ^(.*)$ https://%&#123;HTTP_HOST&#125;%&#123;REQUEST_URI&#125; [L,R=301]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Add-the-certificate&quot;&gt;&lt;a href=&quot;#Add-the-certificate&quot; class=&quot;headerlink&quot; title=&quot;Add the certificate&quot;&gt;&lt;/a&gt;Add the certificate&lt;/h2&gt;&lt;p&gt;Sign in to cPanel of your webhost</summary>
        
      
    
    
    
    <category term="security" scheme="https://richardcooke.info/categories/security/"/>
    
    
    <category term="http" scheme="https://richardcooke.info/tags/http/"/>
    
    <category term="https" scheme="https://richardcooke.info/tags/https/"/>
    
    <category term="let&#39;s encrypt" scheme="https://richardcooke.info/tags/let-s-encrypt/"/>
    
    <category term="ssl" scheme="https://richardcooke.info/tags/ssl/"/>
    
    <category term="tls" scheme="https://richardcooke.info/tags/tls/"/>
    
  </entry>
  
  <entry>
    <title>What&#39;s the difference between OpenID, OAuth, and SAML - and which should I use for single sign on (SSO) on my web application?</title>
    <link href="https://richardcooke.info/en/2016/whats-the-difference-between-openid-oauth-and-saml-and-which-should-i-use-for-single-sign-on-sso-on-my-web-application/"/>
    <id>https://richardcooke.info/en/2016/whats-the-difference-between-openid-oauth-and-saml-and-which-should-i-use-for-single-sign-on-sso-on-my-web-application/</id>
    <published>2016-03-18T11:30:12.000Z</published>
    <updated>2022-05-27T17:09:22.248Z</updated>
    
    <content type="html"><![CDATA[<p>Disclaimer: This is a summary of all the articles I can find on the Net. I’m not a security expert, nor have I implemented SSO yet - once I have I’ll update this document.</p><h2 id="The-goal-of-single-sign-on-SSO"><a href="#The-goal-of-single-sign-on-SSO" class="headerlink" title="The goal of single sign on (SSO)"></a>The goal of single sign on (SSO)</h2><p>You want your users to be able to click one button to sign in (the same button for sign up if they’re new users on your site) without having to enter a username or password. And the benefit for you is that you don’t have to store &amp; manage your users’ passwords (getting encryption right, coding lost password pages).</p><h2 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h2><ul><li>Provider (IDP) - Google, Yahoo, Facebook, etc</li><li>Relying party (RP) - your app (your app relies on the provider)</li><li>Authentication - your app trusts that the user is who she says she is</li><li>Authorisation - the user allows your app to access Facebook *<em>*</em> Google *<em>*</em> etc and do stuff on it (e.g. make a post on your behalf)</li></ul><h2 id="SAML"><a href="#SAML" class="headerlink" title="SAML"></a>SAML</h2><p>SAML is a legacy XML server to server protocol not suitable for modern mobile and web apps.</p><h2 id="OpenID"><a href="#OpenID" class="headerlink" title="OpenID"></a>OpenID</h2><p>OpenID provides authentication. Its major benefit is that the user can use any provider to sign in - you don’t have to code separate functionality for each provider.</p><h2 id="OAuth"><a href="#OAuth" class="headerlink" title="OAuth"></a>OAuth</h2><p>OAuth provides authorisation. And can be used for pseudo-authentication because the provider gives your app a token it can use to ask the provider questions. The problem is you need to code support for each provider separately.</p><h3 id="Security-flaws-in-OAuth"><a href="#Security-flaws-in-OAuth" class="headerlink" title="Security flaws in OAuth"></a>Security flaws in OAuth</h3><p>If you’re writing any app where security is crucial, like finance or medical, then <a href="http://security.stackexchange.com/questions/94995/oauth-2-vs-openid-connect-to-secure-api">don’t use OAuth</a>. From Wikipedia:</p><p>OAuth 2.0 has had numerous security flaws exposed in implementations.<a href="https://en.wikipedia.org/wiki/OAuth#cite_note-17">[17]</a> The protocol itself has been described as inherently insecure by security experts and a primary contributor to the specification stated that implementation mistakes are almost inevitable.<a href="https://en.wikipedia.org/wiki/OAuth#cite_note-18">[18]</a><a href="https://en.wikipedia.org/wiki/OAuth#cite_note-19">[19]</a></p><p>In January 2013, the Internet Engineering Task Force published a number of threat models for OAuth 2.0.<a href="https://en.wikipedia.org/wiki/OAuth#cite_note-rfc-20">[20]</a> Among them was one called “Open Redirector”; in the spring of 2014, this was described under the name “Covert Redirect” by Wang Jing.<a href="https://en.wikipedia.org/wiki/OAuth#cite_note-OAuth_Covert_Redirect-21">[21]</a><a href="https://en.wikipedia.org/wiki/OAuth#cite_note-CNET-22">[22]</a><a href="https://en.wikipedia.org/wiki/OAuth#cite_note-PhysOrg-23">[23]</a><a href="https://en.wikipedia.org/wiki/OAuth#cite_note-Covert_Redirect-24">[24]</a></p><p>Possibly the most devastating OAuth security failure is phishing vulnerability:<a href="https://en.wikipedia.org/wiki/OAuth#cite_note-25">[25]</a> every web site using OAuth is visually (but not technically) asking end users for their username and password of their master identity, which prevents ordinary users from understanding that they should not type those in should they encounter an attacker’s web site that visually emulates this process to steal credentials. Two-factor authentication does not prevent this attack, because the phishing site can steal that as well (and use it right away).</p><h2 id="So-we-should-use-OpenID-for-SSO-because-it’s-far-less-coding"><a href="#So-we-should-use-OpenID-for-SSO-because-it’s-far-less-coding" class="headerlink" title="So we should use OpenID for SSO because it’s far less coding?"></a>So we should use OpenID for SSO because it’s far less coding?</h2><p>No. Unfortunately the biggest providers, Facebook, Google &amp; Twitter, don’t support OpenID.</p><h2 id="OpenID-Connect"><a href="#OpenID-Connect" class="headerlink" title="OpenID Connect"></a>OpenID Connect</h2><p>OpenID Connect is a new technology that implements OpenID as a JSON webservice on top of OAuth (it’s kinda OpenID 3). In other words you get the simplicity and smallness of code of OpenID with the large number of providers offering OAuth. Well, except Facebook. Watch this video: <a href="https://www.youtube.com/watch?v=Kb56GzQ2pSk">https://www.youtube.com/watch?v=Kb56GzQ2pSk</a></p><h2 id="Does-your-programming-language-have-a-OpenID-Connect-library"><a href="#Does-your-programming-language-have-a-OpenID-Connect-library" class="headerlink" title="Does your programming language have a OpenID Connect library?"></a>Does your programming language have a OpenID Connect library?</h2><p><a href="http://openid.net/developers/libraries/">http://openid.net/developers/libraries/</a></p><h2 id="Is-it-being-used-amp-has-it-won-the-protocol-war"><a href="#Is-it-being-used-amp-has-it-won-the-protocol-war" class="headerlink" title="Is it being used &amp; has it won the protocol war?"></a>Is it being used &amp; has it won the protocol war?</h2><p>Yes, I can’t find any alternative.</p><h2 id="What-companies-use-OpenID-Connect"><a href="#What-companies-use-OpenID-Connect" class="headerlink" title="What companies use OpenID Connect?"></a>What companies use OpenID Connect?</h2><p>Google, Microsoft, PayPal. The specification was finalised in 2015 so it’s still new, hopefully more providers will join. Facebook has their own API. Twitter &amp; LinkedIn don’t support OpenId Connect.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Since Twitter &amp; LinkedIn &amp; FB don’t support Connect then you can’t use it for your app yet because you’ll exclude users. And you can’t use OAuth 2 because it’s not secure. So your only options are:</p><ul><li>use standard old email &amp; password sign in and wait until (if) the big providers support Connect</li><li>write your own more secure protocol on top of separate OAuth 2 connections to each of the big providers (ha)</li></ul><h2 id="Sources"><a href="#Sources" class="headerlink" title="Sources"></a>Sources</h2><ul><li><a href="http://stackoverflow.com/questions/1087031/whats-the-difference-between-openid-and-oauth">http://stackoverflow.com/questions/1087031/whats-the-difference-between-openid-and-oauth</a></li><li><a href="https://en.wikipedia.org/wiki/OAuth">https://en.wikipedia.org/wiki/OAuth</a></li><li><a href="https://en.wikipedia.org/wiki/OpenId">https://en.wikipedia.org/wiki/OpenId</a></li><li><a href="http://stackoverflow.com/questions/1827997/is-facebook-an-openid-provider">http://stackoverflow.com/questions/1827997/is-facebook-an-openid-provider</a></li><li><a href="https://en.wikipedia.org/wiki/OpenID_Connect">https://en.wikipedia.org/wiki/OpenID_Connect</a></li><li><a href="http://security.stackexchange.com/questions/37818/why-use-openid-connect-instead-of-plain-oauth">http://security.stackexchange.com/questions/37818/why-use-openid-connect-instead-of-plain-oauth</a></li><li><a href="https://www.mutuallyhuman.com/blog/2015/07/17/an-updated-look-at-choosing-between-oauth2-and-saml/">https://www.mutuallyhuman.com/blog/2015/07/17/an-updated-look-at-choosing-between-oauth2-and-saml/</a></li><li><a href="http://stackoverflow.com/questions/36080561/why-dont-twitter-facebook-and-linkedin-support-openid-connect">http://stackoverflow.com/questions/36080561/why-dont-twitter-facebook-and-linkedin-support-openid-connect</a></li><li><a href="http://stackoverflow.com/questions/36080422/if-i-my-app-uses-open-id-connect-does-it-also-have-to-support-oauth">http://stackoverflow.com/questions/36080422/if-i-my-app-uses-open-id-connect-does-it-also-have-to-support-oauth</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Disclaimer: This is a summary of all the articles I can find on the Net. I’m not a security expert, nor have I implemented SSO yet - once I have I’ll update this document</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="oauth" scheme="https://richardcooke.info/tags/oauth/"/>
    
    <category term="openid connect" scheme="https://richardcooke.info/tags/openid-connect/"/>
    
    <category term="security" scheme="https://richardcooke.info/tags/security/"/>
    
    <category term="sso" scheme="https://richardcooke.info/tags/sso/"/>
    
  </entry>
  
  <entry>
    <title>How to download data from Yahoo finance</title>
    <link href="https://richardcooke.info/en/2016/how-to-download-data-from-yahoo-finance/"/>
    <id>https://richardcooke.info/en/2016/how-to-download-data-from-yahoo-finance/</id>
    <published>2016-02-18T14:17:27.000Z</published>
    <updated>2022-05-27T17:09:22.244Z</updated>
    
    <content type="html"><![CDATA[<p>To get a .csv file of stock prices from Yahoo you can use a url like:</p><p><a href="http://ichart.finance.yahoo.com/table.csv?s=URTH&amp;g=m&amp;c=2015&amp;a=9&amp;b=1&amp;f=2016&amp;d=2&amp;e=1">http://ichart.finance.yahoo.com/table.csv?s=URTH&amp;g=m&amp;c=2015&amp;a=9&amp;b=1&amp;f=2016&amp;d=2&amp;e=1</a></p><p>In detail:</p><p><a href="http://ichart.finance.yahoo.com/table.csv">http://ichart.finance.yahoo.com/table.csv</a>?</p><pre><code>s=URTH              //this is the stock symbol to get data for&amp;g=m                //d=daily m=monthly&amp;c=2015 &amp;a=9 &amp;b=1   //from year month day&amp;f=2016 &amp;d=2 &amp;e=1   //to   year month day</code></pre>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;To get a .csv file of stock prices from Yahoo you can use a url like:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ichart.finance.yahoo.com/table</summary>
        
      
    
    
    
    <category term="finance" scheme="https://richardcooke.info/categories/finance/"/>
    
    
    <category term="finance" scheme="https://richardcooke.info/tags/finance/"/>
    
    <category term="yahoo" scheme="https://richardcooke.info/tags/yahoo/"/>
    
  </entry>
  
  <entry>
    <title>How to prevent WordPress breaking your layout when pasting HTML into the text editor</title>
    <link href="https://richardcooke.info/en/2016/how-to-prevent-wordpress-breaking-your-layout-when-pasting-html-into-the-text-editor/"/>
    <id>https://richardcooke.info/en/2016/how-to-prevent-wordpress-breaking-your-layout-when-pasting-html-into-the-text-editor/</id>
    <published>2016-02-17T16:24:30.000Z</published>
    <updated>2022-05-27T17:09:22.245Z</updated>
    
    <content type="html"><![CDATA[<p>You’d think WordPress would take your HTML as given when you paste it into the text editor (not visual editor) of a page or post. But no, when you view your page WordPress has decided to add lots of <code>&lt;br&gt;</code> and <code>&lt;p&gt;</code> elements wherever it feel like. </p><p>Prevent this by installing this tiny plugin to disable automatic layout breaking: <a href="https://wordpress.org/plugins/dont-muck-my-markup/">https://wordpress.org/plugins/dont-muck-my-markup/</a></p><blockquote><p>UPDATE 2018: Rather write your posts in Markdown using Wordpress built in support for Markdown.</p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;You’d think WordPress would take your HTML as given when you paste it into the text editor (not visual editor) of a page or post</summary>
        
      
    
    
    
    <category term="wordpress" scheme="https://richardcooke.info/categories/wordpress/"/>
    
    
    <category term="wordpress" scheme="https://richardcooke.info/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>How to create your web site, application, and URLs in IIS</title>
    <link href="https://richardcooke.info/en/2015/how-to-create-your-web-site-application-and-urls-in-iis/"/>
    <id>https://richardcooke.info/en/2015/how-to-create-your-web-site-application-and-urls-in-iis/</id>
    <published>2015-09-22T20:54:36.000Z</published>
    <updated>2022-05-27T17:09:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>My team had just finished a .NET web service and AngularJS web app that used it and we wanted to deploy to IIS.</p><h2 id="Adding-applications-to-the-default-site"><a href="#Adding-applications-to-the-default-site" class="headerlink" title="Adding applications to the default site"></a>Adding applications to the default site</h2><p>When newly installed, IIS has one default website that listens for calls on the standard HTTP port, 80. <a href="https://www.iis.net/learn/get-started/planning-your-iis-architecture/understanding-sites-applications-and-virtual-directories-on-iis">According to Microsoft</a>, each website you create needs at least one application. So one option is to add your service and app to the default site. However, each app you add must have an alias. This alias is appended the URL of the default site. </p><p>However, each app you add must have an alias. This alias is appended the URL of the default site. For instance, below I’ve added two apps to the default site, with aliases <strong>a</strong> and <strong>b</strong>. <img src="/default-iis.png" alt="default iis"> </p><p>You can browse to the b app by browsing to <strong><a href="http://localhost/b">http://localhost/b</a></strong>.</p><h2 id="Problems-with-this-approach"><a href="#Problems-with-this-approach" class="headerlink" title="Problems with this approach"></a>Problems with this approach</h2><p>But what if your client doesn’t want to type <strong>&#x2F;b</strong> to view the website?  For instance, they might have configured <strong><a href="http://www.b.com/">www.b.com</a></strong> on their intranet to point to server <strong>192.168.0.1</strong>. </p><p>But in the setup above they would have to browse to <strong><a href="http://www.b.com/b">www.b.com/b</a></strong>. Very annoying. </p><p>Secondly, <a href="http://serverfault.com/questions/427531/in-iis-is-it-better-to-host-multiple-applications-as-independent-web-sites-or-a">it’s better to have each app in it’s own site</a> to allow greater control, being able to restart each site individually, and avoiding web.config clashes. </p><p>(To redirect a URL to a specific server, alter your <a href="https://en.wikipedia.org/wiki/Hosts_%28file%29">hosts file</a>, like this: <img src="/hosts.png" alt="hosts"></p><h2 id="Put-each-app-in-its-own-site"><a href="#Put-each-app-in-its-own-site" class="headerlink" title="Put each app in its own site"></a>Put each app in its own site</h2><p>So rather delete the default web site and create a site for <strong>a</strong> and a site for <strong>b</strong>, both on port 80, with apps for each inside each site, like this:<br><img src="/separate-iis-sites.png" alt="separate iis sites">]</p><p>In this example, if you browse to <strong><a href="http://localhost/a">http://localhost/a</a></strong> you’ll hit web app <strong>a</strong>, and if you browse to <strong><a href="http://www.b.com/">http://www.b.com</a></strong> you’ll hit web app <strong>b</strong>. <img src="/browsing-sites.png" alt="browsing sites"></p><p>The important trick here is when creating web site <strong>b</strong> you need to <a href="https://technet.microsoft.com/en-us/library/cc753195%28v=ws.10%29.aspx">set the <strong>host name</strong></a>, otherwise IIS will tell you it can’t handle two sites both trying to listen on port 80. This setting is checked by IIS when receiving a web request and is part of the HTTP request header. <img src="/host-header.png" alt="host header"></p><h2 id="Another-way-of-configuring-URLs"><a href="#Another-way-of-configuring-URLs" class="headerlink" title="Another way of configuring URLs"></a>Another way of configuring URLs</h2><p>If the technique above doesn’t satisfy what you need to do in your configuration, maybe <a href="http://blogs.technet.com/b/mspfe/archive/2013/11/27/how-to-create-a-url-alias-using-iis-url-rewrite.aspx">rewriting</a> can help you.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;My team had just finished a .NET web service and AngularJS web app that used it and we wanted to deploy to IIS</summary>
        
      
    
    
    
    <category term="iis" scheme="https://richardcooke.info/categories/iis/"/>
    
    
    <category term="iis" scheme="https://richardcooke.info/tags/iis/"/>
    
  </entry>
  
  <entry>
    <title>ECCR - The Western Cape Government Health web application for discharges</title>
    <link href="https://richardcooke.info/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/"/>
    <id>https://richardcooke.info/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/</id>
    <published>2015-09-14T23:03:24.000Z</published>
    <updated>2022-05-27T17:09:22.134Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve just finished creating a web app to create and share patients’ discharge summaries at public hospitals. <em>ECCR</em> was written with my team of <a href="http://saratoga.co.za/">Saratoga</a> and <a href="http://www.healthsystems.co.za/">HST</a> colleagues, in conjunction with <a href="https://www.westerncape.gov.za/dept/health">WCG Department of Health</a>. </p><p><em>(ECCR stands for ‘electronic continuity of care record’)</em></p><h2 id="A-tour-of-the-site"><a href="#A-tour-of-the-site" class="headerlink" title="A tour of the site"></a>A tour of the site</h2><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/1_signin.png" class=""><p><strong>Sign in.</strong> Clinicians use their existing credentials on the hospitals’ information system (HIS).</p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/2_home.png" class=""><p><strong>Dashboard.</strong> Doctors &amp; case managers can scan a folder number to quickly open a patient’s record to edit, see junior doctors’ work to approve, and be notified of any important changes to their patients’ records by other clinicians.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/3_search.png" class=""><p><strong>Search.</strong> Users can also search for patients by personal details rather than folder number, if they have permission at that facility.   </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/4_allEpisodes.png" class=""><p><strong>Patient records.</strong> All a patient’s records on the HIS are available for a doctor to peruse to understand the patient’s medical history.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/5_patienttab.png" class=""><p><strong>Patient record.</strong> Choosing a patient record displays the discharge details for reading and editing. Once it’s complete it can be approved by a senior doctor to be given to the patient.  </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/6_diagnosis.png" class="">   <p><strong>ICD codes.</strong> All ICD-10 diagnosis codes and ICD-9 procedure codes are provided with additional details. The full code tree is instantly filterable using a full text index. Codes are saved on the HIS and changes made on the HIS are shown to doctors for approval.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/7_tb.png" class="">   <p><strong>Summary forms.</strong> The summary tab provides forms for common conditions that doctors need to complete.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/8_summary.png" class="">   <p><strong>Summary.</strong> The final summary to be printed is displayed for review.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/9_discharge.png" class="">   <p><strong>Discharge.</strong> The discharge tab allows for referring a patient to another facility if necessary.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/10_meds.png" class="">   <p><strong>Prescriptions.</strong> All medications available on the JAC system are searchable and can be prescribed to patients.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/11_editmeds.png" class="">   <p><strong>Edit medication.</strong> Prescription details are editable and doctors are provided with buttons to quickly insert common instructions.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/14_validationandsaving.png" class="">   <p><strong>Validation.</strong> Validation and messages are shown using color to alert doctors to any outstanding information. The record is autosaved every two minutes to avoid doctors losing any of their work.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/11_print.png" class="">   <p><strong>Printing.</strong> Once the discharge is complete doctors can print or save the PDF.     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/12_roles.png" class="">   <p><strong>Permissions.</strong> Permissions are assigned to role, which are assigned to users (in the next screenshot).     </p><img src="/en/2015/eccr-the-western-cape-government-health-web-application-for-discharges/13_users.png" class="">   <p><strong>Users.</strong> Users are saved in the HIS, but are assigned to roles with specific permissions at hospitals where the users work in ECCR.    </p><h2 id="Technical-description"><a href="#Technical-description" class="headerlink" title="Technical description"></a>Technical description</h2><h3 id="The-database"><a href="#The-database" class="headerlink" title="The database"></a>The database</h3><p>Intersystems Caché. The server communicates with the database through plain ADO.NET ANSI SQL queries. No Caché specific stuff is used, like classes or stored procedures. </p><h3 id="The-server"><a href="#The-server" class="headerlink" title="The server"></a>The server</h3><ul><li>Written in C# ASP.NET WebAPI.</li><li>Unit tests were written at the controller level using VS native test framework.</li><li>Autofac manages dependencies.</li></ul><h3 id="The-web-site"><a href="#The-web-site" class="headerlink" title="The web site"></a>The web site</h3><ul><li>AngularJS</li><li>Bootstrap (AngularUI)</li><li>LessCSS (using VS Web Essentials)</li><li>Package management by Bower</li><li>Bundling (managed by VS Web Essentials)</li><li>angular-lz-string for zipping</li><li>lunr.js for full text indexing</li><li>pikaday for date pickers</li><li>Additional libraries: underscore.js, chance.js, moment.js, font-awesome</li></ul><h2 id="Lessons-learnt"><a href="#Lessons-learnt" class="headerlink" title="Lessons learnt"></a>Lessons learnt</h2><p>Overall the project was a success. Delivered on time to a happy client from a happy team. Below are some things I would do differently, and some things I would do similarly.</p><h3 id="Software-development-using-Agile-and-the-client"><a href="#Software-development-using-Agile-and-the-client" class="headerlink" title="Software development using Agile and the client"></a>Software development using Agile and the client</h3><p>Our clients were doctors and medical specialists. As expected, they were happy with whatever development methodology we proposed as long as they got their software at the end. </p><p>An initial analysis team of two people listed the requirements and estimated large times for all of them. These <strong>large estimates actually turned out to be correct</strong> by the end of the project as meetings, discussions, changes by the client, and hidden complexities discovered in the details ate through our development time. </p><p>We made two weekly software demos to the clients and presented our stories for the next sprint. Our business analyst tried to keep one sprint ahead of the two programmers preparing the details of each story with the client.  This system worked well except for one point: <strong>we should have presented wireframes for the next sprint to the client at every meeting</strong>. </p><p>Though the clients were happy with the functionality suggested before each sprint, there were quite a few sprints where the final product did not match what they imagined and we had to make alterations. </p><p>I tried as much as possible to have every suggestion made by the clients included on the backlog, but constantly asked them to <strong>ruthlessly prioritse the most important features</strong> to the top. This worked, as by the end of the project although we had more features remaining than time, the most important ones had been done. </p><p>We had one or two sprint retrospectives but then gave up. As everyone was happy and productive after the first couple of sprints the <strong>retros became pointless</strong>. We’ll have a final project retro with the client in a few days’ time.</p><h3 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h3><p>The clients preferred not to test or even play with the app after each two weekly demo. Instead we had a couple of internal testers do as much rigorous testing as possible. </p><p>While I initially thought this would end in tears once the doctors got their hands on the final system it actually turned out fine. The internal testers were thorough, and our demos and discussions were very comprehensive, so there were few surprises at the end of the project.</p><h3 id="UX-UI-and-styling"><a href="#UX-UI-and-styling" class="headerlink" title="UX, UI, and styling"></a>UX, UI, and styling</h3><p>I see design having three stages:</p><ul><li>Product - solve the problem</li><li>Interaction - make it easy to use</li><li>Style - make it beautiful</li></ul><p>As analysts and programmers, our team focused heavily on the first two stages. Given what the doctors told us, we had a few <strong>internal design workshops</strong> to review their main path through the system using the following process:</p><ul><li>List all the tasks that need to be done</li><li>Rank them by the most commonly performed</li><li>Use the ranking to create a group or path with most frequent task, and another group for all the others</li><li>Ask each team member to individually design a UI for both on paper, using Gestalt principles of emphasis to priorise the highest ranked items on the page</li><li>Collaboratively take the best ideas from every team member to draw the final UI on a whiteboard</li><li>Make the interface simpler and simpler by repeatedly asking ‘How can we reduce the number of times the user needs to click or type in this task path?’</li></ul><p><strong>Styling we left to the very end of the project</strong> - colors, fonts, margins, icons. Layout was done as part of the earlier UI wireframe design. The team <strong>did not want to spend money on a professional graphic designer</strong> so I picked some colors from the clients’ logo and added some background textures and colors to the sections of each page to make them more distinct. </p><p>Finally, we did some <strong>cubicle testing</strong> with our colleagues in the building to make small changes, like instructions and wording. </p><p>I think the site is currently highly usable and pleasant enough. I hope if it’s successfully adopted by the users the clients will be willing to spend a few days of a designer’s time to make it visually appealling.</p><h3 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h3><p>Session tokens are kept in the browser memory in a <strong>Javascript Web Token instead of a cookie</strong>.  Keeping the token in a <a href="https://www.google.com/search?q=JwtSecurityTokenHandler">JWT</a> means that the web service can be called by any program that has a token, and not just a web browser. It makes the server truly stateless and client agnostic. </p><p>The token is not kept in the browser storage to prevent hackers accessing it. Thus the user has to sign in again after closing the window. </p><p>Any call to the server passes in the token and gets a new token back, with a new expiry time of 15 minutes.</p><h3 id="AngularJS-is-slow"><a href="#AngularJS-is-slow" class="headerlink" title="AngularJS is slow"></a>AngularJS is slow</h3><p>For small apps AngularJS is fast enough. But we found opening a patient’s record with six tabs on it was unusably slow on one of our computers. </p><p>First, we <strong>turned off the ‘Limit CPU’</strong> option on the computer’s power settings. That made a huge difference. </p><p>But the page still took almost a minute to load. Using <strong>Batarang</strong> we saw the majority of the time was spent in the date pickers (Angular UI), of which we had about twenty on various tabs. This is because the <strong>date pickers use watches, which are super slow</strong>. </p><p>We tried another Angular date picker but that had the same problem. So eventually we used the <a href="https://github.com/dbushell/Pikaday">Pikaday</a> date picker and wrapped it in our own Angular directive. This was a very wasteful exercise and I wish I’d known in advance <strong>how terribly bad Angular components</strong> can be.  Rewriting the date pickers improved our load speed to about 30 seconds. </p><p>We then used <strong>‘track by id’ in all our ng-repeat</strong> elements (for the ICD trees, and other trees). This improved load speed to twenty seconds. </p><p>Finally, we <strong>changed all our message text bindings to once off</strong>, <code>{{::messages.HelloWorld}}</code> and changed our largest watches to <a href="/en/2015/using-the-observer-pattern-to-replace-slow-watches-in-angularjs/" title="use a publish-subscribe system">use a publish-subscribe system</a>. This improved load speed to under ten seconds on the slowest machines, which our client is happy with.</p><h3 id="Use-Angular-Material"><a href="#Use-Angular-Material" class="headerlink" title="Use Angular Material"></a>Use Angular Material</h3><p><a href="https://material.angularjs.org/latest/#/">Angular Material</a> looks far prettier than Bootstrap. If I’d known about it when starting the project I would have used it instead. </p><p>But if I were to do the project again I’d try React.js and Flux, which look like they solve the complexities of <a href="https://www.youtube.com/watch?v=nYkdrAPrdcw">user driven event madness</a>.</p><h3 id="Lunr-js-and-web-workers"><a href="#Lunr-js-and-web-workers" class="headerlink" title="Lunr.js and web workers"></a>Lunr.js and web workers</h3><p>Our ICD trees (and facilities and medications) have a LOT of items (60 000 diagnosis codes).  We decided to send them all to the browser and use lunr.js full text indexing to make searching them instant as the user is typing.  The indexing takes a while so you need to <a href="/en/2015/use-a-web-worker-to-asynchronously-populate-a-lunr-js-full-text-search-index/" title="use a web worker">use a web worker</a>. </p><p>We also wanted to avoid sending all this data to the browser on every page load. So we zip the  <a href="/en/2015/compressing-data-between-server-and-web-browser-using-lzstring-and-local-storage-in-html-5/" title="JSON on the server">JSON on the server</a>, send it to the browser, and store it in HTML5 local storage. When the application loads it retrieves the data, unzips it, and calculates the search index.</p><h3 id="Refactoring-Javascript"><a href="#Refactoring-Javascript" class="headerlink" title="Refactoring Javascript"></a>Refactoring Javascript</h3><p>Refactoring a large Javascript app with lots of calls passing different objects between services is a fragile process because Javascript is a dynamically typed language. We created a large number of bugs with incorrectly called methods and incorrect property names in objects. For my next project I would definitely <strong>try a statically typed language that compiles to Javascript</strong>, like <strong>Typescript</strong>, which seems to have won.</p><h3 id="Logging-events-and-notifications"><a href="#Logging-events-and-notifications" class="headerlink" title="Logging, events, and notifications"></a>Logging, events, and notifications</h3><p>One of the system requirements was that <strong>all changes to any patient or medical information has to be logged</strong>. Doctors also wanted notifications for certain important events (like ICD codes that affected medical insurance changing). We used a two part system for this:</p><ul><li><strong>Events</strong> - one table that holds: the table that changed, the row number, the old value, the new value, and the user that made the change</li><li><strong>Notifications</strong> - another table that holds: a user to be notified, the event that caused the notification and the patient record it pertains to, message text</li></ul><p>One technical challenge we had was: <strong>how do we know what changed when a user clicks save?</strong> Especially since different users on the system have permissions to save only parts of a record. Ideas included:</p><ul><li>checking what changed on the client and sending only the differences to the server</li><li>checking what changed on the server and saving only that</li><li>sending and saving everything</li></ul><p>Each of these options has drawbacks around: <strong>security</strong> (not trusting what a client might send us), <strong>log size</strong> and <strong>accuracy</strong> (logging something that might not be a change), and <strong>speed</strong> (comparing every field on a record that has to reassembled from calls to our databse and the external hospital system). We eventually settled on the middle option:</p><ul><li>the clients sends an entire record to the server when clicking save</li><li>the server looks in memory to see if it has a copy of that record from when the client first requested it, else it loads the whole thing again from external systems</li><li>the server compares the tabs on both records and saves only what’s changed, if the user has permission to save it</li><li>the event manager code logs events in the event table for every field changed</li><li>the notification manager code is called for every event and has a chance to save a notification for any relevant users in the notification table</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve just finished creating a web app to create and share patients’ discharge summaries at public hospitals. &lt;em&gt;ECCR&lt;/em&gt; was written with my team of &lt;a href=&quot;http://saratoga.co</summary>
        
      
    
    
    
    <category term="angularjs" scheme="https://richardcooke.info/categories/angularjs/"/>
    
    <category term="c#" scheme="https://richardcooke.info/categories/angularjs/c/"/>
    
    <category term="design" scheme="https://richardcooke.info/categories/angularjs/c/design/"/>
    
    <category term="intersystems caché" scheme="https://richardcooke.info/categories/angularjs/c/design/intersystems-cache/"/>
    
    <category term="javascript" scheme="https://richardcooke.info/categories/angularjs/c/design/intersystems-cache/javascript/"/>
    
    <category term="portfolio" scheme="https://richardcooke.info/categories/angularjs/c/design/intersystems-cache/javascript/portfolio/"/>
    
    <category term="programming" scheme="https://richardcooke.info/categories/angularjs/c/design/intersystems-cache/javascript/portfolio/programming/"/>
    
    <category term="software" scheme="https://richardcooke.info/categories/angularjs/c/design/intersystems-cache/javascript/portfolio/programming/software/"/>
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="asp.net" scheme="https://richardcooke.info/tags/asp-net/"/>
    
    <category term="angular.js" scheme="https://richardcooke.info/tags/angular-js/"/>
    
    <category term="eccr" scheme="https://richardcooke.info/tags/eccr/"/>
    
    <category term="hst" scheme="https://richardcooke.info/tags/hst/"/>
    
    <category term="saratoga" scheme="https://richardcooke.info/tags/saratoga/"/>
    
  </entry>
  
  <entry>
    <title>ObjectDumper - log details of objects in memory for debugging errors</title>
    <link href="https://richardcooke.info/en/2015/objectdumper-log-details-of-objects-in-memory-for-debugging-errors/"/>
    <id>https://richardcooke.info/en/2015/objectdumper-log-details-of-objects-in-memory-for-debugging-errors/</id>
    <published>2015-08-14T14:13:48.000Z</published>
    <updated>2022-05-27T17:09:22.133Z</updated>
    
    <content type="html"><![CDATA[<p>If you have an error (e.g. null object exception) in .NET code that you can’t debug locally - for instance if your app is running on a client’s server - then write out all relevant details in memory to a file.</p><p>Install ObjectDumper using nuget: <a href="https://www.nuget.org/packages/ObjectDumper/">https://www.nuget.org/packages/ObjectDumper/</a></p><p>ObjectDumper creates extension methods on objects like <code>DumpToString</code> and <code>Dump</code>.</p><p>So log the object to examine straight to a file or using log4net:<br><code>_logger.Error(result.DumpToString(&quot;GetAllPatientConsultationDataForPdf&quot;));</code></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you have an error (e.g. null object exception) in </summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term=".net" scheme="https://richardcooke.info/tags/net/"/>
    
    <category term="objectdumper" scheme="https://richardcooke.info/tags/objectdumper/"/>
    
  </entry>
  
  <entry>
    <title>Using the observer pattern to replace slow watches in AngularJS</title>
    <link href="https://richardcooke.info/en/2015/using-the-observer-pattern-to-replace-slow-watches-in-angularjs/"/>
    <id>https://richardcooke.info/en/2015/using-the-observer-pattern-to-replace-slow-watches-in-angularjs/</id>
    <published>2015-07-01T15:22:44.000Z</published>
    <updated>2022-05-27T17:09:22.132Z</updated>
    
    <content type="html"><![CDATA[<p>Here’s a snippet of code you can use in your service to alert controllers of changes to data. </p><p>It’s better than <code>$watch</code> as it fires only on changes, whereas $watches fire far too much for good performance.  The page uses Underscore.js. </p><p>This is the service:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">factory</span>(<span class="string">&quot;AccountService&quot;</span>, ....</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> _serviceToReturn = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> _signedInWatchers = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">//returns a function you can call to stop watching (e.g. on controller destroy)</span></span><br><span class="line">  _serviceToReturn.<span class="property">WatchSignIn</span> = <span class="keyword">function</span> (<span class="params">callback</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//add the observers to our list</span></span><br><span class="line">    _signedInWatchers.<span class="title function_">push</span>(callback);</span><br><span class="line">    <span class="comment">//remove the observers from our list when called</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123; _signedInWatchers = _.<span class="title function_">without</span>(_signedInWatchers, callback); &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  _serviceToReturn.<span class="property">SignIn</span> = <span class="keyword">function</span> (<span class="params">username, password</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//tell controllers data has changed now that someone signed in</span></span><br><span class="line">    <span class="title class_">AlertSignedInWatchers</span>();</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">AlertSignedInWatchers</span>(<span class="params"></span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//alert every observer</span></span><br><span class="line">    _.<span class="title function_">each</span>(_signedInWatchers, <span class="keyword">function</span> (<span class="params">callback</span>) &#123; <span class="title function_">callback</span>();&#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>And here’s the controller that uses it:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">controller</span>(<span class="string">&#x27;NavbarController&#x27;</span>,...</span><br><span class="line">&#123;</span><br><span class="line">   _stopWatchingSignIn = <span class="title class_">AccountService</span>.<span class="title class_">WatchSignIn</span>(updateNavbar);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">updateNavbar</span>(<span class="params"></span>)</span><br><span class="line">  &#123;</span><br><span class="line">    $scope.<span class="property">data</span>.<span class="property">message</span> = <span class="string">&#x27;welcome&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $scope.$on(<span class="string">&#x27;$destroy&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="title function_">_stopWatchingSignIn</span>();</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Here’s a snippet of code you can use in your service to alert controllers of changes to data</summary>
        
      
    
    
    
    <category term="angularjs" scheme="https://richardcooke.info/categories/angularjs/"/>
    
    
    <category term="angular.js" scheme="https://richardcooke.info/tags/angular-js/"/>
    
  </entry>
  
  <entry>
    <title>Create a PDF from an HTML page in C#</title>
    <link href="https://richardcooke.info/en/2015/create-a-pdf-from-an-html-page-in-c/"/>
    <id>https://richardcooke.info/en/2015/create-a-pdf-from-an-html-page-in-c/</id>
    <published>2015-06-03T12:15:59.000Z</published>
    <updated>2022-05-27T17:09:22.130Z</updated>
    
    <content type="html"><![CDATA[<p>There are lots of libraries in .NET to create PDFs. We chose because TuesPechkin because it creates PDFs from HTML, and HTML is easy to make and has a flexible layout - so containers expand to fit content on the page.</p><h2 id="Add-TuesPechkin-to-your-project"><a href="#Add-TuesPechkin-to-your-project" class="headerlink" title="Add TuesPechkin to your project"></a>Add TuesPechkin to your project</h2><p>Use Nuget to add TuesPechkin and either TuesPechkin.Wkhtmltox.Win64 or 32. Note that adding these unmanaged 64 or 32 bit DLLs mean your application is no longer machine agnostic - you now <strong>must</strong> deploy to a 64 or 32 bit server. (Ensure you have installed VC runtime on any server you deploy to: <a href="https://www.microsoft.com/en-us/download/confirmation.aspx?id=40784">https://www.microsoft.com/en-us/download/confirmation.aspx?id=40784</a>)</p><h2 id="Make-some-PDF-templates"><a href="#Make-some-PDF-templates" class="headerlink" title="Make some PDF templates"></a>Make some PDF templates</h2><p>Add some .html files to your App_Data folder. Use some special string of letters like %% as markers for fields you will replace in code:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&#x27;en&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&#x27;utf-8&#x27;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>%%Title%%<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;description&#x27;</span> <span class="attr">content</span>=<span class="string">&#x27;%%Title%%&#x27;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;author&#x27;</span> <span class="attr">content</span>=<span class="string">&#x27;ECCR&#x27;</span> /&gt;</span></span><br><span class="line">    %%Style%%   </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    %%DraftStamp%%</span><br><span class="line">    %%Header%%</span><br><span class="line">    %%Admission%%</span><br><span class="line">    %%IcdCodes%%</span><br><span class="line">    %%History%%</span><br><span class="line">    %%Investigation%%</span><br><span class="line">    %%Future%%</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In your stylesheet you can use most modern CSS, such as web fonts. I used tables instead of flexbox and Bootstrap though, the latter didn’t seem to convert properly:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="keyword">@font-face</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">&#x27;Barcode&#x27;</span>;</span><br><span class="line">        <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">../Fonts/fre3of9x.ttf</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@font-face</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">&#x27;RobotoLight&#x27;</span>;</span><br><span class="line">        <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">../Fonts/Roboto-Light.ttf</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.barcode</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">&#x27;Barcode&#x27;</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">36pt</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">html</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">font-family</span>: <span class="string">&#x27;RobotoLight&#x27;</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">10pt</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">td</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Load-the-root-template-and-replace-all-placeholders"><a href="#Load-the-root-template-and-replace-all-placeholders" class="headerlink" title="Load the root template and replace all placeholders"></a>Load the root template and replace all placeholders</h2><p>Open the main html file, e.g. <em>report.html</em>, and then simple do string replacement of all special fields you added.  Where a field refers to another html template then load that file and replace its fields, and so on. Don’t forget to HtmlEncode() your data so it doesn’t break the html tags.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetFuture</span>(<span class="params">PatientVisitConsultation data, <span class="built_in">string</span> imageFolder, <span class="built_in">string</span> pdfTemplatesFolder</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> html = File.ReadAllText(pdfTemplatesFolder + <span class="string">&quot;Future.html&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (data.Consultation.Administration.FormTypeId == <span class="number">3</span>)</span><br><span class="line">        html = html.Replace(<span class="string">&quot;%%FutureHeader%%&quot;</span>, WebUtility.HtmlEncode(<span class="string">&quot;POST-MORTEM REQUIREMENTS&quot;</span>));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        html = html.Replace(<span class="string">&quot;%%FutureHeader%%&quot;</span>, WebUtility.HtmlEncode(<span class="string">&quot;FUTURE MANAGEMENT, OUTSTANDING INVESTIGATIONS, AND DESIRED OUTCOME&quot;</span>));</span><br><span class="line">    html = html.Replace(<span class="string">&quot;%%FutureText%%&quot;</span>, _futureBuilder.GetText(data));</span><br><span class="line">    <span class="keyword">return</span> html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Save the html to a single file (or two if you want more pages):</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File.WriteAllText(pdfFolder + filenameWithoutExtension + <span class="string">&quot;Page2.html&quot;</span>, html.ToString());</span><br></pre></td></tr></table></figure><h3 id="Warning-don’t-use-opacity"><a href="#Warning-don’t-use-opacity" class="headerlink" title="Warning - don’t use opacity"></a>Warning - don’t use opacity</h3><p>It increased my final PDF file size from 30kb to 350kb.</p><h2 id="Convert-the-html-pages-to-a-PDF"><a href="#Convert-the-html-pages-to-a-PDF" class="headerlink" title="Convert the html pages to a PDF"></a>Convert the html pages to a PDF</h2><p>Create a singleton instance of TuesPechkin in your IoC container like this:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> IConverter _pdfConverter = </span><br><span class="line"><span class="keyword">new</span> ThreadSafeConverter(</span><br><span class="line"><span class="keyword">new</span> RemotingToolset&lt;PdfToolset&gt;(</span><br><span class="line"><span class="keyword">new</span> Win64EmbeddedDeployment(</span><br><span class="line">    <span class="keyword">new</span> TempFolderDeployment())));</span><br></pre></td></tr></table></figure><p>Then convert the html to PDF like this:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreatePdfFromHtmlPage</span>(<span class="params">PatientVisitConsultation data, <span class="built_in">string</span> pdfFolder, <span class="built_in">string</span> filenameWithoutExtension</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> document = <span class="keyword">new</span> HtmlToPdfDocument</span><br><span class="line">    &#123;</span><br><span class="line">        GlobalSettings =</span><br><span class="line">        &#123;</span><br><span class="line">            ProduceOutline = <span class="literal">true</span>,</span><br><span class="line">            DocumentTitle = filenameWithoutExtension,</span><br><span class="line">            PaperSize = PaperKind.A4,</span><br><span class="line">            Margins =</span><br><span class="line">            &#123;</span><br><span class="line">                All = <span class="number">0.1</span>,</span><br><span class="line">                Unit = Unit.Centimeters</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        Objects = &#123;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (data.Consultation.Administration.FormTypeId == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        document.Objects.Add(<span class="keyword">new</span> ObjectSettings &#123; PageUrl = pdfFolder + filenameWithoutExtension + <span class="string">&quot;Page1.html&quot;</span>&#125;);</span><br><span class="line">        document.Objects.Add(<span class="keyword">new</span> ObjectSettings &#123; PageUrl = pdfFolder + filenameWithoutExtension + <span class="string">&quot;Page2.html&quot;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> document.Objects.Add(<span class="keyword">new</span> ObjectSettings &#123; PageUrl = pdfFolder + filenameWithoutExtension + <span class="string">&quot;.html&quot;</span> &#125;);</span><br><span class="line">    <span class="built_in">byte</span>[] result = _pdfConverter.Convert(document);</span><br><span class="line">    File.WriteAllBytes(pdfFolder + filenameWithoutExtension + <span class="string">&quot;.pdf&quot;</span>, result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Return-the-PDF-in-a-web-service"><a href="#Return-the-PDF-in-a-web-service" class="headerlink" title="Return the PDF in a web service"></a>Return the PDF in a web service</h2><p>If you want to send the PDF to a browser then use this method:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="string">&quot;GetPdfForConsultation&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IHttpActionResult <span class="title">GetPdfForConsultation</span>(<span class="params">HttpRequestMessage request, <span class="built_in">long</span> consultationId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> token = request.Content.ReadAsStringAsync().Result.Substring(<span class="number">6</span>); <span class="comment">//&quot;token=243lblahblahblah&quot;</span></span><br><span class="line">    <span class="keyword">var</span> hisSignInModel = _tokenManager.ValidateToken(token);</span><br><span class="line">    _userManager.ThrowExceptionIfUserDoesNotHavePermission(token, PermissionName.ViewDischargeSummaries, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pdfFolder = HostingEnvironment.MapPath(<span class="string">@&quot;~/&quot;</span> + Core.Configuration.DischargePdfFolder);</span><br><span class="line">    <span class="keyword">var</span> imageFolder = HostingEnvironment.MapPath(<span class="string">@&quot;~/&quot;</span> + Core.Configuration.ImageFolder);</span><br><span class="line">    <span class="keyword">var</span> pdfTemplatesFolder = HostingEnvironment.MapPath(<span class="string">@&quot;~/&quot;</span> + Core.Configuration.PdfTemplatesFolder);</span><br><span class="line">    _pdfManager.DeleteOldPdfs(pdfFolder);</span><br><span class="line">    <span class="keyword">var</span> filename = _pdfManager.CreateDischargePdfAndReturnFilename(consultationId, pdfFolder, hisSignInModel, imageFolder, pdfTemplatesFolder);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return pdf</span></span><br><span class="line">    <span class="keyword">var</span> path = pdfFolder + filename;</span><br><span class="line">    <span class="built_in">byte</span>[] fileBytes = System.IO.File.ReadAllBytes(path);</span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.OK);</span><br><span class="line">    response.Content = <span class="keyword">new</span> ByteArrayContent(fileBytes);</span><br><span class="line">    response.Content.Headers.ContentDisposition = <span class="keyword">new</span> ContentDispositionHeaderValue(<span class="string">&quot;inline&quot;</span>); <span class="comment">//&#x27;attachment&#x27; will download instead</span></span><br><span class="line">    response.Content.Headers.ContentDisposition.FileName = filename;</span><br><span class="line">    response.Content.Headers.ContentType = <span class="keyword">new</span> MediaTypeHeaderValue(<span class="string">&quot;application/pdf&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ResponseMessage(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There are lots of libraries in .NET to create PDFs</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="pdf" scheme="https://richardcooke.info/tags/pdf/"/>
    
    <category term="html" scheme="https://richardcooke.info/tags/html/"/>
    
    <category term="tuespechkin" scheme="https://richardcooke.info/tags/tuespechkin/"/>
    
  </entry>
  
  <entry>
    <title>Print a PDF dynamically from the server using a hidden iframe</title>
    <link href="https://richardcooke.info/en/2015/print-a-pdf-dynamically-from-the-server-using-a-hidden-iframe/"/>
    <id>https://richardcooke.info/en/2015/print-a-pdf-dynamically-from-the-server-using-a-hidden-iframe/</id>
    <published>2015-06-03T10:57:44.000Z</published>
    <updated>2022-05-27T17:09:22.131Z</updated>
    
    <content type="html"><![CDATA[<p>Loading a PDF using a link with the src attribute pointing to a public PDF is easy. But how to print a PDF retrieved from a web service in Javascript, without displaying it on the screen first?  Use a dynamically added form in a hidden iframe.</p><p>If you just want to display the PDF dynamically, then see my other PDF <a href="/en/2015/show-a-pdf-from-the-server-in-a-new-tab-on-button-click/" title="post">post</a>.</p><p>Below is the browser code (vanilla Javascript) to create a dynamic hidden form in a dynamic hidden iframe, submit it, wait for the PDF to return, and then print it:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//have a div in your html somewhere with this id. height=0 width=0</span></span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pdfDiv&#x27;</span>);</span><br><span class="line"><span class="comment">//we make a new iframe every time we print or the DOM manipulation below breaks</span></span><br><span class="line">div.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;iframe width=&quot;0&quot; height=&quot;0&quot; id=&quot;pdfFrame&quot;&gt;&lt;/iframe&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> frame = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pdfFrame&#x27;</span>);</span><br><span class="line">frame.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="title function_">open</span>();</span><br><span class="line"><span class="comment">//add a &lt;body&gt; to the iframe so we can add a form to it below</span></span><br><span class="line">frame.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;body&gt;&lt;/body&gt;&#x27;</span>);</span><br><span class="line">frame.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="title function_">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&#x27;http://localhost/Pdf/GetPdfForConsultation?consultationId=&#x27;</span> + consultation.<span class="property">Id</span>;</span><br><span class="line"><span class="comment">//make a form to call the url above and return the pdf</span></span><br><span class="line"><span class="keyword">var</span> form = frame.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;form&quot;</span>);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;pdfForm&quot;</span>);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;method&quot;</span>, <span class="string">&quot;post&quot;</span>);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;action&quot;</span>, url);</span><br><span class="line"><span class="comment">//add as many input fields as your service needs</span></span><br><span class="line"><span class="keyword">var</span> field = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">field.<span class="title function_">setAttribute</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">field.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>, <span class="title class_">AccountService</span>.<span class="title class_">GetAuthenticationToken</span>());</span><br><span class="line">form.<span class="title function_">appendChild</span>(field);</span><br><span class="line"><span class="comment">//add the form to the new iframe body</span></span><br><span class="line">frame.<span class="property">contentWindow</span>.<span class="property">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(form);</span><br><span class="line"><span class="comment">//wait until the pdf has loaded until printing just this hidden frame, not the surrounding page</span></span><br><span class="line">frame.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">    frame.<span class="property">contentWindow</span>.<span class="title function_">focus</span>();</span><br><span class="line">    frame.<span class="property">contentWindow</span>.<span class="title function_">print</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//start loading the pdf from the server</span></span><br><span class="line">form.<span class="title function_">submit</span>();</span><br></pre></td></tr></table></figure><p>The server code (C# WebAPI) to return a PDF:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="string">&quot;GetPdfForConsultation&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IHttpActionResult <span class="title">GetPdfForConsultation</span>(<span class="params">HttpRequestMessage request, <span class="built_in">long</span> consultationId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> content = request.Content.ReadAsStringAsync().Result;</span><br><span class="line"><span class="keyword">var</span> token = content.Substring(<span class="number">6</span>); <span class="comment">//&quot;token=243lblahblahblah&quot;</span></span><br><span class="line"><span class="keyword">var</span> path = HostingEnvironment.MapPath(<span class="string">@&quot;~/&quot;</span> + Core.Configuration.PdfFolder + <span class="string">&quot;2015-05-25-13h41m54-TBH20949482.pdf&quot;</span>);</span><br><span class="line"><span class="built_in">byte</span>[] fileBytes = System.IO.File.ReadAllBytes(path);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> response = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.OK);</span><br><span class="line">response.Content = <span class="keyword">new</span> ByteArrayContent(fileBytes);</span><br><span class="line">response.Content.Headers.ContentDisposition = <span class="keyword">new</span> ContentDispositionHeaderValue(<span class="string">&quot;inline&quot;</span>); <span class="comment">//opens in tab, use &#x27;attachment&#x27; to download instead</span></span><br><span class="line">response.Content.Headers.ContentDisposition.FileName = <span class="string">&quot;2015-05-25-13h41m54-TBH20949482.pdf&quot;</span>;</span><br><span class="line">response.Content.Headers.ContentType = <span class="keyword">new</span> MediaTypeHeaderValue(<span class="string">&quot;application/pdf&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> ResponseMessage(response);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Loading a PDF using a link with the src attribute pointing to a public PDF is easy</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="pdf" scheme="https://richardcooke.info/tags/pdf/"/>
    
    <category term="iframe" scheme="https://richardcooke.info/tags/iframe/"/>
    
    <category term="print" scheme="https://richardcooke.info/tags/print/"/>
    
  </entry>
  
  <entry>
    <title>Show a PDF from the server in a new tab on button click</title>
    <link href="https://richardcooke.info/en/2015/show-a-pdf-from-the-server-in-a-new-tab-on-button-click/"/>
    <id>https://richardcooke.info/en/2015/show-a-pdf-from-the-server-in-a-new-tab-on-button-click/</id>
    <published>2015-05-26T11:56:58.000Z</published>
    <updated>2022-05-27T17:09:22.129Z</updated>
    
    <content type="html"><![CDATA[<p>Loading a PDF using a link with the src attribute pointing to a public PDF is easy.</p><p>But how to display a PDF retrieved from a web service in Javascript?  Use a dynamically added form.</p><p>Below is the browser code (vanilla Javascript) to create a dynamic hidden form and submit it in a new tab to hold the PDF:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="title class_">UrlService</span>.<span class="title class_">GetUrlOfWebApi</span>() + <span class="string">&#x27;Pdf/GetPdfForConsultation?consultationId=&#x27;</span> + consultation.<span class="property">Id</span>;</span><br><span class="line"><span class="keyword">var</span> tabName = <span class="string">&quot;PdfDisplayTab&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> form = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;form&quot;</span>);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;noid&quot;</span>);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;method&quot;</span>, <span class="string">&quot;post&quot;</span>);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;action&quot;</span>, url);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;target&quot;</span>, tabName);</span><br><span class="line">form.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;display: none;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> field = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;input&quot;</span>); <span class="comment">//add a post data value</span></span><br><span class="line">field.<span class="title function_">setAttribute</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">field.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>, <span class="title class_">AccountService</span>.<span class="title class_">GetAuthenticationToken</span>());</span><br><span class="line">form.<span class="title function_">appendChild</span>(field);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(form);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;about:blank&#x27;</span>, tabName); <span class="comment">//open form in new window</span></span><br><span class="line">form.<span class="title function_">submit</span>();</span><br></pre></td></tr></table></figure><p>The server code (C# WebAPI) to return a PDF:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="string">&quot;GetPdfForConsultation&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IHttpActionResult <span class="title">GetPdfForConsultation</span>(<span class="params">HttpRequestMessage request, <span class="built_in">long</span> consultationId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> content = request.Content.ReadAsStringAsync().Result;</span><br><span class="line">    <span class="keyword">var</span> token = content.Substring(<span class="number">6</span>); <span class="comment">//&quot;token=243lblahblahblah&quot;</span></span><br><span class="line">    <span class="keyword">var</span> path = HostingEnvironment.MapPath(<span class="string">@&quot;~/&quot;</span> + Core.Configuration.PdfFolder + <span class="string">&quot;2015-05-25-13h41m54-TBH20949482.pdf&quot;</span>);</span><br><span class="line">    <span class="built_in">byte</span>[] fileBytes = System.IO.File.ReadAllBytes(path);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.OK);</span><br><span class="line">    response.Content = <span class="keyword">new</span> ByteArrayContent(fileBytes);</span><br><span class="line">    response.Content.Headers.ContentDisposition = <span class="keyword">new</span> ContentDispositionHeaderValue(<span class="string">&quot;inline&quot;</span>); <span class="comment">//opens in tab, use &#x27;attachment&#x27; to download instead</span></span><br><span class="line">    response.Content.Headers.ContentDisposition.FileName = <span class="string">&quot;2015-05-25-13h41m54-TBH20949482.pdf&quot;</span>;</span><br><span class="line">    response.Content.Headers.ContentType = <span class="keyword">new</span> MediaTypeHeaderValue(<span class="string">&quot;application/pdf&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ResponseMessage(response);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Loading a PDF using a link with the src attribute pointing to a public PDF is easy.&lt;/p&gt;
&lt;p&gt;But how to display a PDF retrieved from a web service in Javascript?  Use a dynamically added form</summary>
        
      
    
    
    
    <category term="javascript" scheme="https://richardcooke.info/categories/javascript/"/>
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="pdf" scheme="https://richardcooke.info/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>Dynamically (programmatically) add a directive to an AngularJS view on click</title>
    <link href="https://richardcooke.info/en/2015/dynamically-programmatically-add-a-directive-to-an-angularjs-view-on-click/"/>
    <id>https://richardcooke.info/en/2015/dynamically-programmatically-add-a-directive-to-an-angularjs-view-on-click/</id>
    <published>2015-04-14T15:38:43.000Z</published>
    <updated>2022-05-27T17:09:22.128Z</updated>
    
    <content type="html"><![CDATA[<p>This post explains how to add a directive to a view when clicking a button - as opposed to having the directive in the HTML already when the page loads. This is the directive:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">myapp.<span class="title function_">directive</span>(<span class="string">&#x27;myappDischargeReferral&#x27;</span>, [<span class="string">&#x27;datepickerPopupConfig&#x27;</span>, <span class="string">&#x27;dateParser&#x27;</span>, <span class="string">&#x27;dateFilter&#x27;</span>, <span class="keyword">function</span> (<span class="params">datepickerPopupConfig, dateParser, dateFilter</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> _directive =</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">restrict</span>: <span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">        <span class="attr">replace</span>: <span class="literal">true</span>,    </span><br><span class="line">        <span class="attr">scope</span>: &#123;&#125;, <span class="comment">//ensure this directive uses isolate scope</span></span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&lt;a href=&quot;http://google.com&quot;&gt; Click me to go to Google&lt;/a&gt;&lt;/div&gt;&#x27;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> _directive;</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure><p>This is the view we want to add it to when clicking the button:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">data-ng-controller</span>=<span class="string">&quot;myController&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;referralsContainer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">data-ng-click</span>=<span class="string">&quot;data.addDischargeReferralDiv();&quot;</span>&gt;</span></span><br><span class="line">Add</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span>          </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>This is the controller for the view that adds it:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">myapp.<span class="title function_">controller</span>(<span class="string">&#x27;myController&#x27;</span>, [<span class="string">&#x27;$compile&#x27;</span>, <span class="keyword">function</span> (<span class="params">$compile</span>)</span><br><span class="line">&#123;    </span><br><span class="line">    $scope.<span class="property">data</span> =&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    $scope.<span class="property">data</span>.<span class="property">addDischargeReferralDiv</span> = <span class="keyword">function</span> (<span class="params"></span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="keyword">var</span> referralDivFactory = $compile(<span class="string">&quot;&lt;myapp-discharge-referral&gt;&lt;/myapp-discharge-referral&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> referralDiv = <span class="title function_">referralDivFactory</span>($scope);</span><br><span class="line">        <span class="keyword">var</span> containerDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;referralsContainer&#x27;</span>);</span><br><span class="line">        angular.<span class="title function_">element</span>(containerDiv).<span class="title function_">append</span>(referralDiv);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This post explains how to add a directive to a view when clicking a button - as opposed to having the directive in the HTML already when the page loads</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="angular.js" scheme="https://richardcooke.info/tags/angular-js/"/>
    
  </entry>
  
  <entry>
    <title>Prefer sentence case to title case</title>
    <link href="https://richardcooke.info/en/2015/prefer-sentence-case-to-title-case/"/>
    <id>https://richardcooke.info/en/2015/prefer-sentence-case-to-title-case/</id>
    <published>2015-03-28T08:05:36.000Z</published>
    <updated>2022-05-27T17:09:22.127Z</updated>
    
    <content type="html"><![CDATA[<p>I always use sentence case in all text in my applications in preference to title case, which clients sometimes initally expect. </p><p>For example <code>This is a heading</code> rather than <code>This is a Heading</code></p><h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><ol><li>It makes the English you use correct. It complies with the Oxford style guide - capitalise only where necessary (e.g. proper nouns and the start of a sentence).</li><li>Sentence case is faster to read (because your visual system recognises entire word shapes in one glance).</li><li>It looks modern, rather than old fashioned.</li><li>It’s friendly. It mimics your natural written conversational style.</li><li>Title case is hard to define. Which is correct?<ul><li><em>Title Case is Great for Print</em></li><li><em>Title Case Is Great For Print</em></li></ul></li><li>Where exactly do you use title case?  On headings and labels?  Well, what about emphasis text? What about one sentence paragraphs that look like headings?  It soon gets confusing and arbitrary capital letters start appearing all over the place.</li><li>Sentence case complies with the ISO ergonomics standard for human computer interaction, ISO 9241.</li></ol><h2 id="Reasons-you-might-want-to-use-title-case"><a href="#Reasons-you-might-want-to-use-title-case" class="headerlink" title="Reasons you might want to use title case:"></a>Reasons you might want to use title case:</h2><ol><li>You want your application to look old, traditional, or conservative.</li><li>You want your application to look German (which uses capitals for common nouns).</li></ol><h2 id="Learn-more"><a href="#Learn-more" class="headerlink" title="Learn more"></a>Learn more</h2><p>For more information see:</p><ul><li><a href="http://ux.stackexchange.com/questions/28297/should-we-use-title-case-or-sentence-case-for-headlines-and-buttons">http://ux.stackexchange.com/questions/28297/should-we-use-title-case-or-sentence-case-for-headlines-and-buttons</a></li><li><a href="http://usabilitynews.bcs.org/content/conWebDoc/41752">http://usabilitynews.bcs.org/content/conWebDoc/41752</a></li><li><a href="http://www.stickycontent.com/blog/are-you-team-title-case-or-team-sentence-case.php">http://www.stickycontent.com/blog/are-you-team-title-case-or-team-sentence-case.php</a></li><li><a href="http://usabilitynews.bcs.org/content/conWebDoc/41752">http://usabilitynews.bcs.org/content/conWebDoc/41752</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I always use sentence case in all text in my applications in preference to title case, which clients sometimes initally expect</summary>
        
      
    
    
    
    <category term="design" scheme="https://richardcooke.info/categories/design/"/>
    
    
    <category term="english" scheme="https://richardcooke.info/tags/english/"/>
    
    <category term="ui" scheme="https://richardcooke.info/tags/ui/"/>
    
    <category term="ux" scheme="https://richardcooke.info/tags/ux/"/>
    
  </entry>
  
  <entry>
    <title>Use a web worker to asynchronously populate a lunr.js full text search index</title>
    <link href="https://richardcooke.info/en/2015/use-a-web-worker-to-asynchronously-populate-a-lunr-js-full-text-search-index/"/>
    <id>https://richardcooke.info/en/2015/use-a-web-worker-to-asynchronously-populate-a-lunr-js-full-text-search-index/</id>
    <published>2015-03-16T15:18:28.000Z</published>
    <updated>2022-05-27T17:09:22.128Z</updated>
    
    <content type="html"><![CDATA[<p>I was using <a href="http://underscorejs.org/" title="underscorejs">underscorejs</a> to loop through a list of 60 00 ICD codes to put in a <a href="http://lunrjs.com/" title="lunrjs.com">lunr.js</a> full text search index, like this:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_.<span class="title function_">each</span>(dictionary, <span class="keyword">function</span> (<span class="params"><span class="variable language_">document</span></span>) &#123; index.<span class="title function_">add</span>(<span class="variable language_">document</span>); &#125;);</span><br></pre></td></tr></table></figure><h2 id="Too-slow"><a href="#Too-slow" class="headerlink" title="Too slow"></a>Too slow</h2><p>This took about 5 seconds and was freezing the browser page.</p><h2 id="Async-js"><a href="#Async-js" class="headerlink" title="Async.js"></a>Async.js</h2><p>I then tried using <a href="https://github.com/caolan/async" title="async.js">async.js</a>, thinking that it would run my code asynchronously giving the browser some time to draw.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span>.<span class="title function_">eachSeries</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(dictionary), <span class="keyword">function</span> (<span class="params">key, callback</span>)</span><br><span class="line">&#123;</span><br><span class="line">  index.<span class="title function_">add</span>(dictionary[key]);</span><br><span class="line">  <span class="title function_">callback</span>(); <span class="comment">//and also tried &#x27;nextTick&#x27; to do this asynchronously</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Unfortunately that made no difference.  I realised although this code is being called asynchronously once called it still monopolises the processor for five seconds.</p><h2 id="SetTimeout"><a href="#SetTimeout" class="headerlink" title="SetTimeout()"></a>SetTimeout()</h2><p>I then tried putting my code in a loop and every 100 or 1000 entries taking a break using setTimeout(100) to let the browser handle events.  This also made no difference.</p><h2 id="Web-worker"><a href="#Web-worker" class="headerlink" title="Web worker"></a>Web worker</h2><p>Finally I tried to use a web worker - an HTML 5 background thread specifically provided for intensive calculations that might freeze the browser.  For a tutorial see <a href="http://www.html5rocks.com/en/tutorials/workers/basics/" title="html5rocks">http://www.html5rocks.com/en/tutorials/workers/basics/</a>. This worked perfectly. My main thread (UI code) now looks like this:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createFullTextSearchIndexInWebWorker</span>(<span class="params">dictionary</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> worker = <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;Content/js/workers/AddDocumentsToSearchIndex.js&quot;</span>); <span class="comment">//create a web worker to add documents to full text index in the background</span></span><br><span class="line">  worker.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">e</span>) <span class="comment">//update our full text when the worker sends us its output when finished</span></span><br><span class="line">  &#123;</span><br><span class="line">     _icdDiagnosisCodesFullTextIndex = lunr.<span class="property">Index</span>.<span class="title function_">load</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(e.<span class="property">data</span>))</span><br><span class="line">     worker.<span class="title function_">terminate</span>(); <span class="comment">//kill the thread cos it no longer benefits us and must die</span></span><br><span class="line">  &#125;</span><br><span class="line">  worker.<span class="title function_">postMessage</span>(dictionary); <span class="comment">//start the worker by giving it the documents to index</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>and my web worker js file looks like this</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">  self.<span class="property">importScripts</span></span><br><span class="line">  (</span><br><span class="line">    <span class="string">&quot;../../bower_components/underscore/underscore.js&quot;</span></span><br><span class="line">    ,<span class="string">&quot;../../bower_components/lunr.js/lunr.min.js&quot;</span></span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">  self.<span class="property">addEventListener</span></span><br><span class="line">  (</span><br><span class="line">    <span class="string">&#x27;message&#x27;</span></span><br><span class="line">    , <span class="keyword">function</span> (<span class="params">e</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">var</span> index = <span class="title function_">lunr</span>(<span class="keyword">function</span> (<span class="params"></span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Name&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Code&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Instructions_Includes&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Instructions_Excludes&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Instructions_Notes&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Instructions_Terminology&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">field</span>(<span class="string">&#x27;Instructions_Morbidity&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">ref</span>(<span class="string">&#x27;Id&#x27;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      _.<span class="title function_">each</span>(e.<span class="property">data</span>, <span class="keyword">function</span> (<span class="params"><span class="variable language_">document</span></span>) &#123; index.<span class="title function_">add</span>(<span class="variable language_">document</span>); &#125;);</span><br><span class="line">      self.<span class="title function_">postMessage</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(index.<span class="title function_">toJSON</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">    , <span class="literal">false</span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I was using &lt;a href=&quot;http://underscorejs.org/&quot; title=&quot;underscorejs&quot;&gt;underscorejs&lt;/a&gt; to loop through a list of 60 00 ICD codes to put in a &lt;a href=&quot;http://lunrjs.com/&quot; title=&quot;lunrjs.com&quot;&gt;lunr</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="async.js" scheme="https://richardcooke.info/tags/async-js/"/>
    
    <category term="lunr.js" scheme="https://richardcooke.info/tags/lunr-js/"/>
    
    <category term="underscorejs" scheme="https://richardcooke.info/tags/underscorejs/"/>
    
    <category term="web worker" scheme="https://richardcooke.info/tags/web-worker/"/>
    
  </entry>
  
  <entry>
    <title>Compressing data between server and web browser using LZstring and local storage in HTML 5</title>
    <link href="https://richardcooke.info/en/2015/compressing-data-between-server-and-web-browser-using-lzstring-and-local-storage-in-html-5/"/>
    <id>https://richardcooke.info/en/2015/compressing-data-between-server-and-web-browser-using-lzstring-and-local-storage-in-html-5/</id>
    <published>2015-03-11T21:36:58.000Z</published>
    <updated>2022-05-27T17:09:22.126Z</updated>
    
    <content type="html"><![CDATA[<p>Assume you have a large JSON string full of reference data you want to use in the browser (for instance displaying 60 000 ICD codes in a tree view). If it’s 8 MB in size and it’s not a static file you’ll want to compress it manually before sending it to the client. </p><p>It’s tricky to find a zip library that is both in your server language (C#, Python, PHP, etc) and in Javascript.  You also want a library that keeps compressed data as a string, not as some funny array of bytes - because you’ll want to store your string in your browser’s local storage. </p><p>The best one I found is <a href="http://pieroxy.net/blog/pages/lz-string/index.html" title="lz-string">lz-string</a>. There’s a C# version <a href="https://github.com/jawa-the-hutt/lz-string-csharp" title="https://github.com/jawa-the-hutt/lz-string-csharp">here</a>, though I had to change the string field ‘str’ to StringBuilder before it ran fast enough (I think the author has added my change to the code now so it should be fine).  lz-string compressed my file to 7% of its original size (300 kb) Here’s how to use the code:</p><h2 id="C"><a href="#C" class="headerlink" title="C#"></a>C#</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> compressedString = LZString.compressToUTF16(jsonString);</span><br></pre></td></tr></table></figure><h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//store your compressed string in local storage (here using the AngularJS library ngStorage)</span></span><br><span class="line"><span class="variable language_">localStorage</span>[<span class="string">&#x27;data&#x27;</span>] = compressedJsonFromServer; </span><br><span class="line"></span><br><span class="line"><span class="comment">//get it from local storage</span></span><br><span class="line"><span class="keyword">var</span> bigJsonString = <span class="title class_">LZString</span>.<span class="title function_">decompressFromUTF16</span>(<span class="variable language_">localStorage</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"><span class="keyword">var</span> json = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(bigJsonString);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Assume you have a large JSON string full of reference data you want to use in the browser (for instance displaying 60 000 ICD codes in a tree view)</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="compression" scheme="https://richardcooke.info/tags/compression/"/>
    
    <category term="json" scheme="https://richardcooke.info/tags/json/"/>
    
    <category term="lzstring" scheme="https://richardcooke.info/tags/lzstring/"/>
    
    <category term="zip" scheme="https://richardcooke.info/tags/zip/"/>
    
  </entry>
  
  <entry>
    <title>&#39;Your&#39; versus &#39;my&#39; on website interfaces</title>
    <link href="https://richardcooke.info/en/2015/your-versus-my-on-website-interfaces/"/>
    <id>https://richardcooke.info/en/2015/your-versus-my-on-website-interfaces/</id>
    <published>2015-02-20T09:04:52.000Z</published>
    <updated>2022-05-27T17:09:22.125Z</updated>
    
    <content type="html"><![CDATA[<p>If you have to convince your clients or team to use ‘your’ instead of ‘my’ in your application’s user interface (e.g. ‘Your profile’) here are the reasons:</p><ul><li><a href="https://developer.yahoo.com/ypatterns/social/core/yourvmy.html">https://developer.yahoo.com/ypatterns/social/core/yourvmy.html</a> </li><li><a href="http://ux.stackexchange.com/questions/24612/my-account-or-your-account">http://ux.stackexchange.com/questions/24612/my-account-or-your-account</a> </li><li><a href="http://ustwo.com/blog/mine-or-yours-a-ux-geeks-thoughts/">http://ustwo.com/blog/mine-or-yours-a-ux-geeks-thoughts/</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If you have to convince your clients or team to use ‘your’ instead of ‘my’ in your application’s user interface (e.g. ‘Your profile’) here are the reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer</summary>
        
      
    
    
    
    <category term="design" scheme="https://richardcooke.info/categories/design/"/>
    
    <category term="software" scheme="https://richardcooke.info/categories/design/software/"/>
    
    
    <category term="design" scheme="https://richardcooke.info/tags/design/"/>
    
    <category term="english" scheme="https://richardcooke.info/tags/english/"/>
    
    <category term="ui" scheme="https://richardcooke.info/tags/ui/"/>
    
  </entry>
  
  <entry>
    <title>Trigger a button click when pressing enter in a textbox in AngularJS</title>
    <link href="https://richardcooke.info/en/2015/trigger-a-button-click-when-pressing-enter-in-a-textbox-in-angularjs/"/>
    <id>https://richardcooke.info/en/2015/trigger-a-button-click-when-pressing-enter-in-a-textbox-in-angularjs/</id>
    <published>2015-02-14T19:43:43.000Z</published>
    <updated>2022-05-27T17:09:22.125Z</updated>
    
    <content type="html"><![CDATA[<p>This post explains how to trigger a button click when pressing enter in a textbox in AngularJS. </p><p>Here’s the HTML view containing an input textbox and a button.  Note that we use the ng-keypress to call a function in the associated controller, <code>$scope.data.onFolderNumberKeyPress()</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-ng-keypress</span>=<span class="string">&quot;data.onFolderNumberKeyPress($event)&quot;</span>   </span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">&quot;txtFolderNumber&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;form-control smallMarginRight width20Percent&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-ng-model</span>=<span class="string">&quot;data.patientNumber&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">autofocus</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">placeholder</span>=<span class="string">&quot;&#123; &#123;messages.EnterFolderNumber&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-ng-cloak</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">&quot;btnSearch&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-ng-cloak</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-ng-click</span>=<span class="string">&quot;data.search()&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">data-ng-disabled</span>=<span class="string">&quot;data.isBusy&quot;</span>&gt;</span></span><br><span class="line">    &#123; &#123;data.searchButtonMessage&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In the controller we check if enter was pressed (as opposed to all the other letters the user types as input) and if so, then we call the function the button normally calls when clicked.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$scope.<span class="property">data</span>.<span class="property">onFolderNumberKeyPress</span> = <span class="keyword">function</span>(<span class="params">event</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (event.<span class="property">charCode</span> == <span class="number">13</span>) <span class="comment">//if enter then hit the search button</span></span><br><span class="line">        $scope.<span class="property">data</span>.<span class="title function_">search</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This post explains how to trigger a button click when pressing enter in a textbox in AngularJS. &lt;/p&gt;
&lt;p&gt;Here’s the HTML view containing an input textbox and a button</summary>
        
      
    
    
    
    <category term="angularjs" scheme="https://richardcooke.info/categories/angularjs/"/>
    
    <category term="javascript" scheme="https://richardcooke.info/categories/angularjs/javascript/"/>
    
    <category term="programming" scheme="https://richardcooke.info/categories/angularjs/javascript/programming/"/>
    
    
    <category term="angular.js" scheme="https://richardcooke.info/tags/angular-js/"/>
    
  </entry>
  
  <entry>
    <title>How to connect Visual Studio 2013 to Intersystems Caché through ODBC</title>
    <link href="https://richardcooke.info/en/2014/how-to-connect-visual-studio-2013-to-intersystems-cache-through-odbc/"/>
    <id>https://richardcooke.info/en/2014/how-to-connect-visual-studio-2013-to-intersystems-cache-through-odbc/</id>
    <published>2014-12-05T07:40:42.000Z</published>
    <updated>2022-05-27T17:09:22.121Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Update: Don’t use the ODBC driver. We later found it to be buggy. Use the native Cache.Data.dll driver for ADO.NET instead.</p></blockquote><ol><li>Install the 32 bit driver: cache.2014.1.0.ODBCDriver_x86.exe</li><li>Start menu - administrative tools - ODBC data sources 32 bit - system DSN - AddChoose Intersystems ODBC or 35 (the 35 is just a 3.5 ODBC version and will use 2.5 protocol where necessary, so it makes no difference): <img src="/odbccache.png" alt="odbccache"></li><li>Enter your database details and save after testing the connection: <img src="/odbccache2.png" alt="odbccache2"></li><li>In Visual Studio open your web.config file and add:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">connectionStrings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;MyConnection&quot;</span> <span class="attr">connectionString</span>=<span class="string">&quot;Dsn=Cach&quot;</span> <span class="attr">providerName</span>=<span class="string">&quot;System.Data.Odbc&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">connectionStrings</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Browse to the database Server Explorer and secondary click to run a new query:<img src="/vsodbc.png" alt="vsodbc"></li></ol><h2 id="SSMS-fails"><a href="#SSMS-fails" class="headerlink" title="SSMS fails"></a>SSMS fails</h2><p>Unfortunately connecting to SQL Server Management Studio is not as easy.  Neither the 32 bit nor 64 bit connections work and allow me to run queries.  I’ve posted a Stackoverflow.com question about the problem <a href="http://stackoverflow.com/questions/27309207/how-to-connect-ssms-2012-to-intersystems-cach%C3%A9-via-odbc">here.</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Update: Don’t use the ODBC driver. We later found it to be buggy. Use the native Cache.Data.dll driver for ADO.NET instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Install the 32 bit driver: cache</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="intersystems caché" scheme="https://richardcooke.info/tags/intersystems-cache/"/>
    
    <category term="odbc" scheme="https://richardcooke.info/tags/odbc/"/>
    
    <category term="visual studio" scheme="https://richardcooke.info/tags/visual-studio/"/>
    
  </entry>
  
  <entry>
    <title>How to make an animated .GIF screenshot</title>
    <link href="https://richardcooke.info/en/2014/how-to-make-an-animated-gif-screenshot/"/>
    <id>https://richardcooke.info/en/2014/how-to-make-an-animated-gif-screenshot/</id>
    <published>2014-11-19T15:56:04.000Z</published>
    <updated>2022-05-27T17:09:22.115Z</updated>
    
    <content type="html"><![CDATA[<p>Taking an animated .gif screen capture is easy.</p><ol><li>Download <a href="http://www.cockos.com/licecap/">http://www.cockos.com/licecap/</a> and install it.</li><li>Push record and save the .gif file:</li></ol><p><img src="/WeaverlutionNews.gif" alt="WeaverlutionNews"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Taking an animated .gif screen capture is easy.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&quot;http://www.cockos.com/licecap/&quot;&gt;http://www.cockos.com/licecap/&lt;/a&gt; and install it.&lt;/li&gt;
&lt;li&gt;Push record and save the </summary>
        
      
    
    
    
    <category term="marketing" scheme="https://richardcooke.info/categories/marketing/"/>
    
    <category term="programming" scheme="https://richardcooke.info/categories/marketing/programming/"/>
    
    <category term="software" scheme="https://richardcooke.info/categories/marketing/programming/software/"/>
    
    <category term="tools" scheme="https://richardcooke.info/categories/marketing/programming/software/tools/"/>
    
    
    <category term="animated" scheme="https://richardcooke.info/tags/animated/"/>
    
    <category term="gif" scheme="https://richardcooke.info/tags/gif/"/>
    
    <category term="licecap" scheme="https://richardcooke.info/tags/licecap/"/>
    
    <category term="screen capture" scheme="https://richardcooke.info/tags/screen-capture/"/>
    
  </entry>
  
  <entry>
    <title>Keep users signed in after ASP.NET deploy</title>
    <link href="https://richardcooke.info/en/2014/keep-users-signed-in-after-asp-net-deploy/"/>
    <id>https://richardcooke.info/en/2014/keep-users-signed-in-after-asp-net-deploy/</id>
    <published>2014-11-18T14:11:10.000Z</published>
    <updated>2022-05-27T17:09:22.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>After redeploying our Azure ASP.NET MVC site we found that users were receiving an error when trying to sign in for the first time: <em>The anti-forgery cookie token and form field token do not match</em>.</p><h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>This happens because Azure creates an entirely new virtual machine at every deployment.  The new IIS instance the new VM contains will have a new machineKey - the key that is used to validate authentication tokens. </p><p>So the sign in form has an <code>&lt;input __RequestVerificationToken&gt;</code> field with a new value that differs from the old <code>RequestVerificationToken</code> cookie value that is in the users’ browsers from their last sign in.</p><h2 id="A-solution-if-you-don’t-use-Azure"><a href="#A-solution-if-you-don’t-use-Azure" class="headerlink" title="A solution if you don’t use Azure"></a>A solution if you don’t use Azure</h2><p>If you are using a normal IIS server that you have control over, then set your own custom <code>machineKey</code> for your application in the web.config file so that authentication tokens never expire.  This key is used instead of the machine’s <code>machineKey</code> value.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">machineKey</span></span></span><br><span class="line"><span class="tag"><span class="attr">validationKey</span>=<span class="string">&quot;8BD520C9D14734C556DA74704FCABD3F8D59D7F851D563514208A86511884E&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">decryptionKey</span>=<span class="string">&quot;CFB832E5A77F28A9A5B58DBE71AFC4D9C99D700F2488B&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">validation</span>=<span class="string">&quot;SHA1&quot;</span> <span class="attr">decryption</span>=<span class="string">&quot;AES&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><p>Generate your own custom key using a tool like this: <a href="http://www.developerfusion.com/tools/generatemachinekey/" title="http://www.developerfusion.com/tools/generatemachinekey/">http://www.developerfusion.com/tools/generatemachinekey/</a></p><h3 id="Doesn’t-work-on-Azure"><a href="#Doesn’t-work-on-Azure" class="headerlink" title="Doesn’t work on Azure"></a>Doesn’t work on Azure</h3><p>Unfortunately Azure overrides your application machineKey with its own, so this solution works only for non-Azure ASP.NET sites: “<em>All Windows Azure instances running behind the load balancer on the different VM&#96;s. And each of them must operate the same machineKey (it is used for VewState and Session State encryption). Thats why Azure emulator trying to change the Web.config when you run your app.</em>“ - <a href="https://social.msdn.microsoft.com/Forums/azure/en-US/2779cf87-7389-4293-a790-0f21cfd03dc3/machinekey-gets-automatically-inserted-into-webconfig-when-debugging-in-azure-emulator?forum=windowsazuredevelopment">forum</a></p><h2 id="A-solution-for-any-ASP-NET-site"><a href="#A-solution-for-any-ASP-NET-site" class="headerlink" title="A solution for any ASP.NET site"></a>A solution for any ASP.NET site</h2><p>A solution that works on Azure has to update the users’ <code>__RequestionVerificationToken</code> cookies when loading the sign in page. Use this code in your AccountController GET method for the sign in and sign up page:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetANewRequestVerificationTokenManuallyInCookieAndOnTheForm</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Response == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">string</span> cookieToken, formToken;</span><br><span class="line">    AntiForgery.GetTokens(<span class="literal">null</span>, <span class="keyword">out</span> cookieToken, <span class="keyword">out</span> formToken);</span><br><span class="line">    SetCookie(<span class="string">&quot;__RequestVerificationToken&quot;</span>, cookieToken);</span><br><span class="line">    ViewBag.FormToken = formToken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetCookie</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> (Response.Cookies.AllKeys.Contains(name))</span><br><span class="line">       Response.Cookies[name].Value = <span class="keyword">value</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       Response.Cookies.Add(<span class="keyword">new</span> HttpCookie(name, <span class="keyword">value</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then in your view add the form token you generated in the controller so the token pair matches:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@if (ViewBag.FormToken != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    &lt;text&gt;&lt;input name=<span class="string">&quot;__RequestVerificationToken&quot;</span> type=<span class="string">&quot;hidden&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;@ViewBag.FormToken&quot;</span> /&gt;&lt;/text&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    &lt;text&gt;@Html.AntiForgeryToken()&lt;/text&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Anti-forgery-tokens-are-essential-on-sign-in-and-sign-up-pages"><a href="#Anti-forgery-tokens-are-essential-on-sign-in-and-sign-up-pages" class="headerlink" title="Anti-forgery tokens are essential on sign in and sign up pages"></a>Anti-forgery tokens are essential on sign in and sign up pages</h2><p>Perhaps you thought you could just remove the <code>[ValidateAntiForgeryToken]</code> attribute from your sign in action to save yourself this trouble? This would be a dangerous mistake. See an example attack here: <a href="http://security.stackexchange.com/questions/2120/when-the-use-of-a-antiforgerytoken-is-not-required-needed">http://security.stackexchange.com/questions/2120/when-the-use-of-a-antiforgerytoken-is-not-required-needed</a>. </p><p>In short, a hacker could sign someone else’s browser into your website, e.g. Paypal, as the hacker and then get them to perform an action, e.g. adding a credit card to their account.  This action would then be performed on the hacker’s account instead and they would get the benefit of the action.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;After redeploying our Azure ASP</summary>
        
      
    
    
    
    <category term="asp.net" scheme="https://richardcooke.info/categories/asp-net/"/>
    
    <category term="azure" scheme="https://richardcooke.info/categories/asp-net/azure/"/>
    
    <category term="c#" scheme="https://richardcooke.info/categories/asp-net/azure/c/"/>
    
    <category term="programming" scheme="https://richardcooke.info/categories/asp-net/azure/c/programming/"/>
    
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
    <category term="asp.net" scheme="https://richardcooke.info/tags/asp-net/"/>
    
  </entry>
  
  <entry>
    <title>Why is my error not being caught by Application_Error() on Azure?</title>
    <link href="https://richardcooke.info/en/2014/why-is-my-error-not-being-caught-by-application-error-on-azure/"/>
    <id>https://richardcooke.info/en/2014/why-is-my-error-not-being-caught-by-application-error-on-azure/</id>
    <published>2014-11-14T15:51:16.000Z</published>
    <updated>2022-05-27T17:09:22.120Z</updated>
    
    <content type="html"><![CDATA[<p>Are you having errors that are triggering <code>Global.asax.cs.Application_Error()</code> locally correctly but don’t work when you deploy to Azure or another remote IIS host?</p><p>Check if the value of CustomErrors in your web.config is ‘On’ or ‘RemoteOnly’ (or missing - which defaults to ‘RemoteOnly’). ‘RemoteOnly’ means that the full error message is hidden from the user on remote sites, like Azure, but will be shown when running on your local machine.So when an error occurs on Azure MVC doesn’t go to <code>Global.asax.cs</code> to call the <code>Application_Error</code> method, it instead redirects to the first Error view page it can find and discards the error.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>The solution is just to add a custom filter to log the error in addition to showing the page.</p><p>Make this class:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> log4net;</span><br><span class="line"><span class="keyword">using</span> StructureMap;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"><span class="keyword">using</span> System.Web.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ErrorHandlingFilter</span> : <span class="title">IExceptionFilter</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnException</span>(<span class="params">ExceptionContext context</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> exception = context.Exception;</span><br><span class="line">            <span class="keyword">if</span> (!(exception <span class="keyword">is</span> HttpException)) <span class="comment">//ignore &quot;file not found&quot;</span></span><br><span class="line">                ObjectFactory.GetInstance&lt;ILog&gt;().Error(<span class="string">&quot;An unhandled exception was caught in ErrorHandlingFilter.OnException()&quot;</span>, exception);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            context.Result = <span class="keyword">new</span> RedirectToRouteResult(<span class="keyword">new</span> RouteValueDictionary(<span class="keyword">new</span> &#123; controller = <span class="string">&quot;Shared&quot;</span>, action = <span class="string">&quot;Error&quot;</span> &#125;));</span><br><span class="line">            context.Result.ExecuteResult(context.Controller.ControllerContext);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then add it to your startup FilterConfig.cs:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FilterConfig</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RegisterGlobalFilters</span>(<span class="params">GlobalFilterCollection filters</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        filters.Add(<span class="keyword">new</span> ErrorHandlingFilter()); <span class="comment">//must be before HandleErrorAttribute</span></span><br><span class="line">        filters.Add(<span class="keyword">new</span> HandleErrorAttribute());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For more info see: <a href="http://stackoverflow.com/questions/6508415/application-error-not-firing-when-customerrors-on#answer-7551256">http://stackoverflow.com/questions/6508415/application-error-not-firing-when-customerrors-on#answer-7551256</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Are you having errors that are triggering &lt;code&gt;Global.asax.cs</summary>
        
      
    
    
    
    <category term="asp.net" scheme="https://richardcooke.info/categories/asp-net/"/>
    
    <category term="azure" scheme="https://richardcooke.info/categories/asp-net/azure/"/>
    
    <category term="c#" scheme="https://richardcooke.info/categories/asp-net/azure/c/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/asp-net/azure/c/coding/"/>
    
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
    <category term="asp.net" scheme="https://richardcooke.info/tags/asp-net/"/>
    
  </entry>
  
  <entry>
    <title>Two quick tips to reduce Azure cloud service costs</title>
    <link href="https://richardcooke.info/en/2014/two-quick-tips-to-reduce-azure-cloud-service-costs/"/>
    <id>https://richardcooke.info/en/2014/two-quick-tips-to-reduce-azure-cloud-service-costs/</id>
    <published>2014-11-12T22:05:04.000Z</published>
    <updated>2022-05-27T17:09:22.119Z</updated>
    
    <content type="html"><![CDATA[<p>Here are two quick tips to reduce your Azure fees:</p><ol><li>The default of a cloud service size is ‘small’.  You can change it to extra small in your cloud service - properties - settings. This will reduce your costs from $90 to $30 a month at the time of writing.  The difference between ‘extra small’ and ‘small’ is that the virtual machine memory is 780 MB instead of 1780 MB.</li><li>All instances are billed all the time even if they’re off.  And staging and live instances of the same cloud service are billed separately.  So delete staging deployments when you’re done with them immediately.</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Here are two quick tips to reduce your Azure fees:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The default of a cloud service size is ‘small’.  You can change it to extra small in your cloud service - properties - settings</summary>
        
      
    
    
    
    <category term="azure" scheme="https://richardcooke.info/categories/azure/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/azure/coding/"/>
    
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
  </entry>
  
  <entry>
    <title>How to migrate Azure environments (copy databases &amp; storage accounts)</title>
    <link href="https://richardcooke.info/en/2014/how-to-migrate-azure-environments/"/>
    <id>https://richardcooke.info/en/2014/how-to-migrate-azure-environments/</id>
    <published>2014-10-27T09:58:55.000Z</published>
    <updated>2022-05-27T17:09:22.099Z</updated>
    
    <content type="html"><![CDATA[<p>This article demonstrates how to migrate (copy) one Azure database to another and any associated files.  For example, you may want to copy your production database to your test (preproduction) environment to have more recent test data.</p><h2 id="Export-backup-your-production-database"><a href="#Export-backup-your-production-database" class="headerlink" title="Export (backup) your production database"></a>Export (backup) your production database</h2><p><img src="/Migrate1.png" alt="Migrate1"><br>You need to save it in a storage account.  Here I use our dev storage account, creating a new container for database-backups. <img src="/Migrate2.png" alt="Migrate2"></p><h2 id="Delete-the-database-you-want-to-restore"><a href="#Delete-the-database-you-want-to-restore" class="headerlink" title="Delete the database you want to restore"></a>Delete the database you want to restore</h2><p>Since you cannot overwrite a database in Azure you unfortunately first have to delete the database you want to restore. <img src="/Migrate3.png" alt="Migrate3"></p><h2 id="Restore-the-backup-file-to-a-new-database"><a href="#Restore-the-backup-file-to-a-new-database" class="headerlink" title="Restore the backup file to a new database"></a>Restore the backup file to a new database</h2><p>Restore the backup file by creating a new database via import</p><p><img src="/Migrate4.png" alt="Migrate4"></p><h2 id="Finally-ensure-you-name-the-new-database-with-the-same-name-as-the-one-you-deleted"><a href="#Finally-ensure-you-name-the-new-database-with-the-same-name-as-the-one-you-deleted" class="headerlink" title="Finally, ensure you name the new database with the same name as the one you deleted."></a>Finally, ensure you name the new database with the same name as the one you deleted.</h2><p><img src="/Migrate5.png" alt="Migrate5"></p><h2 id="Copy-your-storage-account"><a href="#Copy-your-storage-account" class="headerlink" title="Copy your storage account"></a>Copy your storage account</h2><p>Don’t forget that you might also need to copy all the files from your prod storage account to your test storage account too.  For example, where users upload photos that the database points to. <a href="http://stackoverflow.com/questions/8582145/copying-storage-data-from-one-azure-account-to-another">Stackoverflow</a> suggests PowerShell &amp; AzCopy, but I found it easiest just to use <a href="https://cyberduck.io/">CyberDuck</a> and manually copy and paste.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This article demonstrates how to migrate (copy) one Azure database to another and any associated files</summary>
        
      
    
    
    
    <category term="azure" scheme="https://richardcooke.info/categories/azure/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/azure/coding/"/>
    
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
  </entry>
  
  <entry>
    <title>Settings in Azure</title>
    <link href="https://richardcooke.info/en/2014/settings-in-azure/"/>
    <id>https://richardcooke.info/en/2014/settings-in-azure/</id>
    <published>2014-10-19T11:13:27.000Z</published>
    <updated>2022-05-27T17:09:22.110Z</updated>
    
    <content type="html"><![CDATA[<p>Settings in Azure applications should not be kept in the app.config nor web.config file.  You also don’t need to change the settings files for different environments when building (dev, qa, prod).  Azure makes it much easier.  Here’s how it works.</p><h2 id="The-old-way"><a href="#The-old-way" class="headerlink" title="The old way"></a>The old way</h2><p>In the image below I’ve made a brand new Azure cloud service with one web application included.  I’ve added an app setting the old way that I’m used to.<br><img src="/AzureSettings1.png" alt="AzureSettings1"> </p><p>You can use the setting in your application like this:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> setting = ConfigurationManager.AppSettings[<span class="string">&quot;CdnUrl&quot;</span>];</span><br></pre></td></tr></table></figure><h2 id="The-problems-with-this-approach"><a href="#The-problems-with-this-approach" class="headerlink" title="The problems with this approach"></a>The problems with this approach</h2><p>There are a few difficulties with this approach</p><ul><li>You have to replace this configuration file on each environment you publish to with different values</li><li>The connection string (and other settings) are unencrypted. So any developer (or anyone with access to your source control) can see the production database password.</li></ul><h2 id="Azure’s-cloud-configuration-settings"><a href="#Azure’s-cloud-configuration-settings" class="headerlink" title="Azure’s cloud configuration settings"></a>Azure’s cloud configuration settings</h2><p>Azure provides a new way of reading configurations setting, called CloudConfigurationManager.  You use it like this:</p><p>var setting &#x3D; CloudConfigurationManager.GetSetting(“CdnUrl”);</p><p>It will work just fine with the app settings in the image above.  However it has two extra features:</p><ul><li>If a setting with the same name is found in the cloud service project’s role’s .cscfg file it will use that setting instead of the web.config one.</li><li>If a setting with the same name is found on Azure in the cloud (configured through the Azure website) it will use that setting instead of the .cscfg or the web.config one.</li></ul><h2 id="The-benefits-of-Azure’s-settings"><a href="#The-benefits-of-Azure’s-settings" class="headerlink" title="The benefits of Azure’s settings"></a>The benefits of Azure’s settings</h2><p>These two features mean that you can put all your localhost \ development environment settings in the .cscfg file while programming.  Then all you have to do is have someone with production permissions to log on to the Azure website and change the production settings that no one else may see.  This keeps everything private and secure.</p><h2 id="How-to-use-Azure-settings"><a href="#How-to-use-Azure-settings" class="headerlink" title="How to use Azure settings"></a>How to use Azure settings</h2><p>Open the website role’s properties page in Visual Studio and add a new setting with the same name as the one in the web.config file (or just delete the web.config settings section entirely).<br><img src="/AzureSettings2.png" alt="AzureSettings2"></p><p>Now in the Azure portal change the settings for each cloud service environment you deploy to.<br><img src="/AzureSettings3.png" alt="AzureSettings3"></p><h2 id="Connection-strings"><a href="#Connection-strings" class="headerlink" title="Connection strings"></a>Connection strings</h2><p>I used these settings to store my Entity Framework connection string.  Instead of constructing a new</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DbContext(<span class="string">&quot;connectionStringName&quot;</span>)</span><br></pre></td></tr></table></figure><p>you now pass in the connection string itself after reading it from settings, like so</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DbContext(CloudConfigurationManager.GetSetting(<span class="string">&quot;connectionStringName&quot;</span>))</span><br></pre></td></tr></table></figure><p>Entity Framework doesn’t actually need the ProviderName attribute for construction so it works without error. To set log4net’s connection string use this method:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLog4NetAdoNetAppenderConnectionString</span>(<span class="params"><span class="built_in">string</span> connectionString</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">var</span> hierarchy = (Hierarchy) LogManager.GetRepository();</span><br><span class="line">   <span class="keyword">if</span> (hierarchy == <span class="literal">null</span>)</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   <span class="keyword">var</span> appenders = hierarchy.GetAppenders().OfType&lt;AdoNetAppender&gt;();</span><br><span class="line">   <span class="keyword">foreach</span> (<span class="keyword">var</span> appender <span class="keyword">in</span> appenders)</span><br><span class="line">   &#123;</span><br><span class="line">       appender.ConnectionString = connectionString;</span><br><span class="line">       appender.ActivateOptions();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> </p><h2 id="Overwriting-settings"><a href="#Overwriting-settings" class="headerlink" title="Overwriting settings"></a>Overwriting settings</h2><p>The only problem with this system is that a deployment will overwrite the settings in the cloud with whatever is in the .cscfg file.  You’ll have to change them again in the portal by hand.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Settings in Azure applications should not be kept in the app.config nor web.config file.  You also don’t need to change the settings files for different environments when building (dev, qa, prod)</summary>
        
      
    
    
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
  </entry>
  
  <entry>
    <title>How to upload a file to an Azure storage account</title>
    <link href="https://richardcooke.info/en/2014/how-to-upload-a-file-to-an-azure-storage-account/"/>
    <id>https://richardcooke.info/en/2014/how-to-upload-a-file-to-an-azure-storage-account/</id>
    <published>2014-10-15T08:31:29.000Z</published>
    <updated>2022-05-27T17:09:22.105Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Create a storage account on the Azure website and create a container (like a folder).<img src="/azurestorage1.png" alt="azurestorage1"></li><li>In Azure, go to your storage account, the configure tab, and click ‘manage access keys’ at the bottom.<img src="/azurestorage2.png" alt="azurestorage2"></li><li>Download <a href="https://cyberduck.io/" title="Cyberduck">Cyberduck.</a> Install it. Run it</li><li>Open a new connection and enter the details from the Azure screen you have open.<img src="/azurestorage3.png" alt="azurestorage3"></li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;ol&gt;
&lt;li&gt;Create a storage account on the Azure website and create a container (like a folder).&lt;img src=&quot;/azurestorage1</summary>
        
      
    
    
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
    <category term="coding" scheme="https://richardcooke.info/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>Deploying Azure web apps (faster) &amp; remote debugging</title>
    <link href="https://richardcooke.info/en/2014/deploying-azure-web-apps-faster-remote-debugging/"/>
    <id>https://richardcooke.info/en/2014/deploying-azure-web-apps-faster-remote-debugging/</id>
    <published>2014-09-12T14:30:18.000Z</published>
    <updated>2022-05-27T17:09:22.093Z</updated>
    
    <content type="html"><![CDATA[<p>This article briefly describes publishing Azure web applications (web sites in a cloud service), a potential way of doing it faster, and how to debug your site remotely.</p><h2 id="Publishing-your-application"><a href="#Publishing-your-application" class="headerlink" title="Publishing your application"></a>Publishing your application</h2><p>Assume we have a solution with a cloud service that has a web application, as shown below: </p><img src="/en/2014/deploying-azure-web-apps-faster-remote-debugging/wv1.png" class=""><p>To publish, right click the service, not the site and choose Publish: </p><img src="/en/2014/deploying-azure-web-apps-faster-remote-debugging/wv2.png" class=""><p>In the publish form settings be sure to select all the debug and remote debugging options:</p><img src="/en/2014/deploying-azure-web-apps-faster-remote-debugging/wv3.png" class=""><p>Choosing Build configuration ‘Debug’ allows the debugger to see symbol information when attaching to the remote process.  When deploying your final production site change this to ‘Release’. ‘Enable Web Deploy’ allows you to deploy the <strong>website</strong> rather than the <strong>cloud service</strong> in future publishes.  I.e. the deployment won’t instantiate a whole new virtual machine like it normally does, it will just copy the the application files to the existing instance. </p><img src="/en/2014/deploying-azure-web-apps-faster-remote-debugging/wv4.png" class=""><h2 id="Publishing-with-Web-Deploy-to-deploy-to-Azure-faster"><a href="#Publishing-with-Web-Deploy-to-deploy-to-Azure-faster" class="headerlink" title="Publishing with Web Deploy to deploy to Azure faster"></a>Publishing with Web Deploy to deploy to Azure faster</h2><p>Allegedly Web Deploy deploys faster than a full publish because its just copies files, and doesn’t create a new instance.  However I found it to be no faster than a full publish (20 minutes on average).  But give it a try, maybe it will work better for you. To web deploy, publish the website, not the cloud service:</p><img src="/en/2014/deploying-azure-web-apps-faster-remote-debugging/wv5.png" class=""><h2 id="Remote-debugging"><a href="#Remote-debugging" class="headerlink" title="Remote debugging"></a>Remote debugging</h2><p>To remote debug follow these steps:</p><ol><li>Publish your application, as explained above.</li><li>Browse to it in a web browser (if you don’t do this it won’t start the IIS process for you to attach to).</li><li>Open Server Explorer in Visual Studio, browse to Azure, and attach to your process (it will be called w3wp.exe, the same as a local IIS instance).</li><li>Debugging works as normal from here on, except slower.</li></ol><img src="/en/2014/deploying-azure-web-apps-faster-remote-debugging/wv6.png" class="">]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This article briefly describes publishing Azure web applications (web sites in a cloud service), a potential way of doing it faster, and how to debug your site remotely</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="azure" scheme="https://richardcooke.info/tags/azure/"/>
    
  </entry>
  
  <entry>
    <title>Export SVN to Git</title>
    <link href="https://richardcooke.info/en/2014/export-svn-to-git/"/>
    <id>https://richardcooke.info/en/2014/export-svn-to-git/</id>
    <published>2014-07-18T21:51:47.000Z</published>
    <updated>2022-05-27T17:09:22.092Z</updated>
    
    <content type="html"><![CDATA[<p>This article explains the fastest and easiest way to export an SVN repository to Git.  There are lots of explanations of this online but none handle complex SVN folder structures well.</p><h2 id="Simple-versus-complex-SVN-folders"><a href="#Simple-versus-complex-SVN-folders" class="headerlink" title="Simple versus complex SVN folders"></a>Simple versus complex SVN folders</h2><p>If your SVN repository has only trunk, branch, and tags you can use the standard export command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git svn <span class="built_in">clone</span> -r0:HEAD --follow-parent --prefix=origin/ --stdlayout http://svn.com/svn/project</span><br></pre></td></tr></table></figure><p>But if your repository starts in a subfolder or has branches in subfolders this process will break. For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://svn.com/svn/ourcompany/project/trunk</span><br><span class="line">http://svn.com/svn/ourcompany/project/branches/features/newlogo</span><br><span class="line">http://svn.com/svn/ourcompany/project/branches/bugfixes/updatelogin</span><br></pre></td></tr></table></figure><h2 id="The-complete-process"><a href="#The-complete-process" class="headerlink" title="The complete process"></a>The complete process</h2><ul><li><p>Make a temporary folder somewhere and open a command prompt in it. Run:</p><p><code>git svn init --prefix=svnorigin/ --no-minimize-url --trunk=trunk http://svn.com/svn/ourcompany/project</code></p></li><li><p>Alter the config file in the .git folder to add every branch you want to take to Git. The SVN folder is on the left and the new Git branch name is on the right:</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[svn-remote <span class="string">&quot;svn&quot;</span>]</span><br><span class="line">    url = http://svn.com/svn/ourcompany</span><br><span class="line">    fetch = project/trunk:refs/remotes/svnorigin/prod</span><br><span class="line">    fetch = project/features/newlogo:refs/remotes/svnorigin/feature_newlogo</span><br><span class="line">    fetch = project/bugfixes/updatelogin:refs/remotes/svnorigin/bugfix_updatelogin</span><br></pre></td></tr></table></figure><ul><li>Run this for a few hours (Note: run all git commands in the folder above .git, not in .git). You can run this command multiple times to keep getting updates from SVN if people are still working on it:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git svn fetch &gt; clonewars.txt</span><br></pre></td></tr></table></figure><ul><li>Copy the folder and work in the new one so you have a backup.</li><li>Create a local branch for each remote you want (ignore the @number branches). To do this right-click on the folder - TortoiseSVN - Switch&#x2F;Checkout</li><li>Delete the entire svn-remote section above from the config file.</li><li>Open a command prompt in the folder and run this to copy your project to Github (or BitBucket or wherever):</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add github https://github.com/MyCompany/project.git</span><br><span class="line">git push github --all</span><br></pre></td></tr></table></figure><ul><li>Make prod the default branch in the Github project settings page and delete the master branch</li></ul><h2 id="How-to-empty-a-Github-repository-entirely-without-deleting-it"><a href="#How-to-empty-a-Github-repository-entirely-without-deleting-it" class="headerlink" title="How to empty a Github repository entirely without deleting it"></a>How to empty a Github repository entirely without deleting it</h2><p>If you make a mistake and need to clear github entirely do this in a new folder:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">(Add an empty file and commit it)</span><br><span class="line">git remote add github https://github.com/MyCompany/project.git</span><br><span class="line">git push github --mirror</span><br></pre></td></tr></table></figure><h2 id="Add-issue-numbers-in-commits-like-TortoiseSVN"><a href="#Add-issue-numbers-in-commits-like-TortoiseSVN" class="headerlink" title="Add issue numbers in commits like TortoiseSVN"></a>Add issue numbers in commits like TortoiseSVN</h2><p>Finally, if you want to add numbers to commits in TortoiseGit put the following section in your new repository’s &#x2F;.git&#x2F;config file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[bugtraq]</span><br><span class="line">    url = http://jira.mycompany.com:8080/browse/%BUGID%</span><br><span class="line">    number = <span class="literal">false</span></span><br><span class="line">    warnifnoissue = <span class="literal">true</span></span><br><span class="line">    message = http://jira.mycompany.com:8080/browse/%BUGID%</span><br><span class="line">    label = Issue number</span><br><span class="line">    append = <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This article explains the fastest and easiest way to export an SVN repository to Git.  There are lots of explanations of this online but none handle complex SVN folder structures well</summary>
        
      
    
    
    
    <category term="coding" scheme="https://richardcooke.info/categories/coding/"/>
    
    
    <category term="git" scheme="https://richardcooke.info/tags/git/"/>
    
    <category term="svn" scheme="https://richardcooke.info/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>Joomla user list component</title>
    <link href="https://richardcooke.info/en/2014/joomla-user-list-component/"/>
    <id>https://richardcooke.info/en/2014/joomla-user-list-component/</id>
    <published>2014-06-21T21:14:02.000Z</published>
    <updated>2022-05-27T17:09:22.050Z</updated>
    
    <content type="html"><![CDATA[<p>A friend made a poison control website in Joomla. He asked me if there was a way to collect user profile information and display it in a list. The best free plugin I could find for this is Malkesh’s <a href="http://malkesh.com/joomla-extensions/item/36-user-profile-custom-fields-joomla-2-5">MProfile</a>.  </p><p>It has an admin page that allows you to add any fields you want to the user sign up page.  Like this:<br><img src="/MProfile.png" alt="MProfile"></p><p>The problem is that Joomla can’t display the users’ custom fields.  So I built a plugin to do it, using Biswarup’s excellent <a href="https://www.youtube.com/watch?v=KWRsCvRZiH4">tutorials on YouTube</a>. </p><p>Here’s what it looks like, completely unstyled:<br><img src="/MProfileUserList.png" alt="MProfileUserList"></p><p>And here is the menu entry and empty settings page:<br><img src="/MProfileUserList-admin.png" alt="MProfileUserList admin"></p><p>It was my first time using PHP and Joomla and it took about 12 hours in total. </p><p>To download the component to use for Joomla or view the open source code, visit <a href="https://bitbucket.org/RichardCooke/mprofileuserlist">https://bitbucket.org/RichardCooke/mprofileuserlist</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;A friend made a poison control website in Joomla. He asked me if there was a way to collect user profile information and display it in a list</summary>
        
      
    
    
    
    <category term="joomla" scheme="https://richardcooke.info/categories/joomla/"/>
    
    <category term="php" scheme="https://richardcooke.info/categories/joomla/php/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/joomla/php/coding/"/>
    
    
    <category term="joomla" scheme="https://richardcooke.info/tags/joomla/"/>
    
  </entry>
  
  <entry>
    <title>WellSaid: &#39;30 Seconds&#39; board game clone</title>
    <link href="https://richardcooke.info/en/2014/wellsaid-30-seconds-board-game-clone/"/>
    <id>https://richardcooke.info/en/2014/wellsaid-30-seconds-board-game-clone/</id>
    <published>2014-05-24T13:03:19.000Z</published>
    <updated>2022-05-27T17:09:22.044Z</updated>
    
    <content type="html"><![CDATA[<p>I created a web clone of the popular board game 30 Seconds. It’s available to play here:  <a href="https://wellsaid.richardcooke.info/">https://wellsaid.richardcooke.info</a>.</p><p>Below are some screenshots.</p><p>The start screen, with settings accessible at the top right:<br><img src="/1.png" alt="Wellsaid1"></p><p>The main game screen, where the reader has to give clues for the rest of his team before the timer at the bottom expires:<br><img src="/2.png" alt="WellSaid2"></p><p>The score screen, where the team enters which words they guessed:<br><img src="/3.png" alt="WellSaid3"></p><p>The settings screen, where you can choose your language:<br><img src="/4.png" alt="WellSaid4"></p><h2 id="Single-page-application"><a href="#Single-page-application" class="headerlink" title="Single page application"></a>Single page application</h2><p>The application switches between four different views:</p><ul><li>start</li><li>question</li><li>answer</li><li>end\score</li></ul><p>Normally, single page apps load each view using an AJAX web call. This is how JQuery mobile loads a page when you click on a link, and how Ember.js, Angular,js, and Backbone.js are designed to work. </p><p>No server calls are made once the site has loaded initially; everything is done in Javascript. I wanted to make an app that didn’t need an Internet connection and could run offline on phones. </p><p>So instead of links WellSaid uses buttons that when clicked load the next view into the main panel using this method:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">me.<span class="property">loadContent</span> = <span class="keyword">function</span>(<span class="params">view</span>)</span><br><span class="line">&#123;</span><br><span class="line">view.<span class="title function_">preRender</span>();</span><br><span class="line">$(<span class="string">&#x27;.divContent&#x27;</span>).<span class="title function_">hide</span>();</span><br><span class="line">$(<span class="string">&#x27;.divContent&#x27;</span>)[<span class="number">0</span>].<span class="property">innerHTML</span> = view.<span class="title function_">content</span>();</span><br><span class="line">$(<span class="string">&#x27;.divContent&#x27;</span>).<span class="title function_">trigger</span>(<span class="string">&#x27;create&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;.divContent&#x27;</span>).<span class="title function_">show</span>();</span><br><span class="line">view.<span class="title function_">postRender</span>();</span><br><span class="line">$(<span class="string">&#x27;.divContent&#x27;</span>).<span class="title function_">trigger</span>(<span class="string">&#x27;create&#x27;</span>);</span><br><span class="line">ko.<span class="title function_">applyBindings</span>(<span class="title class_">WellSaid</span>.<span class="property">Model</span>, $(<span class="string">&#x27;#subContent&#x27;</span>)[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Trigger()</code> is used to refresh the JQuery Mobile UI components. Otherwise they would remain plain HTML once the new view loads.</p><h2 id="Javascript-libraries-used"><a href="#Javascript-libraries-used" class="headerlink" title="Javascript libraries used"></a>Javascript libraries used</h2><p>The site uses only a couple of libraries</p><ul><li>JQuery mobile for the user interface</li><li>Knockout automatically updates the scores, colors, and team names on each screen based on the variables in memory</li></ul><p>Each dictionary of questions, as well as each view, is stored in a separate Javascript file. Each of the project Javascript files can access the others through their shared namespace.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;lib/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;lib/jquery.mobile.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;lib/json2.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;lib/knockout.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/data/wellsaid.english.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/data/wellsaid.afrikaans.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/models/wellsaid.model.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/views/wellsaid.answer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/views/wellsaid.ask.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/views/wellsaid.end.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/views/wellsaid.start.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/wellsaid.main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Binding-variables-with-Knockout-js"><a href="#Binding-variables-with-Knockout-js" class="headerlink" title="Binding variables with Knockout.js"></a>Binding variables with Knockout.js</h2><p>Each game variable is a knockout object, like so:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">WellSaid</span> == <span class="string">&quot;undefined&quot;</span> || !<span class="title class_">WellSaid</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">WellSaid</span> = &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">WellSaid</span>.<span class="property">Model</span> = (<span class="keyword">function</span> (<span class="params"></span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> me = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    me.<span class="property">soundOn</span> = <span class="literal">true</span>;</span><br><span class="line">    me.<span class="property">round</span> = ko.<span class="title function_">observable</span>(<span class="number">1</span>);</span><br><span class="line">    me.<span class="property">isTurnOfTeam1</span> = ko.<span class="title function_">observable</span>(<span class="literal">true</span>);</span><br><span class="line">    me.<span class="property">team1Score</span> = ko.<span class="title function_">observable</span>(<span class="number">0</span>);</span><br><span class="line">    me.<span class="property">team2Score</span> = ko.<span class="title function_">observable</span>(<span class="number">0</span>);</span><br><span class="line">    me.<span class="property">numberOfQuestions</span> = ko.<span class="title function_">observable</span>(<span class="number">8</span>);</span><br><span class="line">    me.<span class="property">numberOfRounds</span> = ko.<span class="title function_">observable</span>(<span class="number">10</span>);</span><br><span class="line">    me.<span class="property">roundLengthInMilliseconds</span> = ko.<span class="title function_">observable</span>(<span class="number">30000</span>);</span><br><span class="line">    me.<span class="property">allQuestions</span> = <span class="title class_">WellSaid</span>.<span class="property">DataEnglish</span>;</span><br><span class="line">    me.<span class="property">lastRoundQuestions</span> = [];</span><br><span class="line">    me.<span class="property">usedQuestionIndexes</span> = [];</span><br><span class="line">    me.<span class="property">timeElapsedInMilliseconds</span> = <span class="number">0</span>;</span><br><span class="line">    me.<span class="property">timerIntervalInMilliseconds</span> = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    me.<span class="property">turnOfTeam</span> = ko.<span class="title function_">computed</span>(</span><br><span class="line">        <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> me.<span class="title function_">isTurnOfTeam1</span>() == <span class="number">1</span> ? <span class="number">1</span> : <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        , <span class="variable language_">this</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> me;</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure><p>The HTML is setup to use the variables like this:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Round</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;round&quot;</span> <span class="attr">data-bind</span>=<span class="string">&quot;text: round&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">of</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">data-bind</span>=<span class="string">&quot;text: numberOfRounds&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>And finally the variables are initialised like this:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ko.<span class="title function_">applyBindings</span>(<span class="title class_">WellSaid</span>.<span class="property">Model</span>, $(<span class="string">&#x27;#subContent&#x27;</span>)[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h2 id="Offline-mobile-web-apps"><a href="#Offline-mobile-web-apps" class="headerlink" title="Offline mobile web apps"></a>Offline mobile web apps</h2><p>The aim of this game was to be usable as an offline web site on phones, so people could use it as a board game at dinner parties.</p><p>To avoid the cost of constantly using an Internet connection I tried to make it work offline. Sadly at the time of writing this is impossible. Phones automatically try to reload pages, even if you configure the .htaccess and offline.manifest files as described in many HTML5 tutorials.</p><p>And sites cannot be automatically be added as icons on the phone desktop - it takes a lot of user effort to do that.</p><p>So, as such, I consider this site a failure as a board game. For it to work properly it would have to be written as a mobile app.  I might try to convert it to Phonegap or Android at a later stage.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I created a web clone of the popular board game 30 Seconds. It’s available to play here:  &lt;a href=&quot;https://wellsaid.richardcooke.info/&quot;&gt;https://wellsaid.richardcooke.info&lt;/a&gt;</summary>
        
      
    
    
    
    <category term="javascript" scheme="https://richardcooke.info/categories/javascript/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/javascript/coding/"/>
    
    
    <category term="jquery" scheme="https://richardcooke.info/tags/jquery/"/>
    
    <category term="jquery mobile" scheme="https://richardcooke.info/tags/jquery-mobile/"/>
    
  </entry>
  
  <entry>
    <title>Setup a callback in C# with Moq using params parameters</title>
    <link href="https://richardcooke.info/en/2014/setup-a-callback-in-c-with-moq-using-params-parameters/"/>
    <id>https://richardcooke.info/en/2014/setup-a-callback-in-c-with-moq-using-params-parameters/</id>
    <published>2014-05-06T20:00:46.000Z</published>
    <updated>2022-05-27T17:09:22.044Z</updated>
    
    <content type="html"><![CDATA[<p>This post explains how to use Moq to get an object from a mocked class where the called method has a <em>params</em> parameter. Here’s the example code we are going to test:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IPersonLogic</span></span><br><span class="line">&#123;</span><br><span class="line">    GetNumberOfPeople(<span class="keyword">params</span> Person[] args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MainProgram</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Go</span>(<span class="params">Person person</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> GetNumberOfPeople(person, <span class="keyword">new</span> Person(<span class="string">&quot;Jessica&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>If you want to keep a record of the name passed to IPersonLogic in the test you need to do it like this:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">TestFixture</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PersonLogicTest</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Test</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Go_Test</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Person testPerson;</span><br><span class="line">        <span class="keyword">var</span> mock = <span class="keyword">new</span> Mock&lt;IPersonLogic&gt;();</span><br><span class="line">        mock.Setup(x =&gt; x.GetNumberOfPeople(It.IsAny&lt;Person&gt;(), It.IsAny&lt;Person&gt;())).Callback</span><br><span class="line">        (</span><br><span class="line">            (Person p1, Person p2) =&gt; &#123; testPerson = p1; &#125;</span><br><span class="line">        );</span><br><span class="line">        Repository.Add(mock);</span><br><span class="line">        <span class="keyword">new</span> MainProgram().Go(<span class="keyword">new</span> Person(<span class="string">&quot;Paul));</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>If you put a breakpoint on line 15 you’ll see that testPerson is now Paul. Note that the code below does NOT work (and is how most people first try to do this):</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mock.Setup(x =&gt; x.GetNumberOfPeople(It.IsAny&lt;Person&gt;(), It.IsAny&lt;Person&gt;())).Callback</span><br><span class="line">(</span><br><span class="line">    (Person[] args) =&gt; &#123; testPerson = args[<span class="number">0</span>]; &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This post explains how to use Moq to get an object from a mocked class where the called method has a &lt;em&gt;params&lt;/em&gt; parameter</summary>
        
      
    
    
    
    <category term="c#" scheme="https://richardcooke.info/categories/c/"/>
    
    
    <category term="c#" scheme="https://richardcooke.info/tags/c/"/>
    
    <category term="moq" scheme="https://richardcooke.info/tags/moq/"/>
    
    <category term="testing" scheme="https://richardcooke.info/tags/testing/"/>
    
  </entry>
  
  <entry>
    <title>jQuery Mobile notification popup</title>
    <link href="https://richardcooke.info/en/2014/jquery-mobile-notification-popup/"/>
    <id>https://richardcooke.info/en/2014/jquery-mobile-notification-popup/</id>
    <published>2014-02-05T20:06:12.000Z</published>
    <updated>2022-05-27T17:09:22.008Z</updated>
    
    <content type="html"><![CDATA[<p>This function adds a jQuery Mobile popup programmatically to a page and displays it.  The user needs to click to dismiss it. If you want it to fade automatically then close it using <code>setTimeout()</code>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">notify</span>(<span class="params">message</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> id = <span class="string">&quot;popupid&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;$(<span class="string">&quot;#&quot;</span>+id).<span class="title function_">remove</span>();&#125; <span class="keyword">catch</span>(e) &#123;&#125;</span><br><span class="line">    <span class="keyword">var</span> popup = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    popup.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-role&quot;</span>, <span class="string">&quot;popup&quot;</span>);</span><br><span class="line">    popup.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-transition&quot;</span>, <span class="string">&quot;pop&quot;</span>);</span><br><span class="line">    popup.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-theme&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">    popup.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-overlay-theme&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">    popup.<span class="title function_">setAttribute</span>(<span class="string">&quot;id&quot;</span>, id);</span><br><span class="line">    popup.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;p style=&#x27;margin:1em 2em 1em 2em&#x27;&gt;&quot;</span> + message + <span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    $(<span class="string">&#x27;div[data-role=&quot;content&quot;]&#x27;</span>).<span class="title function_">append</span>(popup);</span><br><span class="line">    $(<span class="string">&quot;#&quot;</span>+id).<span class="title function_">popup</span>();</span><br><span class="line">    $(<span class="string">&quot;#&quot;</span>+id).<span class="title function_">popup</span>(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">notify</span>(<span class="string">&quot;Stop!&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>Line 3 deletes the popup div if it has been used before.</li><li>Line 10 adds the popup inside the content element of the jQuery Mobile page. This is essential or it won’t display. This is the page without the notification:<br><img src="/nopopup.png" alt="nopopup"></li></ul><p>And this is the page with the notification:<br><img src="/popup.png" alt="popup"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This function adds a jQuery Mobile popup programmatically to a page and displays it.  The user needs to click to dismiss it</summary>
        
      
    
    
    
    <category term="javascript" scheme="https://richardcooke.info/categories/javascript/"/>
    
    <category term="coding" scheme="https://richardcooke.info/categories/javascript/coding/"/>
    
    
    <category term="jquery mobile" scheme="https://richardcooke.info/tags/jquery-mobile/"/>
    
  </entry>
  
  <entry>
    <title>Configuring a machine with PowerShell</title>
    <link href="https://richardcooke.info/en/2014/configuring-a-machine-with-powershell-a-quick-guide-for-beginners/"/>
    <id>https://richardcooke.info/en/2014/configuring-a-machine-with-powershell-a-quick-guide-for-beginners/</id>
    <published>2014-02-04T19:05:17.000Z</published>
    <updated>2022-05-27T17:09:22.007Z</updated>
    
    <content type="html"><![CDATA[<p>This article will show you everything you need to know to use PowerShell to setup Windows services and IIS applications.  It’s aimed at complete beginners and is as concise as possible.</p><h2 id="Why-do-this-in-PowerShell"><a href="#Why-do-this-in-PowerShell" class="headerlink" title="Why do this in PowerShell?"></a>Why do this in PowerShell?</h2><p>I wrote the script discussed in this article to completely automate the configuration of our virtual machines. Whenever a new environment is created for testing or deployment all that needs to be done is to run a script, rather than install and configure everything manually. Why PowerShell? Because it’s the Microsoft standard tool for system administration.</p><h2 id="Install-PowerShell"><a href="#Install-PowerShell" class="headerlink" title="Install PowerShell"></a>Install PowerShell</h2><p>Google the latest version of the Windows Management Framework, download and install it.  <a href="http://www.microsoft.com/en-za/download/details.aspx?id=40855">Version 4 of PowerShell</a> is the latest at the time of writing.</p><p><strong>WARNING</strong> Some of the modules available in PowerShell depend on the version of Windows you have, not the version of PowerShell.  If you find a function you are trying to use just isn’t working check in the MSDN documentation to see if its module is in your version of Windows.</p><h2 id="Windows-PowerShell-ISE-integrated-scripting-environment"><a href="#Windows-PowerShell-ISE-integrated-scripting-environment" class="headerlink" title="Windows PowerShell ISE (integrated scripting environment)"></a>Windows PowerShell ISE (integrated scripting environment)</h2><p>The ISE is a useful text editor for your scripts and can run them too.</p><h3 id="Hotkeys"><a href="#Hotkeys" class="headerlink" title="Hotkeys"></a>Hotkeys</h3><p>- Ctrl 1 to Ctrl 3 change the arrangement of the script and console windows</p><ul><li>Ctrl R switches between the script and console windows</li></ul><p><strong>WARNING</strong> The ISE does not clear the PowerShell session whenever you click run. If you make a change to a script used by another script the change won’t be used. This is because all the functions have already been defined in the session. Instead you have to use only one file, or restart the ISE.</p><h2 id="Allow-PowerShell-to-run-scripts"><a href="#Allow-PowerShell-to-run-scripts" class="headerlink" title="Allow PowerShell to run scripts"></a>Allow PowerShell to run scripts</h2><p>Start a PowerShell command window and run the following command <code>Set-Executionpolicy RemoteSigned</code></p><p>This will allow you to run scripts in the current folder by typing <code>./MyScript.ps1</code></p><h2 id="Make-some-configuration-settings"><a href="#Make-some-configuration-settings" class="headerlink" title="Make some configuration settings"></a>Make some configuration settings</h2><p>Let’s look at a basic script</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;#</span></span><br><span class="line"><span class="comment">Purpose:    </span></span><br><span class="line"><span class="comment">    This script configures a machine.</span></span><br><span class="line"><span class="comment">#&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># The line below ensures we have correct version, it is not just a comment</span></span><br><span class="line"><span class="comment">#requires -Version 3.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#region Settings</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$folders</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    [<span class="type">pscustomobject</span>] <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Books&quot;</span>; file = <span class="string">&quot;C:\temp\Books&quot;</span>; user = <span class="string">&quot;EVERYONE&quot;</span>; &#125;;</span><br><span class="line">    [<span class="type">pscustomobject</span>] <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Sound&quot;</span>; file = <span class="string">&quot;C:\temp\Sound&quot;</span>; user = <span class="string">&quot;EVERYONE&quot;</span>; &#125;;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#endregion</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Starting program&quot;</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$folders</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="variable">$item</span>.file</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Line 1 shows multi-line comments.  </li><li>Line 6 shows single line comments. </li><li>Line 7 shows an interpreter directive - the script won’t run unless PowerShell is the right version.  </li><li>Lines 9 and 16 define a region that you can minimise in the ISE to keep your script uncluttered.  </li><li>Line 11 defines a variable. Variables start with $. The @ symbol means the following lines are all one command (otherwise PowerShell thinks one line is one command; there are no semicolon endings). This line also defines an array.  It casts two anonymous dictionaries of three strings to a pscustomerobject.  </li><li>Line 18 shows that DOS commands are included in PowerShell, and clears the screen.  </li><li>Line 19 allows you to write to the screen and the next few lines show you a foreach loop.</li></ul><h2 id="Put-the-configuration-in-a-separate-file"><a href="#Put-the-configuration-in-a-separate-file" class="headerlink" title="Put the configuration in a separate file"></a>Put the configuration in a separate file</h2><p>Let’s put the configuration arrays in a separate file so we can edit them separately later. Make a new script called Configuration.ps1 and add these lines:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$version</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$folders</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Books&quot;</span>; file = <span class="string">&quot;C:\temp\Books&quot;</span>; user = <span class="string">&quot;EVERYONE&quot;</span>; &#125;;</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Sound&quot;</span>; file = <span class="string">&quot;C:\temp\Sound&quot;</span>; user = <span class="string">&quot;EVERYONE&quot;</span>; &#125;;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable">$windowsServices</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Monitoring Service&quot;</span>;     file = <span class="string">&quot;C:\temp\Movie\SystemsMonitor.exe&quot;</span>;                  user = <span class="string">&quot;NetworkService&quot;</span>;         password = <span class="string">&quot;1gn0red&quot;</span> &#125;;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>We can then make a script that uses these settings like so:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$version</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Importing configuration settings&quot;</span></span><br><span class="line">. <span class="variable">$PSScriptRoot</span>\Configuration.ps1</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$version</span></span><br></pre></td></tr></table></figure><p><strong>WARNING</strong> Note that line 1 won’t work because the variable hasn’t been defined yet. PowerShell doesn’t look forward through a file - functions and variables must be declared before being used. Line 3 is called dot sourcing. It’s as if the other script file had been copied and pasted into that line. It’s more neat to make your script libraries into standalone reusable modules, but we’ll get to that later.</p><h2 id="Functions-and-parameters"><a href="#Functions-and-parameters" class="headerlink" title="Functions and parameters"></a>Functions and parameters</h2><p>Let’s look at a basic function and its use:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-ValueOrUseDefault</span><span class="params">(<span class="variable">$message</span>, <span class="variable">$default</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$input</span> = <span class="built_in">Read-Host</span> <span class="variable">$message</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$input</span> <span class="operator">-eq</span> <span class="variable">$null</span>) &#123; <span class="keyword">return</span> <span class="variable">$default</span> &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$input</span> <span class="operator">-eq</span> <span class="string">&quot;&quot;</span>)    &#123; <span class="keyword">return</span> <span class="variable">$default</span> &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$input</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$scheduledTaskUser</span> = <span class="string">&quot;Richard&quot;</span></span><br><span class="line"><span class="variable">$scheduledTaskUser</span> = <span class="built_in">Get-ValueOrUseDefault</span> (<span class="string">&quot;Enter the user to run scheduled tasks as, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$scheduledTaskUser</span> + <span class="string">&quot;&#x27;&quot;</span>) (scheduledTaskUser)</span><br></pre></td></tr></table></figure><p>Functions work as you’d expect except for a couple of surprises:</p><ul><li>Line 1: PowerShell expects functions to start with a verb from the list found by running Get-Verb.  It won’t error but will warn you.</li><li>Line 4: Comparison operators are -eq for &#x3D;, -ne for &lt;&gt;, -gt for &gt;, and so on. Null, true, and false are represented by $null, $true, and $false.</li><li>Line 10: Functions are not called with parameters in brackets, nor separated by commas.  Parameters are separated only by whitespace. Brackets are used to wrap something that contains spaces into one parameter.</li><li>Parameters are passed by value unless you preceed the formal and actual parameters by ref. If the function can’t find a variable in the parameter list it will create a global variable (like Javascript if you create a variable without using ‘var’).</li></ul><h2 id="Modules-amp-logging"><a href="#Modules-amp-logging" class="headerlink" title="Modules &amp; logging"></a>Modules &amp; logging</h2><p>PowerShell groups code for reuse by making modules (similar to packages or assemblies in other languages). Here’s how to import and use a logging module. Download and unzip this logging <a href="http://gallery.technet.microsoft.com/scriptcenter/PSLog-Send-messages-to-a-db389927">module</a> into a subfolder called PSLog beneath your script. Notice that the folder contains a module manifest file and a code file.  To make your own module just copy this folder and rename the files and manifest information. To import and use the module use this code:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Creating log file&quot;</span></span><br><span class="line"><span class="built_in">Import-Module</span> <span class="variable">$PSScriptRoot</span>\PSLog</span><br><span class="line"><span class="built_in">Start-Log</span> <span class="literal">-LogName</span> PrepareMachineForDTS <span class="literal">-LogPath</span> <span class="variable">$PSScriptRoot</span> <span class="literal">-Level</span> All</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;I&#x27;m in a file and on the screen&quot;</span></span><br></pre></td></tr></table></figure><p>Line 1 will just write to the screen.<br>The module is then imported in line 2 ($PSScriptRoot is the folder the script is in).<br>Line 3 activates it to create a log file and writes further Write-Host output to the file as well as the screen.</p><h2 id="Calling-DOS-commands"><a href="#Calling-DOS-commands" class="headerlink" title="Calling DOS commands"></a>Calling DOS commands</h2><p>If you’re not using Windows 8 or the server version you’ll find many missing PowerShell commands and you’ll have to rely on the standard DOS management applications.  Calling them with the correct parameters can be tricky. PowerShell is usually pretty clever and correctly surrounds a variable’s content with “ “ when passing it as parameter.  But if it doesn’t work put the whole command in a string and run it like this:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$command</span> = <span class="string">&quot;cmd /c &#x27;&quot;</span> + <span class="string">&quot;schtasks /create /tn `&quot;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;`&quot; /TR  `&quot;&quot;</span> + <span class="variable">$item</span>.file + <span class="string">&quot;`&quot; /RU &quot;</span> + <span class="variable">$scheduledTaskUser</span> + <span class="string">&quot; /RP &quot;</span> + <span class="variable">$scheduledTaskUserPassword</span> + <span class="string">&quot; &quot;</span> + <span class="variable">$item</span>.schedule + <span class="string">&quot;&#x27;&quot;</span>  </span><br><span class="line"><span class="variable">$output</span> = <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br></pre></td></tr></table></figure><h2 id="A-full-script-with-useful-functions"><a href="#A-full-script-with-useful-functions" class="headerlink" title="A full script with useful functions"></a>A full script with useful functions</h2><p>That’s about it. We’ve covered the basics of PowerShell and all the suprises for a novice user. The code below gives you a lot of useful functions to create folders, share folders on the network, create IIS applications, create scheduled tasks, and create Windows services. It’s quite simple but if you have questions please ask them in a comment at the bottom of this page.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$folders</span>  = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;file = <span class="string">&quot;C:\temp\movie&quot;</span>;   &#125;;</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;file = <span class="string">&quot;C:\temp\sound&quot;</span>;   &#125;;    </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable">$sharedFolders</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;movie&quot;</span>; file = <span class="string">&quot;C:\movie&quot;</span>; user = <span class="string">&quot;EVERYONE&quot;</span>;     &#125;;</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;sound&quot;</span>; file = <span class="string">&quot;C:\temp\sound&quot;</span>; user = <span class="string">&quot;EVERYONE&quot;</span>;     &#125;;    </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable">$scheduledTasks</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Run movies&quot;</span>; file = <span class="string">&quot;C:\temp\movie\Go.bat&quot;</span>;  enabled = <span class="variable">$true</span>; schedule=<span class="string">&quot; /ST 19:00 /SC DAILY &quot;</span>  &#125;;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable">$windowsServices</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;Monitor movie&quot;</span>;     file = <span class="string">&quot;C:\temp\movie&quot;</span>; user = <span class="string">&quot;NetworkService&quot;</span>; password = <span class="string">&quot;1gn0red&quot;</span> &#125;;    </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable">$virtualDirectories</span> = <span class="selector-tag">@</span>(</span><br><span class="line">    pscustomobject <span class="selector-tag">@</span>&#123;name=<span class="string">&quot;MovieSite&quot;</span>; file=<span class="string">&quot;C:\temp\movie\webapp&quot;</span>; user=<span class="string">&quot;NetworkService&quot;</span>; password = <span class="string">&quot;1gn0red&quot;</span>;   authentication=<span class="string">&quot;Windows&quot;</span>          &#125;;  </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The line below ensures we have correct version, it is not just a comment</span></span><br><span class="line"><span class="comment">#requires -Version 3.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#region Functions</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-ParentFolder</span><span class="params">(<span class="variable">$folder</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">Split-Path</span> <span class="literal">-parent</span> <span class="variable">$folder</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Confirm-WindowsServiceExists</span><span class="params">(<span class="variable">$name</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Get-Service</span> <span class="variable">$name</span> <span class="literal">-ErrorAction</span> SilentlyContinue)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Remove-WindowsServiceIfItExists</span><span class="params">(<span class="variable">$name</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="variable">$exists</span> = <span class="built_in">Confirm-WindowsServiceExists</span> <span class="variable">$name</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$exists</span>)</span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Remove Windows service - &quot;</span> <span class="variable">$name</span></span><br><span class="line">        <span class="variable">$output</span> = (sc.exe delete <span class="variable">$name</span>)</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br><span class="line">    &#125;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Confirm-ScheduledTaskExists</span><span class="params">(<span class="variable">$name</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    schtasks /query /TN <span class="variable">$name</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span>&gt;null       <span class="comment">#hide error and standard output from displaying</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$LastExitCode</span> <span class="operator">-eq</span> <span class="number">0</span>       <span class="comment">#if task exists exit code won&#x27;t be an error</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Remove-ScheduledTaskIfItExists</span><span class="params">(<span class="variable">$name</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="variable">$exists</span> = <span class="built_in">Confirm-ScheduledTaskExists</span> <span class="variable">$name</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$exists</span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="variable">$output</span> = (schtasks /delete /f /tn <span class="variable">$name</span>)  <span class="comment">#/f = suppress confirmation message so it can delete without user input            </span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br><span class="line">    &#125;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Initialize-Logging</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$parentFolder</span> = <span class="built_in">Get-Parent</span><span class="literal">-Folder</span> <span class="variable">$PSScriptRoot</span></span><br><span class="line">    <span class="built_in">Import-Module</span> <span class="variable">$parentFolder</span>\PSLog       <span class="comment"># allows us to write a log file of this machine setup.  sourced from: http://gallery.technet.microsoft.com/scriptcenter/PSLog-Send-messages-to-a-db389927</span></span><br><span class="line">    <span class="built_in">Start-Log</span> <span class="literal">-LogName</span> PrepareMachineForDTS <span class="literal">-LogPath</span> <span class="variable">$parentFolder</span> <span class="literal">-Level</span> All</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Protect-Password</span><span class="params">(<span class="variable">$password</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="variable">$password</span> | <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-asPlainText</span> <span class="literal">-Force</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-WindowsServices</span><span class="params">(<span class="variable">$windowsServices</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Creating Windows services&quot;</span>        </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$windowsServices</span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Adding Windows service - &quot;</span> <span class="variable">$item</span>.name</span><br><span class="line">        <span class="variable">$securePassword</span> = <span class="built_in">Protect-Password</span> <span class="variable">$item</span>.password</span><br><span class="line">        <span class="variable">$user</span> = <span class="built_in">New-Object</span> System.Management.Automation.PSCredential (<span class="variable">$item</span>.user, <span class="variable">$securePassword</span> )</span><br><span class="line">        <span class="built_in">New-Service</span> <span class="literal">-name</span> <span class="variable">$item</span>.name <span class="literal">-binaryPathName</span> <span class="variable">$item</span>.file <span class="literal">-credential</span> <span class="variable">$user</span></span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-ScheduledTasks</span><span class="params">(<span class="variable">$scheduledTaskUser</span>, <span class="variable">$scheduledTaskUserPassword</span>, <span class="variable">$scheduledTasks</span>)</span></span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Creating scheduled tasks&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$scheduledTasks</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$command</span> = <span class="string">&quot;cmd /c &#x27;&quot;</span> + <span class="string">&quot;schtasks /create /tn `&quot;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;`&quot; /TR  `&quot;&quot;</span> + <span class="variable">$item</span>.file + <span class="string">&quot;`&quot; /RU &quot;</span> + <span class="variable">$scheduledTaskUser</span> + <span class="string">&quot; /RP &quot;</span> + <span class="variable">$scheduledTaskUserPassword</span> + <span class="string">&quot; &quot;</span> + <span class="variable">$item</span>.schedule + <span class="string">&quot;&#x27;&quot;</span>  </span><br><span class="line">        <span class="variable">$command</span></span><br><span class="line">        <span class="variable">$output</span> = <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="variable">$output</span>        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$item</span>.enabled <span class="operator">-eq</span> <span class="variable">$true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$command</span> = <span class="string">&quot;schtasks /change /tn `&quot;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;`&quot; /DISABLE&quot;</span>  </span><br><span class="line">        <span class="variable">$command</span></span><br><span class="line">        <span class="variable">$output</span> = <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br><span class="line">    &#125;            </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Remove-ScheduledTasks</span><span class="params">(<span class="variable">$scheduledTasks</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Deleting scheduled tasks if they exist&quot;</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$scheduledTasks</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Remove-ScheduledTaskIfItExists</span>(<span class="variable">$item</span>.name)</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Remove-WindowsServices</span><span class="params">(<span class="variable">$services</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Deleting Windows services if they exist&quot;</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$services</span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="built_in">Remove-WindowsServiceIfItExists</span>(<span class="variable">$item</span>.name)</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-ValueOrUseDefault</span><span class="params">(<span class="variable">$message</span>, <span class="variable">$default</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$input</span> = <span class="built_in">Read-Host</span> <span class="variable">$message</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$input</span> <span class="operator">-eq</span> <span class="variable">$null</span>) &#123; <span class="keyword">return</span> <span class="variable">$default</span> &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$input</span> <span class="operator">-eq</span> <span class="string">&quot;&quot;</span>)    &#123; <span class="keyword">return</span> <span class="variable">$default</span> &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$input</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-AppPool</span><span class="params">(<span class="variable">$virtualDirectory</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Creating IIS app pool - &quot;</span> <span class="variable">$virtualDirectory</span>.name    </span><br><span class="line">    <span class="variable">$poolName</span> = <span class="string">&quot;IIS:\AppPools\&quot;</span> + <span class="variable">$virtualDirectory</span>.name</span><br><span class="line">    <span class="variable">$pool</span> = <span class="built_in">New-Item</span> <span class="variable">$poolName</span></span><br><span class="line">    <span class="variable">$pool</span>.processModel.userName = <span class="variable">$virtualDirectory</span>.user</span><br><span class="line">    <span class="variable">$pool</span>.processModel.password = <span class="variable">$virtualDirectory</span>.password</span><br><span class="line">    <span class="variable">$pool</span>.processModel.identityType = <span class="string">&quot;SpecificUser&quot;</span></span><br><span class="line">    <span class="variable">$pool</span>.processModel.idleTimeout = TimeSpan <span class="string">&quot;0.00:00:00&quot;</span></span><br><span class="line">    <span class="variable">$pool</span>.managedRuntimeVersion = <span class="string">&quot;4.0&quot;</span></span><br><span class="line">    <span class="variable">$pool</span>.recycling.periodicRestart.time = TimeSpan <span class="string">&quot;00:00:00&quot;</span></span><br><span class="line">    <span class="variable">$pool</span> | <span class="built_in">Set-Item</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-VirtualDirectory</span><span class="params">(<span class="variable">$virtualDirectory</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Creating IIS virtual directory - &quot;</span> <span class="variable">$virtualDirectory</span>.name</span><br><span class="line">    <span class="variable">$name</span> = <span class="string">&quot;IIS:\Sites\Default Web Site\&quot;</span> + <span class="variable">$virtualDirectory</span>.name</span><br><span class="line">    <span class="built_in">New-Item</span> <span class="variable">$name</span> <span class="literal">-Type</span> Application <span class="literal">-physicalPath</span> <span class="variable">$virtualDirectory</span>.file</span><br><span class="line">    <span class="built_in">Set-ItemProperty</span> <span class="variable">$name</span> <span class="literal">-Name</span> applicationPool <span class="literal">-Value</span> <span class="variable">$virtualDirectory</span>.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-WindowsAuthenticationToAppIfNecessary</span><span class="params">(<span class="variable">$virtualDirectory</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$virtualDirectory</span>.authentication <span class="operator">-ne</span> <span class="string">&quot;Windows&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Setting Windows authentication for IIS app - &quot;</span> <span class="variable">$virtualDirectory</span>.name</span><br><span class="line">    <span class="variable">$command</span> = <span class="variable">$env:SystemRoot</span> + <span class="string">&quot;\system32\inetsrv\AppCmd.exe set config `&quot;Default Web Site/&quot;</span>+<span class="variable">$virtualDirectory</span>.name+<span class="string">&quot;`&quot; -section:system.webServer/security/authentication/anonymousAuthentication /enabled:`&quot;False`&quot; /commit:apphost&quot;</span></span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="variable">$command</span></span><br><span class="line">    <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$command</span> = <span class="variable">$env:SystemRoot</span> + <span class="string">&quot;\system32\inetsrv\AppCmd.exe set config `&quot;Default Web Site/&quot;</span>+<span class="variable">$virtualDirectory</span>.name+<span class="string">&quot;`&quot; -section:system.webServer/security/authentication/windowsAuthentication /enabled:`&quot;True`&quot; /commit:apphost&quot;</span></span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="variable">$command</span></span><br><span class="line">    <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-VirtualDirectories</span><span class="params">(<span class="variable">$virtualDirectories</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    C:\Windows\system32\inetsrv\AppCmd.exe unlock config  /section:security/authentication/anonymousAuthentication <span class="comment"># allow us to make changed to authentication types of apps</span></span><br><span class="line">    C:\Windows\system32\inetsrv\AppCmd.exe unlock config  /section:security/authentication/windowsAuthentication   <span class="comment"># allow us to make changed to authentication types of apps</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$virtualDirectory</span> <span class="keyword">in</span> <span class="variable">$virtualDirectories</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Add-AppPool</span> <span class="variable">$virtualDirectory</span></span><br><span class="line">        <span class="built_in">Add-VirtualDirectory</span> <span class="variable">$virtualDirectory</span>                </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Remove-VirtualDirectories</span><span class="params">(<span class="variable">$virtualDirectories</span>)</span></span></span><br><span class="line">&#123;            </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$virtualDirectories</span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="variable">$pool</span> = <span class="string">&quot;IIS:\AppPools\&quot;</span> + <span class="variable">$item</span>.name</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Test-Path</span> <span class="variable">$pool</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;Removing IIS app pool - &quot;</span> <span class="variable">$item</span>.name            </span><br><span class="line">            <span class="built_in">Remove-Item</span> <span class="variable">$pool</span> <span class="literal">-Force</span> <span class="literal">-Recurse</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$exists</span> = <span class="built_in">Confirm-VirtualDirectoryExists</span> <span class="variable">$item</span>.name</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$exists</span> <span class="operator">-eq</span> <span class="variable">$false</span> <span class="operator">-or</span> <span class="variable">$item</span>.name <span class="operator">-eq</span> <span class="string">&quot;&quot;</span> <span class="operator">-or</span> <span class="variable">$item</span>.name <span class="operator">-eq</span> <span class="variable">$null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Removing IIS virtual directory - &quot;</span> <span class="variable">$item</span>.name</span><br><span class="line">        <span class="variable">$parameter</span> = <span class="string">&quot;IIS:\Sites\Default Web Site\&quot;</span> + <span class="variable">$item</span>.name</span><br><span class="line">        <span class="built_in">Remove-Item</span> <span class="variable">$parameter</span> <span class="literal">-Recurse</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Confirm-VirtualDirectoryExists</span><span class="params">(<span class="variable">$name</span>)</span></span></span><br><span class="line">&#123;   </span><br><span class="line">    <span class="variable">$parameter</span> = <span class="string">&quot;IIS:\Sites\Default Web Site\&quot;</span> + <span class="variable">$item</span>.name</span><br><span class="line">    <span class="built_in">Get-Item</span> <span class="variable">$parameter</span> <span class="literal">-ErrorAction</span> SilentlyContinue    </span><br><span class="line">    <span class="keyword">return</span> (<span class="variable">$</span>?) <span class="comment">#if last command was successful return true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-WindowsServiceUsers</span><span class="params">(<span class="variable">$windowsServices</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$windowsServices</span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="variable">$message</span> =   <span class="string">&quot;Enter the user to run the Windows service &#x27;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;&#x27; as, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$item</span>.user + <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">        <span class="variable">$item</span>.user = <span class="built_in">Get-ValueOrUseDefault</span> <span class="variable">$message</span> <span class="variable">$item</span>.user</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$message</span> =   <span class="string">&quot;Enter the password for this user, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$item</span>.password + <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">        <span class="variable">$item</span>.password = <span class="built_in">Get-ValueOrUseDefault</span> <span class="variable">$message</span> <span class="variable">$item</span>.password</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-IisUsers</span><span class="params">(<span class="variable">$virtualDirectories</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$virtualDirectories</span>)</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="variable">$message</span> =   <span class="string">&quot;Enter the user to run the IIS app &#x27;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;&#x27; as, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$item</span>.user + <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">        <span class="variable">$item</span>.user = <span class="built_in">Get-ValueOrUseDefault</span> <span class="variable">$message</span> <span class="variable">$item</span>.user</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$message</span> =   <span class="string">&quot;Enter the password for this user, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$item</span>.password + <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">        <span class="variable">$item</span>.password = <span class="built_in">Get-ValueOrUseDefault</span> <span class="variable">$message</span> <span class="variable">$item</span>.password</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-FolderIfItDoesNotExist</span><span class="params">(<span class="variable">$path</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$folderExists</span> = <span class="built_in">Test-Path</span> <span class="literal">-Path</span> <span class="variable">$path</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$folderExists</span> <span class="operator">-eq</span> <span class="variable">$false</span>) <span class="comment"># leave folder alone if it exists</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Adding new folder &quot;</span> <span class="variable">$path</span></span><br><span class="line">        <span class="variable">$output</span> = <span class="built_in">New-Item</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Path</span> <span class="variable">$path</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-Folders</span><span class="params">(<span class="variable">$folders</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$folders</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Add-FolderIfItDoesNotExist</span> <span class="variable">$item</span>.file</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Add-SharedFolders</span><span class="params">(<span class="variable">$sharedFolders</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Adding folders shared on network&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$share</span> = WMICLASS <span class="string">&quot;WIN32_Share&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">in</span> <span class="variable">$sharedFolders</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Add-FolderIfItDoesNotExist</span> <span class="variable">$item</span>.file    </span><br><span class="line"></span><br><span class="line">        <span class="variable">$command</span> = <span class="string">&quot;(Get-WmiObject -Class Win32_Share -ComputerName . -Filter `&quot;Name=&#x27;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;&#x27;`&quot;)&quot;</span></span><br><span class="line">        <span class="variable">$shareExists</span> = <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$shareExists</span> <span class="operator">-ne</span>  <span class="variable">$null</span>)  <span class="comment"># remove share if it exists, in case it points to the wrong folder</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;Deleting network share - &quot;</span> <span class="variable">$item</span>.name    </span><br><span class="line">            <span class="variable">$command</span> = <span class="string">&quot;(Get-WmiObject -Class Win32_Share -ComputerName . -Filter `&quot;Name=&#x27;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;&#x27;`&quot;).InvokeMethod(`&quot;Delete`&quot;,`$null)&quot;</span></span><br><span class="line">            <span class="variable">$command</span></span><br><span class="line">            <span class="variable">$output</span> = <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Adding network share - &quot;</span> <span class="variable">$item</span>.name</span><br><span class="line">        <span class="comment">#$output = $share.Create($item.file, $item.name, 0)  # the powershell way of doing it doesn&#x27;t grant rights</span></span><br><span class="line">        <span class="variable">$command</span> = <span class="string">&quot;cmd /c &#x27; net share `&quot;&quot;</span> + <span class="variable">$item</span>.name + <span class="string">&quot;`&quot;=`&quot;&quot;</span>+<span class="variable">$item</span>.file+<span class="string">&quot;`&quot; /GRANT:&quot;</span>+<span class="variable">$item</span>.user+<span class="string">&quot;,FULL&#x27;&quot;</span></span><br><span class="line">        <span class="variable">$output</span> = <span class="built_in">Invoke-Expression</span> <span class="variable">$command</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="variable">$output</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Open-FireWallPort</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;Opening firewall port 8085 for TCP on the domain only.&quot;</span></span><br><span class="line">    <span class="variable">$port</span> = <span class="built_in">New-Object</span> <span class="literal">-ComObject</span> HNetCfg.FWOpenPort</span><br><span class="line">    <span class="variable">$port</span>.Port = <span class="number">8085</span></span><br><span class="line">    <span class="variable">$port</span>.Name = <span class="string">&#x27;Movie port has been opened&#x27;</span></span><br><span class="line">    <span class="variable">$port</span>.Enabled = <span class="variable">$true</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fwMgr</span> = <span class="built_in">New-Object</span> <span class="literal">-ComObject</span> HNetCfg.FwMgr</span><br><span class="line">    <span class="variable">$profile</span>=<span class="variable">$fwMgr</span>.LocalPolicy.GetProfileByType(<span class="number">0</span>)  <span class="comment">#domain profile only</span></span><br><span class="line">    <span class="variable">$profile</span>.GloballyOpenPorts.Add(<span class="variable">$port</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#endregion</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Starting program&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Creating log file&quot;</span></span><br><span class="line"><span class="built_in">Import-Module</span> <span class="variable">$PSScriptRoot</span>\PSLog       <span class="comment"># allows us to write a log file of this machine setup.  sourced from: http://gallery.technet.microsoft.com/scriptcenter/PSLog-Send-messages-to-a-db389927</span></span><br><span class="line"><span class="built_in">Start-Log</span> <span class="literal">-LogName</span> PrepareMachineForDTS <span class="literal">-LogPath</span> <span class="variable">$PSScriptRoot</span> <span class="literal">-Level</span> All</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;___________________________________________________&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$scheduledTaskUser</span> = <span class="string">&quot;NetworkService&quot;</span></span><br><span class="line"><span class="variable">$scheduledTaskUserPassword</span> = <span class="string">&quot;1gn0r3d&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Importing PowerShell IIS functions&quot;</span></span><br><span class="line"><span class="built_in">Import-Module</span> WebAdministration</span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Getting all settings needed from the user&quot;</span></span><br><span class="line"><span class="built_in">Get-WindowsServiceUsers</span> <span class="variable">$windowsServices</span></span><br><span class="line"><span class="built_in">Get-IisUsers</span>(<span class="variable">$virtualDirectories</span>)</span><br><span class="line"><span class="variable">$scheduledTaskUser</span> = <span class="built_in">Get-ValueOrUseDefault</span> (<span class="string">&quot;Enter the user to run scheduled tasks as, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$scheduledTaskUser</span> + <span class="string">&quot;&#x27;&quot;</span>) (scheduledTaskUser)</span><br><span class="line"><span class="variable">$scheduledTaskUserPassword</span> = <span class="built_in">Get-ValueOrUseDefault</span> (<span class="string">&quot;Enter the password for this user, or push enter to use the default value &#x27;&quot;</span> + <span class="variable">$scheduledTaskUserPassword</span> + <span class="string">&quot;&#x27;&quot;</span>) (scheduledTaskUserPassword)</span><br><span class="line"></span><br><span class="line"><span class="built_in">Open-FireWallPort</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Add-Folders</span> <span class="variable">$folders</span></span><br><span class="line"><span class="built_in">Add-SharedFolders</span> <span class="variable">$sharedFolders</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Remove-ScheduledTasks</span> <span class="variable">$scheduledTasks</span></span><br><span class="line"><span class="built_in">Add-ScheduledTasks</span> <span class="variable">$scheduledTaskUser</span> <span class="variable">$scheduledTaskUserPassword</span> <span class="variable">$scheduledTasks</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Remove-WindowsServices</span> <span class="variable">$windowsServices</span></span><br><span class="line"><span class="built_in">Add-WindowsServices</span> <span class="variable">$windowsServices</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Remove-VirtualDirectories</span> <span class="variable">$virtualDirectories</span></span><br><span class="line"><span class="built_in">Add-VirtualDirectories</span> <span class="variable">$virtualDirectories</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Closing log file&quot;</span></span><br><span class="line"><span class="built_in">Stop-Log</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Log closed. Program finished&quot;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># The line below ensures we have correct version, it is not just a comment</span></span><br><span class="line"><span class="comment">#requires -Version 3.0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#region Settings</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">$apiSourceFolder</span> = <span class="string">&quot;.\src\WebAPI\*&quot;</span></span><br><span class="line"><span class="variable">$apiDeploymentFolder</span> = <span class="string">&quot;\\10.10.10.30\Web.Api.V1.Dev&quot;</span></span><br><span class="line"><span class="variable">$configFilename</span> = <span class="variable">$apiDeploymentFolder</span> + <span class="string">&quot;\Web.config&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#endregion</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Starting program&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Copy contents of web api folder to dev&quot;</span></span><br><span class="line"><span class="built_in">Copy-Item</span> <span class="variable">$apiSourceFolder</span> <span class="variable">$apiDeploymentFolder</span> <span class="literal">-recurse</span> <span class="literal">-force</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Change dev config file&quot;</span></span><br><span class="line">(<span class="built_in">Get-Content</span> <span class="variable">$configFilename</span>).replace(<span class="string">&#x27;connectionString=&quot;Dsn=DEV64&quot;&#x27;</span>,<span class="string">&#x27;connectionString=&quot;Dsn=CLB-DEV&quot;&#x27;</span>) | <span class="built_in">Set-Content</span> <span class="variable">$configFilename</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Finished&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This article will show you everything you need to know to use PowerShell to setup Windows services and IIS applications.  It’s aimed at complete beginners and is as concise as possible</summary>
        
      
    
    
    
    <category term="powershell" scheme="https://richardcooke.info/categories/powershell/"/>
    
    <category term="programming" scheme="https://richardcooke.info/categories/powershell/programming/"/>
    
    
    <category term="iis" scheme="https://richardcooke.info/tags/iis/"/>
    
    <category term="powershell" scheme="https://richardcooke.info/tags/powershell/"/>
    
    <category term="windows service" scheme="https://richardcooke.info/tags/windows-service/"/>
    
  </entry>
  
</feed>
